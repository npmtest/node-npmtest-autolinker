{"/home/travis/build/npmtest/node-npmtest-autolinker/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-autolinker/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_autolinker */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-autolinker/lib.npmtest_autolinker.js":{"path":"/home/travis/build/npmtest/node-npmtest-autolinker/lib.npmtest_autolinker.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":55}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":61}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_autolinker */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_autolinker = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_autolinker = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-autolinker/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-autolinker/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":54}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":68},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-autolinker && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_autolinker */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_autolinker","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_autolinker.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_autolinker.rollup.js'] =","            local.assetsDict['/assets.npmtest_autolinker.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_autolinker.__dirname + '/lib.npmtest_autolinker.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-autolinker/node_modules/autolinker/dist/Autolinker.js":{"path":"/home/travis/build/npmtest/node-npmtest-autolinker/node_modules/autolinker/dist/Autolinker.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":1,"35":0,"36":0,"37":1,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":1,"143":1,"144":1,"145":1,"146":1,"147":0,"148":20,"149":102,"150":102,"151":20,"152":0,"153":0,"154":0,"155":0,"156":20,"157":20,"158":20,"159":20,"160":20,"161":13,"162":7,"163":0,"164":20,"165":20,"166":20,"167":20,"168":20,"169":20,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":1,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":1,"241":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":1,"282":1,"283":1,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":1,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":1,"324":0,"325":0,"326":1,"327":0,"328":0,"329":0,"330":1,"331":0,"332":1,"333":0,"334":1,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":1,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":1,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":1,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":1,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":1,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":1,"452":1,"453":0,"454":0,"455":0,"456":1,"457":1,"458":1,"459":0,"460":0,"461":0,"462":0,"463":0,"464":1,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":1,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":1,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":1,"494":1,"495":1,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":1,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":1,"559":0,"560":1,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":1,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":1},"b":{"1":[0,1],"2":[1,0],"3":[1,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0],"13":[0,0],"14":[0,0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[102,0],"58":[0,0],"59":[0,0],"60":[13,7],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0,0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0,0],"112":[0,0],"113":[0,0],"114":[0,0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0,0],"150":[0,0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0,0,0,0,0],"158":[0,0],"159":[0,0,0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":20,"28":0,"29":20,"30":20,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":1,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":1,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":26}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":8},"end":{"line":18,"column":19}}},"3":{"name":"(anonymous_3)","line":129,"loc":{"start":{"line":129,"column":17},"end":{"line":129,"column":33}}},"4":{"name":"(anonymous_4)","line":189,"loc":{"start":{"line":189,"column":18},"end":{"line":189,"column":50}}},"5":{"name":"(anonymous_5)","line":229,"loc":{"start":{"line":229,"column":19},"end":{"line":229,"column":51}}},"6":{"name":"(anonymous_6)","line":512,"loc":{"start":{"line":512,"column":20},"end":{"line":512,"column":37}}},"7":{"name":"(anonymous_7)","line":538,"loc":{"start":{"line":538,"column":27},"end":{"line":538,"column":51}}},"8":{"name":"(anonymous_8)","line":563,"loc":{"start":{"line":563,"column":24},"end":{"line":563,"column":45}}},"9":{"name":"(anonymous_9)","line":607,"loc":{"start":{"line":607,"column":9},"end":{"line":607,"column":32}}},"10":{"name":"(anonymous_10)","line":658,"loc":{"start":{"line":658,"column":18},"end":{"line":658,"column":38}}},"11":{"name":"(anonymous_11)","line":660,"loc":{"start":{"line":660,"column":16},"end":{"line":660,"column":33}}},"12":{"name":"(anonymous_12)","line":698,"loc":{"start":{"line":698,"column":25},"end":{"line":698,"column":45}}},"13":{"name":"(anonymous_13)","line":701,"loc":{"start":{"line":701,"column":39},"end":{"line":701,"column":57}}},"14":{"name":"(anonymous_14)","line":702,"loc":{"start":{"line":702,"column":39},"end":{"line":702,"column":57}}},"15":{"name":"(anonymous_15)","line":703,"loc":{"start":{"line":703,"column":39},"end":{"line":703,"column":57}}},"16":{"name":"(anonymous_16)","line":704,"loc":{"start":{"line":704,"column":39},"end":{"line":704,"column":57}}},"17":{"name":"(anonymous_17)","line":706,"loc":{"start":{"line":706,"column":20},"end":{"line":706,"column":34}}},"18":{"name":"(anonymous_18)","line":709,"loc":{"start":{"line":709,"column":20},"end":{"line":709,"column":34}}},"19":{"name":"(anonymous_19)","line":712,"loc":{"start":{"line":712,"column":20},"end":{"line":712,"column":34}}},"20":{"name":"(anonymous_20)","line":740,"loc":{"start":{"line":740,"column":13},"end":{"line":740,"column":38}}},"21":{"name":"(anonymous_21)","line":780,"loc":{"start":{"line":780,"column":8},"end":{"line":780,"column":31}}},"22":{"name":"(anonymous_22)","line":813,"loc":{"start":{"line":813,"column":24},"end":{"line":813,"column":42}}},"23":{"name":"(anonymous_23)","line":845,"loc":{"start":{"line":845,"column":17},"end":{"line":845,"column":28}}},"24":{"name":"(anonymous_24)","line":863,"loc":{"start":{"line":863,"column":15},"end":{"line":863,"column":26}}},"25":{"name":"(anonymous_25)","line":905,"loc":{"start":{"line":905,"column":17},"end":{"line":905,"column":28}}},"26":{"name":"(anonymous_26)","line":944,"loc":{"start":{"line":944,"column":18},"end":{"line":944,"column":29}}},"27":{"name":"(anonymous_27)","line":964,"loc":{"start":{"line":964,"column":10},"end":{"line":964,"column":32}}},"28":{"name":"(anonymous_28)","line":983,"loc":{"start":{"line":983,"column":12},"end":{"line":983,"column":34}}},"29":{"name":"(anonymous_29)","line":1002,"loc":{"start":{"line":1002,"column":10},"end":{"line":1002,"column":45}}},"30":{"name":"(anonymous_30)","line":1005,"loc":{"start":{"line":1005,"column":10},"end":{"line":1005,"column":21}}},"31":{"name":"(anonymous_31)","line":1012,"loc":{"start":{"line":1012,"column":14},"end":{"line":1012,"column":25}}},"32":{"name":"(anonymous_32)","line":1036,"loc":{"start":{"line":1036,"column":12},"end":{"line":1036,"column":56}}},"33":{"name":"(anonymous_33)","line":1060,"loc":{"start":{"line":1060,"column":11},"end":{"line":1060,"column":36}}},"34":{"name":"(anonymous_34)","line":1087,"loc":{"start":{"line":1087,"column":10},"end":{"line":1087,"column":30}}},"35":{"name":"(anonymous_35)","line":1119,"loc":{"start":{"line":1119,"column":19},"end":{"line":1119,"column":47}}},"36":{"name":"(anonymous_36)","line":1144,"loc":{"start":{"line":1144,"column":8},"end":{"line":1144,"column":24}}},"37":{"name":"(anonymous_37)","line":1275,"loc":{"start":{"line":1275,"column":15},"end":{"line":1275,"column":31}}},"38":{"name":"(anonymous_38)","line":1288,"loc":{"start":{"line":1288,"column":14},"end":{"line":1288,"column":34}}},"39":{"name":"(anonymous_39)","line":1299,"loc":{"start":{"line":1299,"column":14},"end":{"line":1299,"column":25}}},"40":{"name":"(anonymous_40)","line":1311,"loc":{"start":{"line":1311,"column":11},"end":{"line":1311,"column":43}}},"41":{"name":"(anonymous_41)","line":1325,"loc":{"start":{"line":1325,"column":11},"end":{"line":1325,"column":32}}},"42":{"name":"(anonymous_42)","line":1336,"loc":{"start":{"line":1336,"column":12},"end":{"line":1336,"column":30}}},"43":{"name":"(anonymous_43)","line":1349,"loc":{"start":{"line":1349,"column":12},"end":{"line":1349,"column":23}}},"44":{"name":"(anonymous_44)","line":1360,"loc":{"start":{"line":1360,"column":12},"end":{"line":1360,"column":33}}},"45":{"name":"(anonymous_45)","line":1371,"loc":{"start":{"line":1371,"column":12},"end":{"line":1371,"column":33}}},"46":{"name":"(anonymous_46)","line":1396,"loc":{"start":{"line":1396,"column":15},"end":{"line":1396,"column":36}}},"47":{"name":"(anonymous_47)","line":1422,"loc":{"start":{"line":1422,"column":12},"end":{"line":1422,"column":23}}},"48":{"name":"(anonymous_48)","line":1433,"loc":{"start":{"line":1433,"column":12},"end":{"line":1433,"column":33}}},"49":{"name":"(anonymous_49)","line":1444,"loc":{"start":{"line":1444,"column":16},"end":{"line":1444,"column":33}}},"50":{"name":"(anonymous_50)","line":1456,"loc":{"start":{"line":1456,"column":16},"end":{"line":1456,"column":27}}},"51":{"name":"(anonymous_51)","line":1466,"loc":{"start":{"line":1466,"column":18},"end":{"line":1466,"column":29}}},"52":{"name":"(anonymous_52)","line":1483,"loc":{"start":{"line":1483,"column":17},"end":{"line":1483,"column":28}}},"53":{"name":"(anonymous_53)","line":1510,"loc":{"start":{"line":1510,"column":23},"end":{"line":1510,"column":34}}},"54":{"name":"(anonymous_54)","line":1642,"loc":{"start":{"line":1642,"column":15},"end":{"line":1642,"column":31}}},"55":{"name":"(anonymous_55)","line":1659,"loc":{"start":{"line":1659,"column":9},"end":{"line":1659,"column":27}}},"56":{"name":"(anonymous_56)","line":1677,"loc":{"start":{"line":1677,"column":15},"end":{"line":1677,"column":33}}},"57":{"name":"(anonymous_57)","line":1721,"loc":{"start":{"line":1721,"column":18},"end":{"line":1721,"column":36}}},"58":{"name":"(anonymous_58)","line":1748,"loc":{"start":{"line":1748,"column":21},"end":{"line":1748,"column":44}}},"59":{"name":"(anonymous_59)","line":1766,"loc":{"start":{"line":1766,"column":14},"end":{"line":1766,"column":37}}},"60":{"name":"(anonymous_60)","line":1815,"loc":{"start":{"line":1815,"column":14},"end":{"line":1815,"column":25}}},"61":{"name":"(anonymous_61)","line":1906,"loc":{"start":{"line":1906,"column":9},"end":{"line":1906,"column":26}}},"62":{"name":"(anonymous_62)","line":1949,"loc":{"start":{"line":1949,"column":32},"end":{"line":1949,"column":49}}},"63":{"name":"(anonymous_63)","line":1972,"loc":{"start":{"line":1972,"column":27},"end":{"line":1972,"column":52}}},"64":{"name":"(anonymous_64)","line":2006,"loc":{"start":{"line":2006,"column":21},"end":{"line":2006,"column":62}}},"65":{"name":"(anonymous_65)","line":2029,"loc":{"start":{"line":2029,"column":21},"end":{"line":2029,"column":72}}},"66":{"name":"(anonymous_66)","line":2049,"loc":{"start":{"line":2049,"column":20},"end":{"line":2049,"column":45}}},"67":{"name":"(anonymous_67)","line":2063,"loc":{"start":{"line":2063,"column":18},"end":{"line":2063,"column":43}}},"68":{"name":"(anonymous_68)","line":2118,"loc":{"start":{"line":2118,"column":15},"end":{"line":2118,"column":31}}},"69":{"name":"(anonymous_69)","line":2141,"loc":{"start":{"line":2141,"column":13},"end":{"line":2141,"column":24}}},"70":{"name":"(anonymous_70)","line":2151,"loc":{"start":{"line":2151,"column":11},"end":{"line":2151,"column":22}}},"71":{"name":"(anonymous_71)","line":2183,"loc":{"start":{"line":2183,"column":11},"end":{"line":2183,"column":22}}},"72":{"name":"(anonymous_72)","line":2193,"loc":{"start":{"line":2193,"column":14},"end":{"line":2193,"column":25}}},"73":{"name":"(anonymous_73)","line":2231,"loc":{"start":{"line":2231,"column":11},"end":{"line":2231,"column":22}}},"74":{"name":"(anonymous_74)","line":2242,"loc":{"start":{"line":2242,"column":14},"end":{"line":2242,"column":25}}},"75":{"name":"(anonymous_75)","line":2253,"loc":{"start":{"line":2253,"column":13},"end":{"line":2253,"column":24}}},"76":{"name":"(anonymous_76)","line":2280,"loc":{"start":{"line":2280,"column":11},"end":{"line":2280,"column":22}}},"77":{"name":"(anonymous_77)","line":2302,"loc":{"start":{"line":2302,"column":11},"end":{"line":2302,"column":22}}},"78":{"name":"(anonymous_78)","line":2366,"loc":{"start":{"line":2366,"column":15},"end":{"line":2366,"column":31}}},"79":{"name":"(anonymous_79)","line":2391,"loc":{"start":{"line":2391,"column":18},"end":{"line":2391,"column":29}}},"80":{"name":"(anonymous_80)","line":2408,"loc":{"start":{"line":2408,"column":13},"end":{"line":2408,"column":32}}},"81":{"name":"(anonymous_81)","line":2419,"loc":{"start":{"line":2419,"column":13},"end":{"line":2419,"column":24}}},"82":{"name":"(anonymous_82)","line":2463,"loc":{"start":{"line":2463,"column":23},"end":{"line":2463,"column":34}}},"83":{"name":"(anonymous_83)","line":2483,"loc":{"start":{"line":2483,"column":12},"end":{"line":2483,"column":23}}},"84":{"name":"(anonymous_84)","line":2512,"loc":{"start":{"line":2512,"column":15},"end":{"line":2512,"column":31}}},"85":{"name":"(anonymous_85)","line":2526,"loc":{"start":{"line":2526,"column":11},"end":{"line":2526,"column":22}}},"86":{"name":"(anonymous_86)","line":2536,"loc":{"start":{"line":2536,"column":12},"end":{"line":2536,"column":23}}},"87":{"name":"(anonymous_87)","line":2546,"loc":{"start":{"line":2546,"column":17},"end":{"line":2546,"column":28}}},"88":{"name":"(anonymous_88)","line":2556,"loc":{"start":{"line":2556,"column":17},"end":{"line":2556,"column":28}}},"89":{"name":"(anonymous_89)","line":2593,"loc":{"start":{"line":2593,"column":15},"end":{"line":2593,"column":31}}},"90":{"name":"(anonymous_90)","line":2609,"loc":{"start":{"line":2609,"column":11},"end":{"line":2609,"column":22}}},"91":{"name":"(anonymous_91)","line":2620,"loc":{"start":{"line":2620,"column":18},"end":{"line":2620,"column":29}}},"92":{"name":"(anonymous_92)","line":2630,"loc":{"start":{"line":2630,"column":14},"end":{"line":2630,"column":25}}},"93":{"name":"(anonymous_93)","line":2640,"loc":{"start":{"line":2640,"column":17},"end":{"line":2640,"column":28}}},"94":{"name":"(anonymous_94)","line":2663,"loc":{"start":{"line":2663,"column":17},"end":{"line":2663,"column":28}}},"95":{"name":"(anonymous_95)","line":2707,"loc":{"start":{"line":2707,"column":15},"end":{"line":2707,"column":31}}},"96":{"name":"(anonymous_96)","line":2723,"loc":{"start":{"line":2723,"column":11},"end":{"line":2723,"column":22}}},"97":{"name":"(anonymous_97)","line":2736,"loc":{"start":{"line":2736,"column":12},"end":{"line":2736,"column":23}}},"98":{"name":"(anonymous_98)","line":2746,"loc":{"start":{"line":2746,"column":17},"end":{"line":2746,"column":28}}},"99":{"name":"(anonymous_99)","line":2756,"loc":{"start":{"line":2756,"column":17},"end":{"line":2756,"column":28}}},"100":{"name":"(anonymous_100)","line":2792,"loc":{"start":{"line":2792,"column":15},"end":{"line":2792,"column":31}}},"101":{"name":"(anonymous_101)","line":2808,"loc":{"start":{"line":2808,"column":11},"end":{"line":2808,"column":22}}},"102":{"name":"(anonymous_102)","line":2818,"loc":{"start":{"line":2818,"column":14},"end":{"line":2818,"column":25}}},"103":{"name":"(anonymous_103)","line":2829,"loc":{"start":{"line":2829,"column":18},"end":{"line":2829,"column":29}}},"104":{"name":"(anonymous_104)","line":2839,"loc":{"start":{"line":2839,"column":17},"end":{"line":2839,"column":28}}},"105":{"name":"(anonymous_105)","line":2857,"loc":{"start":{"line":2857,"column":17},"end":{"line":2857,"column":28}}},"106":{"name":"(anonymous_106)","line":2869,"loc":{"start":{"line":2869,"column":23},"end":{"line":2869,"column":34}}},"107":{"name":"(anonymous_107)","line":2939,"loc":{"start":{"line":2939,"column":15},"end":{"line":2939,"column":31}}},"108":{"name":"(anonymous_108)","line":2999,"loc":{"start":{"line":2999,"column":11},"end":{"line":2999,"column":22}}},"109":{"name":"(anonymous_109)","line":3015,"loc":{"start":{"line":3015,"column":19},"end":{"line":3015,"column":30}}},"110":{"name":"(anonymous_110)","line":3026,"loc":{"start":{"line":3026,"column":10},"end":{"line":3026,"column":21}}},"111":{"name":"(anonymous_111)","line":3045,"loc":{"start":{"line":3045,"column":17},"end":{"line":3045,"column":28}}},"112":{"name":"(anonymous_112)","line":3057,"loc":{"start":{"line":3057,"column":17},"end":{"line":3057,"column":28}}},"113":{"name":"(anonymous_113)","line":3091,"loc":{"start":{"line":3091,"column":21},"end":{"line":3091,"column":37}}},"114":{"name":"(anonymous_114)","line":3104,"loc":{"start":{"line":3104,"column":18},"end":{"line":3104,"column":34}}},"115":{"name":"(anonymous_115)","line":3117,"loc":{"start":{"line":3117,"column":31},"end":{"line":3117,"column":48}}},"116":{"name":"(anonymous_116)","line":3130,"loc":{"start":{"line":3130,"column":23},"end":{"line":3130,"column":46}}},"117":{"name":"(anonymous_117)","line":3170,"loc":{"start":{"line":3170,"column":15},"end":{"line":3170,"column":31}}},"118":{"name":"(anonymous_118)","line":3207,"loc":{"start":{"line":3207,"column":17},"end":{"line":3207,"column":28}}},"119":{"name":"(anonymous_119)","line":3224,"loc":{"start":{"line":3224,"column":16},"end":{"line":3224,"column":33}}},"120":{"name":"(anonymous_120)","line":3290,"loc":{"start":{"line":3290,"column":15},"end":{"line":3290,"column":31}}},"121":{"name":"(anonymous_121)","line":3300,"loc":{"start":{"line":3300,"column":16},"end":{"line":3300,"column":33}}},"122":{"name":"(anonymous_122)","line":3365,"loc":{"start":{"line":3365,"column":15},"end":{"line":3365,"column":30}}},"123":{"name":"(anonymous_123)","line":3430,"loc":{"start":{"line":3430,"column":15},"end":{"line":3430,"column":31}}},"124":{"name":"(anonymous_124)","line":3440,"loc":{"start":{"line":3440,"column":16},"end":{"line":3440,"column":33}}},"125":{"name":"(anonymous_125)","line":3535,"loc":{"start":{"line":3535,"column":17},"end":{"line":3535,"column":28}}},"126":{"name":"(anonymous_126)","line":3625,"loc":{"start":{"line":3625,"column":15},"end":{"line":3625,"column":31}}},"127":{"name":"(anonymous_127)","line":3639,"loc":{"start":{"line":3639,"column":16},"end":{"line":3639,"column":33}}},"128":{"name":"(anonymous_128)","line":3732,"loc":{"start":{"line":3732,"column":34},"end":{"line":3732,"column":55}}},"129":{"name":"(anonymous_129)","line":3765,"loc":{"start":{"line":3765,"column":31},"end":{"line":3765,"column":68}}},"130":{"name":"(anonymous_130)","line":3872,"loc":{"start":{"line":3872,"column":11},"end":{"line":3872,"column":50}}},"131":{"name":"(anonymous_131)","line":3887,"loc":{"start":{"line":3887,"column":20},"end":{"line":3887,"column":48}}},"132":{"name":"(anonymous_132)","line":3894,"loc":{"start":{"line":3894,"column":24},"end":{"line":3894,"column":46}}},"133":{"name":"(anonymous_133)","line":3907,"loc":{"start":{"line":3907,"column":20},"end":{"line":3907,"column":47}}},"134":{"name":"(anonymous_134)","line":3935,"loc":{"start":{"line":3935,"column":36},"end":{"line":3935,"column":75}}},"135":{"name":"(anonymous_135)","line":3957,"loc":{"start":{"line":3957,"column":41},"end":{"line":3957,"column":80}}},"136":{"name":"(anonymous_136)","line":3976,"loc":{"start":{"line":3976,"column":34},"end":{"line":3976,"column":82}}},"137":{"name":"(anonymous_137)","line":3992,"loc":{"start":{"line":3992,"column":37},"end":{"line":3992,"column":78}}},"138":{"name":"(anonymous_138)","line":4030,"loc":{"start":{"line":4030,"column":36},"end":{"line":4030,"column":77}}},"139":{"name":"(anonymous_139)","line":4044,"loc":{"start":{"line":4044,"column":17},"end":{"line":4044,"column":30}}},"140":{"name":"(anonymous_140)","line":4075,"loc":{"start":{"line":4075,"column":16},"end":{"line":4075,"column":32}}},"141":{"name":"(anonymous_141)","line":4095,"loc":{"start":{"line":4095,"column":20},"end":{"line":4095,"column":63}}}},"statementMap":{"1":{"start":{"line":10,"column":1},"end":{"line":4187,"column":4}},"2":{"start":{"line":11,"column":2},"end":{"line":17,"column":3}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":24}},"4":{"start":{"line":13,"column":9},"end":{"line":17,"column":3}},"5":{"start":{"line":14,"column":4},"end":{"line":14,"column":31}},"6":{"start":{"line":16,"column":4},"end":{"line":16,"column":32}},"7":{"start":{"line":129,"column":0},"end":{"line":163,"column":2}},"8":{"start":{"line":130,"column":1},"end":{"line":130,"column":17}},"9":{"start":{"line":132,"column":1},"end":{"line":132,"column":35}},"10":{"start":{"line":134,"column":1},"end":{"line":134,"column":47}},"11":{"start":{"line":135,"column":1},"end":{"line":135,"column":64}},"12":{"start":{"line":136,"column":1},"end":{"line":136,"column":64}},"13":{"start":{"line":137,"column":1},"end":{"line":137,"column":37}},"14":{"start":{"line":138,"column":1},"end":{"line":138,"column":37}},"15":{"start":{"line":139,"column":1},"end":{"line":139,"column":76}},"16":{"start":{"line":140,"column":1},"end":{"line":140,"column":68}},"17":{"start":{"line":141,"column":1},"end":{"line":141,"column":103}},"18":{"start":{"line":144,"column":1},"end":{"line":144,"column":28}},"19":{"start":{"line":145,"column":1},"end":{"line":147,"column":2}},"20":{"start":{"line":146,"column":2},"end":{"line":146,"column":56}},"21":{"start":{"line":150,"column":1},"end":{"line":150,"column":28}},"22":{"start":{"line":151,"column":1},"end":{"line":153,"column":2}},"23":{"start":{"line":152,"column":2},"end":{"line":152,"column":56}},"24":{"start":{"line":155,"column":1},"end":{"line":155,"column":59}},"25":{"start":{"line":156,"column":1},"end":{"line":156,"column":38}},"26":{"start":{"line":157,"column":1},"end":{"line":157,"column":40}},"27":{"start":{"line":158,"column":1},"end":{"line":158,"column":36}},"28":{"start":{"line":160,"column":1},"end":{"line":160,"column":24}},"29":{"start":{"line":161,"column":1},"end":{"line":161,"column":22}},"30":{"start":{"line":162,"column":1},"end":{"line":162,"column":24}},"31":{"start":{"line":189,"column":0},"end":{"line":192,"column":2}},"32":{"start":{"line":190,"column":1},"end":{"line":190,"column":44}},"33":{"start":{"line":191,"column":1},"end":{"line":191,"column":38}},"34":{"start":{"line":229,"column":0},"end":{"line":232,"column":2}},"35":{"start":{"line":230,"column":1},"end":{"line":230,"column":44}},"36":{"start":{"line":231,"column":1},"end":{"line":231,"column":39}},"37":{"start":{"line":243,"column":0},"end":{"line":243,"column":29}},"38":{"start":{"line":246,"column":0},"end":{"line":919,"column":2}},"39":{"start":{"line":513,"column":2},"end":{"line":513,"column":33}},"40":{"start":{"line":513,"column":21},"end":{"line":513,"column":33}},"41":{"start":{"line":515,"column":2},"end":{"line":524,"column":3}},"42":{"start":{"line":516,"column":3},"end":{"line":516,"column":70}},"43":{"start":{"line":519,"column":3},"end":{"line":523,"column":5}},"44":{"start":{"line":539,"column":2},"end":{"line":539,"column":47}},"45":{"start":{"line":539,"column":28},"end":{"line":539,"column":47}},"46":{"start":{"line":541,"column":2},"end":{"line":549,"column":3}},"47":{"start":{"line":542,"column":3},"end":{"line":542,"column":52}},"48":{"start":{"line":545,"column":3},"end":{"line":548,"column":5}},"49":{"start":{"line":564,"column":2},"end":{"line":572,"column":3}},"50":{"start":{"line":565,"column":3},"end":{"line":565,"column":48}},"51":{"start":{"line":568,"column":3},"end":{"line":571,"column":7}},"52":{"start":{"line":608,"column":2},"end":{"line":611,"column":19}},"53":{"start":{"line":615,"column":2},"end":{"line":631,"column":3}},"54":{"start":{"line":616,"column":3},"end":{"line":617,"column":33}},"55":{"start":{"line":619,"column":3},"end":{"line":630,"column":4}},"56":{"start":{"line":620,"column":4},"end":{"line":624,"column":5}},"57":{"start":{"line":621,"column":5},"end":{"line":621,"column":27}},"58":{"start":{"line":623,"column":5},"end":{"line":623,"column":66}},"59":{"start":{"line":626,"column":10},"end":{"line":630,"column":4}},"60":{"start":{"line":627,"column":4},"end":{"line":627,"column":77}},"61":{"start":{"line":629,"column":4},"end":{"line":629,"column":51}},"62":{"start":{"line":637,"column":2},"end":{"line":637,"column":43}},"63":{"start":{"line":643,"column":2},"end":{"line":643,"column":50}},"64":{"start":{"line":645,"column":2},"end":{"line":645,"column":17}},"65":{"start":{"line":660,"column":2},"end":{"line":660,"column":77}},"66":{"start":{"line":660,"column":35},"end":{"line":660,"column":72}},"67":{"start":{"line":662,"column":2},"end":{"line":681,"column":3}},"68":{"start":{"line":663,"column":3},"end":{"line":666,"column":43}},"69":{"start":{"line":668,"column":3},"end":{"line":680,"column":4}},"70":{"start":{"line":670,"column":4},"end":{"line":674,"column":5}},"71":{"start":{"line":671,"column":5},"end":{"line":671,"column":94}},"72":{"start":{"line":672,"column":5},"end":{"line":672,"column":36}},"73":{"start":{"line":673,"column":5},"end":{"line":673,"column":14}},"74":{"start":{"line":677,"column":4},"end":{"line":679,"column":5}},"75":{"start":{"line":678,"column":5},"end":{"line":678,"column":32}},"76":{"start":{"line":683,"column":2},"end":{"line":683,"column":17}},"77":{"start":{"line":699,"column":2},"end":{"line":699,"column":38}},"78":{"start":{"line":701,"column":2},"end":{"line":701,"column":101}},"79":{"start":{"line":701,"column":22},"end":{"line":701,"column":101}},"80":{"start":{"line":701,"column":59},"end":{"line":701,"column":96}},"81":{"start":{"line":702,"column":2},"end":{"line":702,"column":99}},"82":{"start":{"line":702,"column":22},"end":{"line":702,"column":99}},"83":{"start":{"line":702,"column":59},"end":{"line":702,"column":94}},"84":{"start":{"line":703,"column":2},"end":{"line":703,"column":99}},"85":{"start":{"line":703,"column":22},"end":{"line":703,"column":99}},"86":{"start":{"line":703,"column":59},"end":{"line":703,"column":94}},"87":{"start":{"line":704,"column":2},"end":{"line":704,"column":101}},"88":{"start":{"line":704,"column":22},"end":{"line":704,"column":101}},"89":{"start":{"line":704,"column":59},"end":{"line":704,"column":96}},"90":{"start":{"line":705,"column":2},"end":{"line":707,"column":3}},"91":{"start":{"line":706,"column":3},"end":{"line":706,"column":106}},"92":{"start":{"line":706,"column":36},"end":{"line":706,"column":101}},"93":{"start":{"line":708,"column":2},"end":{"line":710,"column":3}},"94":{"start":{"line":709,"column":3},"end":{"line":709,"column":103}},"95":{"start":{"line":709,"column":36},"end":{"line":709,"column":98}},"96":{"start":{"line":711,"column":2},"end":{"line":713,"column":3}},"97":{"start":{"line":712,"column":3},"end":{"line":712,"column":103}},"98":{"start":{"line":712,"column":36},"end":{"line":712,"column":98}},"99":{"start":{"line":715,"column":2},"end":{"line":715,"column":17}},"100":{"start":{"line":741,"column":2},"end":{"line":741,"column":23}},"101":{"start":{"line":742,"column":2},"end":{"line":743,"column":19}},"102":{"start":{"line":745,"column":2},"end":{"line":757,"column":3}},"103":{"start":{"line":746,"column":3},"end":{"line":746,"column":56}},"104":{"start":{"line":752,"column":3},"end":{"line":754,"column":4}},"105":{"start":{"line":753,"column":4},"end":{"line":753,"column":72}},"106":{"start":{"line":756,"column":3},"end":{"line":756,"column":46}},"107":{"start":{"line":758,"column":2},"end":{"line":758,"column":17}},"108":{"start":{"line":781,"column":2},"end":{"line":781,"column":34}},"109":{"start":{"line":781,"column":22},"end":{"line":781,"column":32}},"110":{"start":{"line":783,"column":2},"end":{"line":785,"column":17}},"111":{"start":{"line":787,"column":2},"end":{"line":794,"column":3}},"112":{"start":{"line":788,"column":3},"end":{"line":788,"column":28}},"113":{"start":{"line":790,"column":3},"end":{"line":790,"column":72}},"114":{"start":{"line":791,"column":3},"end":{"line":791,"column":54}},"115":{"start":{"line":793,"column":3},"end":{"line":793,"column":65}},"116":{"start":{"line":795,"column":2},"end":{"line":795,"column":52}},"117":{"start":{"line":797,"column":2},"end":{"line":797,"column":28}},"118":{"start":{"line":815,"column":2},"end":{"line":815,"column":22}},"119":{"start":{"line":816,"column":2},"end":{"line":818,"column":3}},"120":{"start":{"line":817,"column":3},"end":{"line":817,"column":64}},"121":{"start":{"line":820,"column":2},"end":{"line":834,"column":3}},"122":{"start":{"line":821,"column":3},"end":{"line":821,"column":26}},"123":{"start":{"line":823,"column":9},"end":{"line":834,"column":3}},"124":{"start":{"line":824,"column":3},"end":{"line":824,"column":33}},"125":{"start":{"line":826,"column":9},"end":{"line":834,"column":3}},"126":{"start":{"line":827,"column":3},"end":{"line":827,"column":43}},"127":{"start":{"line":831,"column":3},"end":{"line":831,"column":36}},"128":{"start":{"line":833,"column":3},"end":{"line":833,"column":37}},"129":{"start":{"line":846,"column":2},"end":{"line":846,"column":35}},"130":{"start":{"line":848,"column":2},"end":{"line":850,"column":3}},"131":{"start":{"line":849,"column":3},"end":{"line":849,"column":73}},"132":{"start":{"line":852,"column":2},"end":{"line":852,"column":20}},"133":{"start":{"line":864,"column":2},"end":{"line":880,"column":3}},"134":{"start":{"line":865,"column":3},"end":{"line":866,"column":41}},"135":{"start":{"line":868,"column":3},"end":{"line":874,"column":5}},"136":{"start":{"line":876,"column":3},"end":{"line":876,"column":39}},"137":{"start":{"line":879,"column":3},"end":{"line":879,"column":24}},"138":{"start":{"line":906,"column":2},"end":{"line":906,"column":35}},"139":{"start":{"line":908,"column":2},"end":{"line":914,"column":3}},"140":{"start":{"line":909,"column":3},"end":{"line":913,"column":7}},"141":{"start":{"line":916,"column":2},"end":{"line":916,"column":20}},"142":{"start":{"line":924,"column":0},"end":{"line":924,"column":22}},"143":{"start":{"line":925,"column":0},"end":{"line":925,"column":24}},"144":{"start":{"line":926,"column":0},"end":{"line":926,"column":27}},"145":{"start":{"line":927,"column":0},"end":{"line":927,"column":25}},"146":{"start":{"line":937,"column":0},"end":{"line":1148,"column":2}},"147":{"start":{"line":944,"column":31},"end":{"line":944,"column":48}},"148":{"start":{"line":965,"column":2},"end":{"line":969,"column":3}},"149":{"start":{"line":966,"column":3},"end":{"line":968,"column":4}},"150":{"start":{"line":967,"column":4},"end":{"line":967,"column":31}},"151":{"start":{"line":971,"column":2},"end":{"line":971,"column":14}},"152":{"start":{"line":984,"column":2},"end":{"line":988,"column":3}},"153":{"start":{"line":985,"column":3},"end":{"line":987,"column":4}},"154":{"start":{"line":986,"column":4},"end":{"line":986,"column":31}},"155":{"start":{"line":990,"column":2},"end":{"line":990,"column":14}},"156":{"start":{"line":1003,"column":2},"end":{"line":1003,"column":45}},"157":{"start":{"line":1005,"column":2},"end":{"line":1005,"column":24}},"158":{"start":{"line":1006,"column":2},"end":{"line":1006,"column":32}},"159":{"start":{"line":1008,"column":2},"end":{"line":1008,"column":15}},"160":{"start":{"line":1009,"column":2},"end":{"line":1013,"column":3}},"161":{"start":{"line":1010,"column":3},"end":{"line":1010,"column":37}},"162":{"start":{"line":1012,"column":3},"end":{"line":1012,"column":83}},"163":{"start":{"line":1012,"column":27},"end":{"line":1012,"column":80}},"164":{"start":{"line":1015,"column":2},"end":{"line":1015,"column":51}},"165":{"start":{"line":1016,"column":2},"end":{"line":1016,"column":39}},"166":{"start":{"line":1017,"column":2},"end":{"line":1017,"column":45}},"167":{"start":{"line":1019,"column":2},"end":{"line":1019,"column":32}},"168":{"start":{"line":1020,"column":2},"end":{"line":1020,"column":54}},"169":{"start":{"line":1022,"column":2},"end":{"line":1022,"column":18}},"170":{"start":{"line":1037,"column":2},"end":{"line":1037,"column":21}},"171":{"start":{"line":1039,"column":2},"end":{"line":1048,"column":3}},"172":{"start":{"line":1040,"column":3},"end":{"line":1045,"column":4}},"173":{"start":{"line":1041,"column":5},"end":{"line":1041,"column":32}},"174":{"start":{"line":1042,"column":5},"end":{"line":1042,"column":24}},"175":{"start":{"line":1044,"column":5},"end":{"line":1044,"column":43}},"176":{"start":{"line":1047,"column":3},"end":{"line":1047,"column":74}},"177":{"start":{"line":1049,"column":2},"end":{"line":1049,"column":13}},"178":{"start":{"line":1061,"column":2},"end":{"line":1069,"column":3}},"179":{"start":{"line":1062,"column":3},"end":{"line":1062,"column":33}},"180":{"start":{"line":1065,"column":3},"end":{"line":1067,"column":4}},"181":{"start":{"line":1066,"column":4},"end":{"line":1066,"column":40}},"182":{"start":{"line":1066,"column":31},"end":{"line":1066,"column":40}},"183":{"start":{"line":1068,"column":3},"end":{"line":1068,"column":13}},"184":{"start":{"line":1088,"column":2},"end":{"line":1092,"column":3}},"185":{"start":{"line":1089,"column":3},"end":{"line":1091,"column":4}},"186":{"start":{"line":1090,"column":4},"end":{"line":1090,"column":23}},"187":{"start":{"line":1120,"column":2},"end":{"line":1120,"column":88}},"188":{"start":{"line":1120,"column":27},"end":{"line":1120,"column":88}},"189":{"start":{"line":1122,"column":2},"end":{"line":1124,"column":12}},"190":{"start":{"line":1126,"column":2},"end":{"line":1131,"column":3}},"191":{"start":{"line":1127,"column":3},"end":{"line":1127,"column":56}},"192":{"start":{"line":1128,"column":3},"end":{"line":1128,"column":29}},"193":{"start":{"line":1130,"column":3},"end":{"line":1130,"column":45}},"194":{"start":{"line":1132,"column":2},"end":{"line":1132,"column":42}},"195":{"start":{"line":1134,"column":2},"end":{"line":1134,"column":16}},"196":{"start":{"line":1145,"column":2},"end":{"line":1145,"column":43}},"197":{"start":{"line":1226,"column":0},"end":{"line":1497,"column":4}},"198":{"start":{"line":1276,"column":2},"end":{"line":1276,"column":38}},"199":{"start":{"line":1278,"column":2},"end":{"line":1278,"column":52}},"200":{"start":{"line":1289,"column":2},"end":{"line":1289,"column":25}},"201":{"start":{"line":1290,"column":2},"end":{"line":1290,"column":14}},"202":{"start":{"line":1300,"column":2},"end":{"line":1300,"column":28}},"203":{"start":{"line":1312,"column":2},"end":{"line":1312,"column":33}},"204":{"start":{"line":1313,"column":2},"end":{"line":1313,"column":35}},"205":{"start":{"line":1315,"column":2},"end":{"line":1315,"column":14}},"206":{"start":{"line":1326,"column":2},"end":{"line":1326,"column":37}},"207":{"start":{"line":1337,"column":2},"end":{"line":1337,"column":33}},"208":{"start":{"line":1338,"column":2},"end":{"line":1338,"column":44}},"209":{"start":{"line":1340,"column":2},"end":{"line":1340,"column":14}},"210":{"start":{"line":1350,"column":2},"end":{"line":1350,"column":43}},"211":{"start":{"line":1361,"column":2},"end":{"line":1361,"column":43}},"212":{"start":{"line":1372,"column":2},"end":{"line":1377,"column":15}},"213":{"start":{"line":1379,"column":2},"end":{"line":1383,"column":3}},"214":{"start":{"line":1380,"column":3},"end":{"line":1382,"column":4}},"215":{"start":{"line":1381,"column":4},"end":{"line":1381,"column":29}},"216":{"start":{"line":1385,"column":2},"end":{"line":1385,"column":51}},"217":{"start":{"line":1386,"column":2},"end":{"line":1386,"column":14}},"218":{"start":{"line":1397,"column":2},"end":{"line":1402,"column":18}},"219":{"start":{"line":1404,"column":2},"end":{"line":1409,"column":3}},"220":{"start":{"line":1405,"column":3},"end":{"line":1405,"column":45}},"221":{"start":{"line":1406,"column":3},"end":{"line":1408,"column":4}},"222":{"start":{"line":1407,"column":4},"end":{"line":1407,"column":29}},"223":{"start":{"line":1411,"column":2},"end":{"line":1411,"column":51}},"224":{"start":{"line":1412,"column":2},"end":{"line":1412,"column":14}},"225":{"start":{"line":1423,"column":2},"end":{"line":1423,"column":42}},"226":{"start":{"line":1434,"column":2},"end":{"line":1434,"column":80}},"227":{"start":{"line":1445,"column":2},"end":{"line":1445,"column":24}},"228":{"start":{"line":1447,"column":2},"end":{"line":1447,"column":14}},"229":{"start":{"line":1457,"column":2},"end":{"line":1457,"column":30}},"230":{"start":{"line":1467,"column":2},"end":{"line":1468,"column":38}},"231":{"start":{"line":1470,"column":2},"end":{"line":1470,"column":48}},"232":{"start":{"line":1472,"column":2},"end":{"line":1472,"column":93}},"233":{"start":{"line":1484,"column":2},"end":{"line":1484,"column":30}},"234":{"start":{"line":1484,"column":20},"end":{"line":1484,"column":30}},"235":{"start":{"line":1486,"column":2},"end":{"line":1487,"column":20}},"236":{"start":{"line":1489,"column":2},"end":{"line":1493,"column":3}},"237":{"start":{"line":1490,"column":3},"end":{"line":1492,"column":4}},"238":{"start":{"line":1491,"column":4},"end":{"line":1491,"column":55}},"239":{"start":{"line":1494,"column":2},"end":{"line":1494,"column":30}},"240":{"start":{"line":1510,"column":0},"end":{"line":1590,"column":6}},"241":{"start":{"line":1527,"column":1},"end":{"line":1527,"column":4271}},"242":{"start":{"line":1543,"column":1},"end":{"line":1543,"column":499}},"243":{"start":{"line":1547,"column":1},"end":{"line":1547,"column":62}},"244":{"start":{"line":1551,"column":1},"end":{"line":1551,"column":108}},"245":{"start":{"line":1553,"column":1},"end":{"line":1587,"column":3}},"246":{"start":{"line":1620,"column":0},"end":{"line":1784,"column":4}},"247":{"start":{"line":1643,"column":2},"end":{"line":1643,"column":18}},"248":{"start":{"line":1645,"column":2},"end":{"line":1645,"column":33}},"249":{"start":{"line":1646,"column":2},"end":{"line":1646,"column":31}},"250":{"start":{"line":1647,"column":2},"end":{"line":1647,"column":33}},"251":{"start":{"line":1660,"column":2},"end":{"line":1664,"column":6}},"252":{"start":{"line":1678,"column":2},"end":{"line":1680,"column":4}},"253":{"start":{"line":1682,"column":2},"end":{"line":1682,"column":46}},"254":{"start":{"line":1683,"column":2},"end":{"line":1685,"column":3}},"255":{"start":{"line":1684,"column":3},"end":{"line":1684,"column":31}},"256":{"start":{"line":1686,"column":2},"end":{"line":1689,"column":3}},"257":{"start":{"line":1687,"column":3},"end":{"line":1687,"column":32}},"258":{"start":{"line":1688,"column":3},"end":{"line":1688,"column":42}},"259":{"start":{"line":1691,"column":2},"end":{"line":1695,"column":3}},"260":{"start":{"line":1692,"column":3},"end":{"line":1694,"column":4}},"261":{"start":{"line":1693,"column":4},"end":{"line":1693,"column":45}},"262":{"start":{"line":1697,"column":2},"end":{"line":1697,"column":15}},"263":{"start":{"line":1722,"column":2},"end":{"line":1722,"column":33}},"264":{"start":{"line":1724,"column":2},"end":{"line":1735,"column":3}},"265":{"start":{"line":1725,"column":3},"end":{"line":1725,"column":13}},"266":{"start":{"line":1728,"column":3},"end":{"line":1729,"column":51}},"267":{"start":{"line":1731,"column":3},"end":{"line":1733,"column":4}},"268":{"start":{"line":1732,"column":4},"end":{"line":1732,"column":66}},"269":{"start":{"line":1734,"column":3},"end":{"line":1734,"column":36}},"270":{"start":{"line":1749,"column":2},"end":{"line":1749,"column":45}},"271":{"start":{"line":1751,"column":2},"end":{"line":1751,"column":20}},"272":{"start":{"line":1767,"column":2},"end":{"line":1767,"column":31}},"273":{"start":{"line":1768,"column":2},"end":{"line":1768,"column":56}},"274":{"start":{"line":1768,"column":38},"end":{"line":1768,"column":56}},"275":{"start":{"line":1770,"column":2},"end":{"line":1771,"column":40}},"276":{"start":{"line":1773,"column":2},"end":{"line":1781,"column":3}},"277":{"start":{"line":1774,"column":3},"end":{"line":1774,"column":74}},"278":{"start":{"line":1776,"column":9},"end":{"line":1781,"column":3}},"279":{"start":{"line":1777,"column":3},"end":{"line":1777,"column":75}},"280":{"start":{"line":1780,"column":3},"end":{"line":1780,"column":72}},"281":{"start":{"line":1797,"column":0},"end":{"line":2067,"column":4}},"282":{"start":{"line":1816,"column":2},"end":{"line":1820,"column":98}},"283":{"start":{"line":1822,"column":2},"end":{"line":1885,"column":23}},"284":{"start":{"line":1907,"column":2},"end":{"line":1911,"column":17}},"285":{"start":{"line":1913,"column":2},"end":{"line":1935,"column":3}},"286":{"start":{"line":1914,"column":3},"end":{"line":1919,"column":63}},"287":{"start":{"line":1922,"column":3},"end":{"line":1925,"column":4}},"288":{"start":{"line":1923,"column":4},"end":{"line":1923,"column":86}},"289":{"start":{"line":1924,"column":4},"end":{"line":1924,"column":50}},"290":{"start":{"line":1928,"column":3},"end":{"line":1932,"column":4}},"291":{"start":{"line":1929,"column":4},"end":{"line":1929,"column":73}},"292":{"start":{"line":1931,"column":4},"end":{"line":1931,"column":83}},"293":{"start":{"line":1934,"column":3},"end":{"line":1934,"column":39}},"294":{"start":{"line":1938,"column":2},"end":{"line":1953,"column":3}},"295":{"start":{"line":1939,"column":3},"end":{"line":1939,"column":42}},"296":{"start":{"line":1942,"column":3},"end":{"line":1952,"column":4}},"297":{"start":{"line":1943,"column":4},"end":{"line":1943,"column":73}},"298":{"start":{"line":1949,"column":4},"end":{"line":1951,"column":8}},"299":{"start":{"line":1950,"column":5},"end":{"line":1950,"column":24}},"300":{"start":{"line":1955,"column":2},"end":{"line":1955,"column":15}},"301":{"start":{"line":1973,"column":2},"end":{"line":1974,"column":101}},"302":{"start":{"line":1979,"column":2},"end":{"line":1991,"column":3}},"303":{"start":{"line":1980,"column":3},"end":{"line":1981,"column":50}},"304":{"start":{"line":1983,"column":3},"end":{"line":1986,"column":4}},"305":{"start":{"line":1984,"column":4},"end":{"line":1984,"column":59}},"306":{"start":{"line":1985,"column":4},"end":{"line":1985,"column":31}},"307":{"start":{"line":1987,"column":3},"end":{"line":1990,"column":4}},"308":{"start":{"line":1988,"column":4},"end":{"line":1988,"column":63}},"309":{"start":{"line":1989,"column":4},"end":{"line":1989,"column":33}},"310":{"start":{"line":1992,"column":2},"end":{"line":1992,"column":15}},"311":{"start":{"line":2007,"column":2},"end":{"line":2011,"column":6}},"312":{"start":{"line":2030,"column":2},"end":{"line":2035,"column":6}},"313":{"start":{"line":2050,"column":2},"end":{"line":2050,"column":80}},"314":{"start":{"line":2064,"column":2},"end":{"line":2064,"column":78}},"315":{"start":{"line":2087,"column":0},"end":{"line":2155,"column":4}},"316":{"start":{"line":2119,"column":2},"end":{"line":2119,"column":38}},"317":{"start":{"line":2121,"column":2},"end":{"line":2121,"column":71}},"318":{"start":{"line":2121,"column":28},"end":{"line":2121,"column":71}},"319":{"start":{"line":2122,"column":2},"end":{"line":2122,"column":67}},"320":{"start":{"line":2122,"column":26},"end":{"line":2122,"column":67}},"321":{"start":{"line":2142,"column":2},"end":{"line":2142,"column":21}},"322":{"start":{"line":2152,"column":2},"end":{"line":2152,"column":19}},"323":{"start":{"line":2167,"column":0},"end":{"line":2197,"column":4}},"324":{"start":{"line":2184,"column":2},"end":{"line":2184,"column":19}},"325":{"start":{"line":2194,"column":2},"end":{"line":2194,"column":22}},"326":{"start":{"line":2208,"column":0},"end":{"line":2257,"column":4}},"327":{"start":{"line":2232,"column":2},"end":{"line":2232,"column":19}},"328":{"start":{"line":2243,"column":2},"end":{"line":2243,"column":22}},"329":{"start":{"line":2254,"column":2},"end":{"line":2254,"column":22}},"330":{"start":{"line":2273,"column":0},"end":{"line":2284,"column":4}},"331":{"start":{"line":2281,"column":2},"end":{"line":2281,"column":18}},"332":{"start":{"line":2295,"column":0},"end":{"line":2306,"column":4}},"333":{"start":{"line":2303,"column":2},"end":{"line":2303,"column":16}},"334":{"start":{"line":2339,"column":0},"end":{"line":2487,"column":4}},"335":{"start":{"line":2367,"column":2},"end":{"line":2367,"column":78}},"336":{"start":{"line":2367,"column":31},"end":{"line":2367,"column":78}},"337":{"start":{"line":2368,"column":2},"end":{"line":2368,"column":80}},"338":{"start":{"line":2368,"column":32},"end":{"line":2368,"column":80}},"339":{"start":{"line":2369,"column":2},"end":{"line":2369,"column":70}},"340":{"start":{"line":2369,"column":27},"end":{"line":2369,"column":70}},"341":{"start":{"line":2371,"column":2},"end":{"line":2371,"column":35}},"342":{"start":{"line":2372,"column":2},"end":{"line":2372,"column":37}},"343":{"start":{"line":2373,"column":2},"end":{"line":2373,"column":27}},"344":{"start":{"line":2392,"column":2},"end":{"line":2392,"column":26}},"345":{"start":{"line":2409,"column":2},"end":{"line":2409,"column":23}},"346":{"start":{"line":2420,"column":2},"end":{"line":2420,"column":21}},"347":{"start":{"line":2464,"column":2},"end":{"line":2464,"column":28}},"348":{"start":{"line":2484,"column":2},"end":{"line":2484,"column":39}},"349":{"start":{"line":2498,"column":0},"end":{"line":2560,"column":4}},"350":{"start":{"line":2513,"column":2},"end":{"line":2513,"column":65}},"351":{"start":{"line":2515,"column":2},"end":{"line":2515,"column":61}},"352":{"start":{"line":2515,"column":19},"end":{"line":2515,"column":61}},"353":{"start":{"line":2517,"column":2},"end":{"line":2517,"column":25}},"354":{"start":{"line":2527,"column":2},"end":{"line":2527,"column":17}},"355":{"start":{"line":2537,"column":2},"end":{"line":2537,"column":20}},"356":{"start":{"line":2547,"column":2},"end":{"line":2547,"column":32}},"357":{"start":{"line":2557,"column":2},"end":{"line":2557,"column":20}},"358":{"start":{"line":2572,"column":0},"end":{"line":2667,"column":4}},"359":{"start":{"line":2594,"column":2},"end":{"line":2594,"column":65}},"360":{"start":{"line":2597,"column":2},"end":{"line":2597,"column":65}},"361":{"start":{"line":2597,"column":21},"end":{"line":2597,"column":65}},"362":{"start":{"line":2599,"column":2},"end":{"line":2599,"column":37}},"363":{"start":{"line":2600,"column":2},"end":{"line":2600,"column":29}},"364":{"start":{"line":2610,"column":2},"end":{"line":2610,"column":19}},"365":{"start":{"line":2621,"column":2},"end":{"line":2621,"column":26}},"366":{"start":{"line":2631,"column":2},"end":{"line":2631,"column":22}},"367":{"start":{"line":2641,"column":2},"end":{"line":2642,"column":29}},"368":{"start":{"line":2644,"column":2},"end":{"line":2654,"column":3}},"369":{"start":{"line":2646,"column":4},"end":{"line":2646,"column":52}},"370":{"start":{"line":2648,"column":4},"end":{"line":2648,"column":57}},"371":{"start":{"line":2650,"column":4},"end":{"line":2650,"column":59}},"372":{"start":{"line":2653,"column":4},"end":{"line":2653,"column":81}},"373":{"start":{"line":2664,"column":2},"end":{"line":2664,"column":28}},"374":{"start":{"line":2680,"column":0},"end":{"line":2760,"column":4}},"375":{"start":{"line":2708,"column":2},"end":{"line":2708,"column":65}},"376":{"start":{"line":2710,"column":2},"end":{"line":2710,"column":63}},"377":{"start":{"line":2710,"column":20},"end":{"line":2710,"column":63}},"378":{"start":{"line":2711,"column":2},"end":{"line":2711,"column":74}},"379":{"start":{"line":2711,"column":29},"end":{"line":2711,"column":74}},"380":{"start":{"line":2713,"column":2},"end":{"line":2713,"column":27}},"381":{"start":{"line":2714,"column":2},"end":{"line":2714,"column":31}},"382":{"start":{"line":2724,"column":2},"end":{"line":2724,"column":17}},"383":{"start":{"line":2737,"column":2},"end":{"line":2737,"column":21}},"384":{"start":{"line":2747,"column":2},"end":{"line":2747,"column":61}},"385":{"start":{"line":2757,"column":2},"end":{"line":2757,"column":26}},"386":{"start":{"line":2771,"column":0},"end":{"line":2879,"column":4}},"387":{"start":{"line":2793,"column":2},"end":{"line":2793,"column":65}},"388":{"start":{"line":2795,"column":2},"end":{"line":2795,"column":73}},"389":{"start":{"line":2795,"column":25},"end":{"line":2795,"column":73}},"390":{"start":{"line":2796,"column":2},"end":{"line":2796,"column":65}},"391":{"start":{"line":2796,"column":21},"end":{"line":2796,"column":65}},"392":{"start":{"line":2798,"column":2},"end":{"line":2798,"column":29}},"393":{"start":{"line":2799,"column":2},"end":{"line":2799,"column":37}},"394":{"start":{"line":2809,"column":2},"end":{"line":2809,"column":19}},"395":{"start":{"line":2819,"column":2},"end":{"line":2819,"column":22}},"396":{"start":{"line":2830,"column":2},"end":{"line":2830,"column":26}},"397":{"start":{"line":2840,"column":2},"end":{"line":2848,"column":3}},"398":{"start":{"line":2842,"column":4},"end":{"line":2842,"column":49}},"399":{"start":{"line":2844,"column":4},"end":{"line":2844,"column":51}},"400":{"start":{"line":2847,"column":4},"end":{"line":2847,"column":86}},"401":{"start":{"line":2858,"column":2},"end":{"line":2858,"column":28}},"402":{"start":{"line":2870,"column":2},"end":{"line":2871,"column":42}},"403":{"start":{"line":2873,"column":2},"end":{"line":2875,"column":3}},"404":{"start":{"line":2874,"column":3},"end":{"line":2874,"column":40}},"405":{"start":{"line":2876,"column":2},"end":{"line":2876,"column":26}},"406":{"start":{"line":2890,"column":0},"end":{"line":3137,"column":4}},"407":{"start":{"line":2940,"column":2},"end":{"line":2940,"column":65}},"408":{"start":{"line":2942,"column":2},"end":{"line":2942,"column":180}},"409":{"start":{"line":2942,"column":98},"end":{"line":2942,"column":180}},"410":{"start":{"line":2943,"column":2},"end":{"line":2943,"column":57}},"411":{"start":{"line":2943,"column":17},"end":{"line":2943,"column":57}},"412":{"start":{"line":2944,"column":2},"end":{"line":2944,"column":90}},"413":{"start":{"line":2944,"column":37},"end":{"line":2944,"column":90}},"414":{"start":{"line":2945,"column":2},"end":{"line":2945,"column":100}},"415":{"start":{"line":2945,"column":42},"end":{"line":2945,"column":100}},"416":{"start":{"line":2946,"column":2},"end":{"line":2946,"column":80}},"417":{"start":{"line":2946,"column":32},"end":{"line":2946,"column":80}},"418":{"start":{"line":2947,"column":2},"end":{"line":2947,"column":94}},"419":{"start":{"line":2947,"column":39},"end":{"line":2947,"column":94}},"420":{"start":{"line":2949,"column":2},"end":{"line":2949,"column":39}},"421":{"start":{"line":2950,"column":2},"end":{"line":2950,"column":21}},"422":{"start":{"line":2951,"column":2},"end":{"line":2951,"column":47}},"423":{"start":{"line":2952,"column":2},"end":{"line":2952,"column":57}},"424":{"start":{"line":2953,"column":2},"end":{"line":2953,"column":37}},"425":{"start":{"line":2954,"column":2},"end":{"line":2954,"column":51}},"426":{"start":{"line":3000,"column":2},"end":{"line":3000,"column":15}},"427":{"start":{"line":3016,"column":2},"end":{"line":3016,"column":27}},"428":{"start":{"line":3027,"column":2},"end":{"line":3027,"column":21}},"429":{"start":{"line":3030,"column":2},"end":{"line":3034,"column":3}},"430":{"start":{"line":3031,"column":3},"end":{"line":3031,"column":36}},"431":{"start":{"line":3033,"column":3},"end":{"line":3033,"column":33}},"432":{"start":{"line":3036,"column":2},"end":{"line":3036,"column":13}},"433":{"start":{"line":3046,"column":2},"end":{"line":3046,"column":26}},"434":{"start":{"line":3048,"column":2},"end":{"line":3048,"column":38}},"435":{"start":{"line":3058,"column":2},"end":{"line":3058,"column":41}},"436":{"start":{"line":3060,"column":2},"end":{"line":3063,"column":3}},"437":{"start":{"line":3062,"column":3},"end":{"line":3062,"column":63}},"438":{"start":{"line":3064,"column":2},"end":{"line":3066,"column":3}},"439":{"start":{"line":3065,"column":3},"end":{"line":3065,"column":53}},"440":{"start":{"line":3067,"column":2},"end":{"line":3069,"column":3}},"441":{"start":{"line":3068,"column":3},"end":{"line":3068,"column":50}},"442":{"start":{"line":3070,"column":2},"end":{"line":3072,"column":3}},"443":{"start":{"line":3071,"column":3},"end":{"line":3071,"column":55}},"444":{"start":{"line":3074,"column":2},"end":{"line":3074,"column":20}},"445":{"start":{"line":3092,"column":2},"end":{"line":3092,"column":51}},"446":{"start":{"line":3105,"column":2},"end":{"line":3105,"column":50}},"447":{"start":{"line":3118,"column":2},"end":{"line":3118,"column":56}},"448":{"start":{"line":3131,"column":2},"end":{"line":3133,"column":3}},"449":{"start":{"line":3132,"column":3},"end":{"line":3132,"column":42}},"450":{"start":{"line":3134,"column":2},"end":{"line":3134,"column":20}},"451":{"start":{"line":3142,"column":0},"end":{"line":3142,"column":10866}},"452":{"start":{"line":3155,"column":0},"end":{"line":3187,"column":4}},"453":{"start":{"line":3171,"column":2},"end":{"line":3171,"column":71}},"454":{"start":{"line":3171,"column":24},"end":{"line":3171,"column":71}},"455":{"start":{"line":3173,"column":2},"end":{"line":3173,"column":35}},"456":{"start":{"line":3197,"column":0},"end":{"line":3244,"column":4}},"457":{"start":{"line":3208,"column":2},"end":{"line":3211,"column":34}},"458":{"start":{"line":3213,"column":2},"end":{"line":3217,"column":23}},"459":{"start":{"line":3225,"column":2},"end":{"line":3228,"column":12}},"460":{"start":{"line":3230,"column":2},"end":{"line":3239,"column":3}},"461":{"start":{"line":3231,"column":3},"end":{"line":3231,"column":32}},"462":{"start":{"line":3233,"column":3},"end":{"line":3238,"column":9}},"463":{"start":{"line":3241,"column":2},"end":{"line":3241,"column":17}},"464":{"start":{"line":3253,"column":0},"end":{"line":3332,"column":4}},"465":{"start":{"line":3291,"column":2},"end":{"line":3291,"column":69}},"466":{"start":{"line":3293,"column":2},"end":{"line":3293,"column":37}},"467":{"start":{"line":3301,"column":2},"end":{"line":3306,"column":12}},"468":{"start":{"line":3308,"column":2},"end":{"line":3327,"column":3}},"469":{"start":{"line":3309,"column":3},"end":{"line":3310,"column":44}},"470":{"start":{"line":3315,"column":3},"end":{"line":3326,"column":4}},"471":{"start":{"line":3316,"column":4},"end":{"line":3317,"column":40}},"472":{"start":{"line":3319,"column":4},"end":{"line":3325,"column":10}},"473":{"start":{"line":3329,"column":2},"end":{"line":3329,"column":17}},"474":{"start":{"line":3343,"column":0},"end":{"line":3390,"column":4}},"475":{"start":{"line":3366,"column":2},"end":{"line":3369,"column":9}},"476":{"start":{"line":3371,"column":2},"end":{"line":3385,"column":3}},"477":{"start":{"line":3373,"column":3},"end":{"line":3375,"column":26}},"478":{"start":{"line":3376,"column":3},"end":{"line":3384,"column":13}},"479":{"start":{"line":3377,"column":7},"end":{"line":3383,"column":11}},"480":{"start":{"line":3387,"column":2},"end":{"line":3387,"column":17}},"481":{"start":{"line":3398,"column":0},"end":{"line":3476,"column":4}},"482":{"start":{"line":3431,"column":2},"end":{"line":3431,"column":69}},"483":{"start":{"line":3433,"column":2},"end":{"line":3433,"column":37}},"484":{"start":{"line":3441,"column":2},"end":{"line":3446,"column":12}},"485":{"start":{"line":3448,"column":2},"end":{"line":3450,"column":3}},"486":{"start":{"line":3449,"column":3},"end":{"line":3449,"column":18}},"487":{"start":{"line":3452,"column":2},"end":{"line":3471,"column":3}},"488":{"start":{"line":3453,"column":3},"end":{"line":3454,"column":44}},"489":{"start":{"line":3459,"column":3},"end":{"line":3470,"column":4}},"490":{"start":{"line":3460,"column":4},"end":{"line":3461,"column":41}},"491":{"start":{"line":3463,"column":4},"end":{"line":3469,"column":10}},"492":{"start":{"line":3473,"column":2},"end":{"line":3473,"column":17}},"493":{"start":{"line":3487,"column":0},"end":{"line":3793,"column":4}},"494":{"start":{"line":3536,"column":2},"end":{"line":3544,"column":179}},"495":{"start":{"line":3546,"column":2},"end":{"line":3574,"column":23}},"496":{"start":{"line":3626,"column":2},"end":{"line":3626,"column":69}},"497":{"start":{"line":3628,"column":2},"end":{"line":3628,"column":80}},"498":{"start":{"line":3628,"column":32},"end":{"line":3628,"column":80}},"499":{"start":{"line":3629,"column":2},"end":{"line":3629,"column":94}},"500":{"start":{"line":3629,"column":39},"end":{"line":3629,"column":94}},"501":{"start":{"line":3631,"column":2},"end":{"line":3631,"column":37}},"502":{"start":{"line":3632,"column":2},"end":{"line":3632,"column":51}},"503":{"start":{"line":3640,"column":2},"end":{"line":3645,"column":12}},"504":{"start":{"line":3647,"column":2},"end":{"line":3707,"column":3}},"505":{"start":{"line":3648,"column":3},"end":{"line":3656,"column":41}},"506":{"start":{"line":3658,"column":3},"end":{"line":3660,"column":4}},"507":{"start":{"line":3659,"column":4},"end":{"line":3659,"column":13}},"508":{"start":{"line":3664,"column":3},"end":{"line":3666,"column":4}},"509":{"start":{"line":3665,"column":4},"end":{"line":3665,"column":13}},"510":{"start":{"line":3672,"column":3},"end":{"line":3674,"column":4}},"511":{"start":{"line":3673,"column":4},"end":{"line":3673,"column":13}},"512":{"start":{"line":3676,"column":3},"end":{"line":3678,"column":4}},"513":{"start":{"line":3677,"column":4},"end":{"line":3677,"column":53}},"514":{"start":{"line":3683,"column":3},"end":{"line":3691,"column":4}},"515":{"start":{"line":3684,"column":4},"end":{"line":3684,"column":57}},"516":{"start":{"line":3687,"column":4},"end":{"line":3687,"column":75}},"517":{"start":{"line":3688,"column":4},"end":{"line":3690,"column":5}},"518":{"start":{"line":3689,"column":5},"end":{"line":3689,"column":42}},"519":{"start":{"line":3693,"column":3},"end":{"line":3694,"column":43}},"520":{"start":{"line":3696,"column":3},"end":{"line":3706,"column":9}},"521":{"start":{"line":3709,"column":2},"end":{"line":3709,"column":17}},"522":{"start":{"line":3733,"column":2},"end":{"line":3733,"column":56}},"523":{"start":{"line":3735,"column":2},"end":{"line":3744,"column":3}},"524":{"start":{"line":3736,"column":3},"end":{"line":3739,"column":77}},"525":{"start":{"line":3741,"column":3},"end":{"line":3743,"column":4}},"526":{"start":{"line":3742,"column":4},"end":{"line":3742,"column":16}},"527":{"start":{"line":3746,"column":2},"end":{"line":3746,"column":15}},"528":{"start":{"line":3766,"column":2},"end":{"line":3768,"column":3}},"529":{"start":{"line":3767,"column":3},"end":{"line":3767,"column":13}},"530":{"start":{"line":3770,"column":2},"end":{"line":3770,"column":17}},"531":{"start":{"line":3771,"column":2},"end":{"line":3774,"column":3}},"532":{"start":{"line":3772,"column":3},"end":{"line":3772,"column":34}},"533":{"start":{"line":3773,"column":3},"end":{"line":3773,"column":37}},"534":{"start":{"line":3776,"column":2},"end":{"line":3776,"column":62}},"535":{"start":{"line":3778,"column":2},"end":{"line":3778,"column":113}},"536":{"start":{"line":3779,"column":2},"end":{"line":3779,"column":32}},"537":{"start":{"line":3780,"column":2},"end":{"line":3782,"column":3}},"538":{"start":{"line":3781,"column":3},"end":{"line":3781,"column":13}},"539":{"start":{"line":3784,"column":2},"end":{"line":3784,"column":26}},"540":{"start":{"line":3785,"column":2},"end":{"line":3785,"column":43}},"541":{"start":{"line":3786,"column":2},"end":{"line":3788,"column":3}},"542":{"start":{"line":3787,"column":3},"end":{"line":3787,"column":17}},"543":{"start":{"line":3790,"column":2},"end":{"line":3790,"column":12}},"544":{"start":{"line":3811,"column":0},"end":{"line":3965,"column":2}},"545":{"start":{"line":3873,"column":2},"end":{"line":3881,"column":3}},"546":{"start":{"line":3880,"column":3},"end":{"line":3880,"column":16}},"547":{"start":{"line":3883,"column":2},"end":{"line":3883,"column":14}},"548":{"start":{"line":3888,"column":2},"end":{"line":3888,"column":84}},"549":{"start":{"line":3889,"column":2},"end":{"line":3889,"column":51}},"550":{"start":{"line":3891,"column":2},"end":{"line":3891,"column":28}},"551":{"start":{"line":3895,"column":2},"end":{"line":3895,"column":37}},"552":{"start":{"line":3908,"column":2},"end":{"line":3908,"column":81}},"553":{"start":{"line":3910,"column":2},"end":{"line":3910,"column":70}},"554":{"start":{"line":3936,"column":2},"end":{"line":3936,"column":138}},"555":{"start":{"line":3958,"column":2},"end":{"line":3962,"column":3}},"556":{"start":{"line":3959,"column":3},"end":{"line":3959,"column":63}},"557":{"start":{"line":3961,"column":3},"end":{"line":3961,"column":16}},"558":{"start":{"line":3976,"column":0},"end":{"line":3978,"column":2}},"559":{"start":{"line":3977,"column":1},"end":{"line":3977,"column":75}},"560":{"start":{"line":3992,"column":0},"end":{"line":4015,"column":2}},"561":{"start":{"line":3993,"column":2},"end":{"line":3995,"column":3}},"562":{"start":{"line":3994,"column":4},"end":{"line":3994,"column":15}},"563":{"start":{"line":3997,"column":2},"end":{"line":3997,"column":34}},"564":{"start":{"line":3998,"column":2},"end":{"line":3998,"column":21}},"565":{"start":{"line":4000,"column":2},"end":{"line":4007,"column":3}},"566":{"start":{"line":4001,"column":4},"end":{"line":4001,"column":31}},"567":{"start":{"line":4002,"column":4},"end":{"line":4002,"column":36}},"568":{"start":{"line":4003,"column":4},"end":{"line":4003,"column":23}},"569":{"start":{"line":4005,"column":4},"end":{"line":4005,"column":55}},"570":{"start":{"line":4006,"column":4},"end":{"line":4006,"column":42}},"571":{"start":{"line":4009,"column":2},"end":{"line":4009,"column":53}},"572":{"start":{"line":4010,"column":2},"end":{"line":4010,"column":15}},"573":{"start":{"line":4011,"column":2},"end":{"line":4013,"column":3}},"574":{"start":{"line":4012,"column":4},"end":{"line":4012,"column":57}},"575":{"start":{"line":4014,"column":2},"end":{"line":4014,"column":134}},"576":{"start":{"line":4030,"column":0},"end":{"line":4184,"column":2}},"577":{"start":{"line":4032,"column":1},"end":{"line":4032,"column":33}},"578":{"start":{"line":4033,"column":1},"end":{"line":4033,"column":20}},"579":{"start":{"line":4035,"column":1},"end":{"line":4042,"column":2}},"580":{"start":{"line":4036,"column":2},"end":{"line":4036,"column":29}},"581":{"start":{"line":4037,"column":2},"end":{"line":4037,"column":21}},"582":{"start":{"line":4038,"column":2},"end":{"line":4038,"column":34}},"583":{"start":{"line":4040,"column":2},"end":{"line":4040,"column":40}},"584":{"start":{"line":4041,"column":2},"end":{"line":4041,"column":53}},"585":{"start":{"line":4044,"column":1},"end":{"line":4073,"column":3}},"586":{"start":{"line":4045,"column":2},"end":{"line":4045,"column":18}},"587":{"start":{"line":4046,"column":2},"end":{"line":4046,"column":19}},"588":{"start":{"line":4047,"column":2},"end":{"line":4047,"column":46}},"589":{"start":{"line":4048,"column":2},"end":{"line":4051,"column":3}},"590":{"start":{"line":4049,"column":3},"end":{"line":4049,"column":28}},"591":{"start":{"line":4050,"column":3},"end":{"line":4050,"column":43}},"592":{"start":{"line":4052,"column":2},"end":{"line":4052,"column":49}},"593":{"start":{"line":4053,"column":2},"end":{"line":4056,"column":3}},"594":{"start":{"line":4054,"column":3},"end":{"line":4054,"column":26}},"595":{"start":{"line":4055,"column":3},"end":{"line":4055,"column":43}},"596":{"start":{"line":4057,"column":2},"end":{"line":4057,"column":48}},"597":{"start":{"line":4058,"column":2},"end":{"line":4061,"column":3}},"598":{"start":{"line":4059,"column":3},"end":{"line":4059,"column":26}},"599":{"start":{"line":4060,"column":3},"end":{"line":4060,"column":43}},"600":{"start":{"line":4062,"column":2},"end":{"line":4062,"column":45}},"601":{"start":{"line":4063,"column":2},"end":{"line":4066,"column":3}},"602":{"start":{"line":4064,"column":3},"end":{"line":4064,"column":27}},"603":{"start":{"line":4065,"column":3},"end":{"line":4065,"column":43}},"604":{"start":{"line":4067,"column":2},"end":{"line":4067,"column":36}},"605":{"start":{"line":4068,"column":2},"end":{"line":4071,"column":3}},"606":{"start":{"line":4069,"column":3},"end":{"line":4069,"column":30}},"607":{"start":{"line":4072,"column":2},"end":{"line":4072,"column":16}},"608":{"start":{"line":4075,"column":1},"end":{"line":4093,"column":3}},"609":{"start":{"line":4076,"column":2},"end":{"line":4076,"column":15}},"610":{"start":{"line":4077,"column":2},"end":{"line":4079,"column":3}},"611":{"start":{"line":4078,"column":3},"end":{"line":4078,"column":32}},"612":{"start":{"line":4080,"column":2},"end":{"line":4082,"column":3}},"613":{"start":{"line":4081,"column":3},"end":{"line":4081,"column":22}},"614":{"start":{"line":4083,"column":2},"end":{"line":4085,"column":3}},"615":{"start":{"line":4084,"column":3},"end":{"line":4084,"column":28}},"616":{"start":{"line":4086,"column":2},"end":{"line":4088,"column":3}},"617":{"start":{"line":4087,"column":3},"end":{"line":4087,"column":29}},"618":{"start":{"line":4089,"column":2},"end":{"line":4091,"column":3}},"619":{"start":{"line":4090,"column":3},"end":{"line":4090,"column":32}},"620":{"start":{"line":4092,"column":2},"end":{"line":4092,"column":13}},"621":{"start":{"line":4095,"column":1},"end":{"line":4104,"column":3}},"622":{"start":{"line":4096,"column":2},"end":{"line":4099,"column":13}},"623":{"start":{"line":4100,"column":2},"end":{"line":4102,"column":3}},"624":{"start":{"line":4101,"column":3},"end":{"line":4101,"column":35}},"625":{"start":{"line":4103,"column":2},"end":{"line":4103,"column":62}},"626":{"start":{"line":4105,"column":1},"end":{"line":4107,"column":2}},"627":{"start":{"line":4106,"column":2},"end":{"line":4106,"column":13}},"628":{"start":{"line":4108,"column":1},"end":{"line":4108,"column":52}},"629":{"start":{"line":4109,"column":1},"end":{"line":4109,"column":29}},"630":{"start":{"line":4111,"column":1},"end":{"line":4118,"column":2}},"631":{"start":{"line":4112,"column":2},"end":{"line":4112,"column":66}},"632":{"start":{"line":4113,"column":2},"end":{"line":4117,"column":3}},"633":{"start":{"line":4115,"column":3},"end":{"line":4115,"column":63}},"634":{"start":{"line":4116,"column":3},"end":{"line":4116,"column":26}},"635":{"start":{"line":4119,"column":1},"end":{"line":4121,"column":2}},"636":{"start":{"line":4120,"column":2},"end":{"line":4120,"column":13}},"637":{"start":{"line":4122,"column":1},"end":{"line":4125,"column":2}},"638":{"start":{"line":4123,"column":2},"end":{"line":4123,"column":50}},"639":{"start":{"line":4124,"column":2},"end":{"line":4124,"column":25}},"640":{"start":{"line":4126,"column":1},"end":{"line":4128,"column":2}},"641":{"start":{"line":4127,"column":2},"end":{"line":4127,"column":13}},"642":{"start":{"line":4130,"column":1},"end":{"line":4130,"column":14}},"643":{"start":{"line":4131,"column":1},"end":{"line":4133,"column":2}},"644":{"start":{"line":4132,"column":2},"end":{"line":4132,"column":21}},"645":{"start":{"line":4134,"column":1},"end":{"line":4139,"column":2}},"646":{"start":{"line":4135,"column":2},"end":{"line":4137,"column":3}},"647":{"start":{"line":4136,"column":3},"end":{"line":4136,"column":139}},"648":{"start":{"line":4138,"column":2},"end":{"line":4138,"column":101}},"649":{"start":{"line":4140,"column":1},"end":{"line":4140,"column":23}},"650":{"start":{"line":4141,"column":1},"end":{"line":4143,"column":2}},"651":{"start":{"line":4142,"column":2},"end":{"line":4142,"column":36}},"652":{"start":{"line":4144,"column":1},"end":{"line":4146,"column":2}},"653":{"start":{"line":4145,"column":2},"end":{"line":4145,"column":37}},"654":{"start":{"line":4147,"column":1},"end":{"line":4157,"column":2}},"655":{"start":{"line":4148,"column":2},"end":{"line":4156,"column":3}},"656":{"start":{"line":4149,"column":3},"end":{"line":4151,"column":4}},"657":{"start":{"line":4150,"column":4},"end":{"line":4150,"column":55}},"658":{"start":{"line":4152,"column":3},"end":{"line":4152,"column":63}},"659":{"start":{"line":4153,"column":3},"end":{"line":4153,"column":128}},"660":{"start":{"line":4155,"column":3},"end":{"line":4155,"column":23}},"661":{"start":{"line":4158,"column":1},"end":{"line":4169,"column":2}},"662":{"start":{"line":4159,"column":2},"end":{"line":4159,"column":37}},"663":{"start":{"line":4160,"column":2},"end":{"line":4168,"column":3}},"664":{"start":{"line":4161,"column":3},"end":{"line":4163,"column":4}},"665":{"start":{"line":4162,"column":4},"end":{"line":4162,"column":51}},"666":{"start":{"line":4164,"column":3},"end":{"line":4164,"column":64}},"667":{"start":{"line":4165,"column":3},"end":{"line":4165,"column":125}},"668":{"start":{"line":4167,"column":3},"end":{"line":4167,"column":19}},"669":{"start":{"line":4170,"column":1},"end":{"line":4175,"column":2}},"670":{"start":{"line":4171,"column":2},"end":{"line":4171,"column":37}},"671":{"start":{"line":4172,"column":2},"end":{"line":4174,"column":3}},"672":{"start":{"line":4173,"column":3},"end":{"line":4173,"column":48}},"673":{"start":{"line":4176,"column":1},"end":{"line":4178,"column":2}},"674":{"start":{"line":4177,"column":2},"end":{"line":4177,"column":13}},"675":{"start":{"line":4179,"column":1},"end":{"line":4179,"column":14}},"676":{"start":{"line":4180,"column":1},"end":{"line":4182,"column":2}},"677":{"start":{"line":4181,"column":2},"end":{"line":4181,"column":55}},"678":{"start":{"line":4183,"column":1},"end":{"line":4183,"column":133}},"679":{"start":{"line":4186,"column":0},"end":{"line":4186,"column":18}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":11,"column":2}},{"start":{"line":11,"column":2},"end":{"line":11,"column":2}}]},"2":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":6},"end":{"line":11,"column":34}},{"start":{"line":11,"column":38},"end":{"line":11,"column":48}}]},"3":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":9},"end":{"line":13,"column":9}},{"start":{"line":13,"column":9},"end":{"line":13,"column":9}}]},"4":{"line":130,"type":"binary-expr","locations":[{"start":{"line":130,"column":7},"end":{"line":130,"column":10}},{"start":{"line":130,"column":14},"end":{"line":130,"column":16}}]},"5":{"line":135,"type":"cond-expr","locations":[{"start":{"line":135,"column":47},"end":{"line":135,"column":56}},{"start":{"line":135,"column":59},"end":{"line":135,"column":63}}]},"6":{"line":136,"type":"cond-expr","locations":[{"start":{"line":136,"column":47},"end":{"line":136,"column":56}},{"start":{"line":136,"column":59},"end":{"line":136,"column":63}}]},"7":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":16},"end":{"line":137,"column":27}},{"start":{"line":137,"column":31},"end":{"line":137,"column":36}}]},"8":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":16},"end":{"line":138,"column":27}},{"start":{"line":138,"column":31},"end":{"line":138,"column":36}}]},"9":{"line":139,"type":"cond-expr","locations":[{"start":{"line":139,"column":55},"end":{"line":139,"column":68}},{"start":{"line":139,"column":71},"end":{"line":139,"column":75}}]},"10":{"line":141,"type":"cond-expr","locations":[{"start":{"line":141,"column":73},"end":{"line":141,"column":95}},{"start":{"line":141,"column":98},"end":{"line":141,"column":102}}]},"11":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":1},"end":{"line":145,"column":1}},{"start":{"line":145,"column":1},"end":{"line":145,"column":1}}]},"12":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":5},"end":{"line":145,"column":22}},{"start":{"line":145,"column":26},"end":{"line":145,"column":47}},{"start":{"line":145,"column":51},"end":{"line":145,"column":74}}]},"13":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":1},"end":{"line":151,"column":1}},{"start":{"line":151,"column":1},"end":{"line":151,"column":1}}]},"14":{"line":151,"type":"binary-expr","locations":[{"start":{"line":151,"column":5},"end":{"line":151,"column":22}},{"start":{"line":151,"column":26},"end":{"line":151,"column":47}},{"start":{"line":151,"column":51},"end":{"line":151,"column":73}},{"start":{"line":151,"column":77},"end":{"line":151,"column":100}}]},"15":{"line":156,"type":"binary-expr","locations":[{"start":{"line":156,"column":18},"end":{"line":156,"column":31}},{"start":{"line":156,"column":35},"end":{"line":156,"column":37}}]},"16":{"line":157,"type":"binary-expr","locations":[{"start":{"line":157,"column":18},"end":{"line":157,"column":31}},{"start":{"line":157,"column":35},"end":{"line":157,"column":39}}]},"17":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":16},"end":{"line":158,"column":27}},{"start":{"line":158,"column":31},"end":{"line":158,"column":35}}]},"18":{"line":513,"type":"if","locations":[{"start":{"line":513,"column":2},"end":{"line":513,"column":2}},{"start":{"line":513,"column":2},"end":{"line":513,"column":2}}]},"19":{"line":515,"type":"if","locations":[{"start":{"line":515,"column":2},"end":{"line":515,"column":2}},{"start":{"line":515,"column":2},"end":{"line":515,"column":2}}]},"20":{"line":520,"type":"cond-expr","locations":[{"start":{"line":520,"column":62},"end":{"line":520,"column":80}},{"start":{"line":520,"column":83},"end":{"line":520,"column":87}}]},"21":{"line":521,"type":"cond-expr","locations":[{"start":{"line":521,"column":62},"end":{"line":521,"column":77}},{"start":{"line":521,"column":83},"end":{"line":521,"column":87}}]},"22":{"line":522,"type":"cond-expr","locations":[{"start":{"line":522,"column":62},"end":{"line":522,"column":77}},{"start":{"line":522,"column":83},"end":{"line":522,"column":87}}]},"23":{"line":539,"type":"if","locations":[{"start":{"line":539,"column":2},"end":{"line":539,"column":2}},{"start":{"line":539,"column":2},"end":{"line":539,"column":2}}]},"24":{"line":541,"type":"if","locations":[{"start":{"line":541,"column":2},"end":{"line":541,"column":2}},{"start":{"line":541,"column":2},"end":{"line":541,"column":2}}]},"25":{"line":546,"type":"cond-expr","locations":[{"start":{"line":546,"column":55},"end":{"line":546,"column":73}},{"start":{"line":546,"column":76},"end":{"line":546,"column":80}}]},"26":{"line":547,"type":"cond-expr","locations":[{"start":{"line":547,"column":55},"end":{"line":547,"column":70}},{"start":{"line":547,"column":76},"end":{"line":547,"column":80}}]},"27":{"line":564,"type":"if","locations":[{"start":{"line":564,"column":2},"end":{"line":564,"column":2}},{"start":{"line":564,"column":2},"end":{"line":564,"column":2}}]},"28":{"line":568,"type":"binary-expr","locations":[{"start":{"line":568,"column":36},"end":{"line":568,"column":44}},{"start":{"line":568,"column":48},"end":{"line":568,"column":50}}]},"29":{"line":619,"type":"if","locations":[{"start":{"line":619,"column":3},"end":{"line":619,"column":3}},{"start":{"line":619,"column":3},"end":{"line":619,"column":3}}]},"30":{"line":619,"type":"binary-expr","locations":[{"start":{"line":619,"column":7},"end":{"line":619,"column":29}},{"start":{"line":619,"column":33},"end":{"line":619,"column":58}}]},"31":{"line":620,"type":"if","locations":[{"start":{"line":620,"column":4},"end":{"line":620,"column":4}},{"start":{"line":620,"column":4},"end":{"line":620,"column":4}}]},"32":{"line":626,"type":"if","locations":[{"start":{"line":626,"column":10},"end":{"line":626,"column":10}},{"start":{"line":626,"column":10},"end":{"line":626,"column":10}}]},"33":{"line":626,"type":"binary-expr","locations":[{"start":{"line":626,"column":14},"end":{"line":626,"column":33}},{"start":{"line":626,"column":37},"end":{"line":626,"column":62}}]},"34":{"line":668,"type":"if","locations":[{"start":{"line":668,"column":3},"end":{"line":668,"column":3}},{"start":{"line":668,"column":3},"end":{"line":668,"column":3}}]},"35":{"line":670,"type":"if","locations":[{"start":{"line":670,"column":4},"end":{"line":670,"column":4}},{"start":{"line":670,"column":4},"end":{"line":670,"column":4}}]},"36":{"line":671,"type":"cond-expr","locations":[{"start":{"line":671,"column":84},"end":{"line":671,"column":85}},{"start":{"line":671,"column":88},"end":{"line":671,"column":93}}]},"37":{"line":677,"type":"if","locations":[{"start":{"line":677,"column":4},"end":{"line":677,"column":4}},{"start":{"line":677,"column":4},"end":{"line":677,"column":4}}]},"38":{"line":701,"type":"if","locations":[{"start":{"line":701,"column":2},"end":{"line":701,"column":2}},{"start":{"line":701,"column":2},"end":{"line":701,"column":2}}]},"39":{"line":702,"type":"if","locations":[{"start":{"line":702,"column":2},"end":{"line":702,"column":2}},{"start":{"line":702,"column":2},"end":{"line":702,"column":2}}]},"40":{"line":703,"type":"if","locations":[{"start":{"line":703,"column":2},"end":{"line":703,"column":2}},{"start":{"line":703,"column":2},"end":{"line":703,"column":2}}]},"41":{"line":704,"type":"if","locations":[{"start":{"line":704,"column":2},"end":{"line":704,"column":2}},{"start":{"line":704,"column":2},"end":{"line":704,"column":2}}]},"42":{"line":705,"type":"if","locations":[{"start":{"line":705,"column":2},"end":{"line":705,"column":2}},{"start":{"line":705,"column":2},"end":{"line":705,"column":2}}]},"43":{"line":706,"type":"binary-expr","locations":[{"start":{"line":706,"column":43},"end":{"line":706,"column":64}},{"start":{"line":706,"column":68},"end":{"line":706,"column":100}}]},"44":{"line":708,"type":"if","locations":[{"start":{"line":708,"column":2},"end":{"line":708,"column":2}},{"start":{"line":708,"column":2},"end":{"line":708,"column":2}}]},"45":{"line":709,"type":"binary-expr","locations":[{"start":{"line":709,"column":43},"end":{"line":709,"column":64}},{"start":{"line":709,"column":68},"end":{"line":709,"column":97}}]},"46":{"line":711,"type":"if","locations":[{"start":{"line":711,"column":2},"end":{"line":711,"column":2}},{"start":{"line":711,"column":2},"end":{"line":711,"column":2}}]},"47":{"line":712,"type":"binary-expr","locations":[{"start":{"line":712,"column":43},"end":{"line":712,"column":64}},{"start":{"line":712,"column":68},"end":{"line":712,"column":97}}]},"48":{"line":741,"type":"binary-expr","locations":[{"start":{"line":741,"column":11},"end":{"line":741,"column":17}},{"start":{"line":741,"column":21},"end":{"line":741,"column":22}}]},"49":{"line":781,"type":"if","locations":[{"start":{"line":781,"column":2},"end":{"line":781,"column":2}},{"start":{"line":781,"column":2},"end":{"line":781,"column":2}}]},"50":{"line":816,"type":"if","locations":[{"start":{"line":816,"column":2},"end":{"line":816,"column":2}},{"start":{"line":816,"column":2},"end":{"line":816,"column":2}}]},"51":{"line":820,"type":"if","locations":[{"start":{"line":820,"column":2},"end":{"line":820,"column":2}},{"start":{"line":820,"column":2},"end":{"line":820,"column":2}}]},"52":{"line":823,"type":"if","locations":[{"start":{"line":823,"column":9},"end":{"line":823,"column":9}},{"start":{"line":823,"column":9},"end":{"line":823,"column":9}}]},"53":{"line":826,"type":"if","locations":[{"start":{"line":826,"column":9},"end":{"line":826,"column":9}},{"start":{"line":826,"column":9},"end":{"line":826,"column":9}}]},"54":{"line":848,"type":"if","locations":[{"start":{"line":848,"column":2},"end":{"line":848,"column":2}},{"start":{"line":848,"column":2},"end":{"line":848,"column":2}}]},"55":{"line":864,"type":"if","locations":[{"start":{"line":864,"column":2},"end":{"line":864,"column":2}},{"start":{"line":864,"column":2},"end":{"line":864,"column":2}}]},"56":{"line":908,"type":"if","locations":[{"start":{"line":908,"column":2},"end":{"line":908,"column":2}},{"start":{"line":908,"column":2},"end":{"line":908,"column":2}}]},"57":{"line":966,"type":"if","locations":[{"start":{"line":966,"column":3},"end":{"line":966,"column":3}},{"start":{"line":966,"column":3},"end":{"line":966,"column":3}}]},"58":{"line":985,"type":"if","locations":[{"start":{"line":985,"column":3},"end":{"line":985,"column":3}},{"start":{"line":985,"column":3},"end":{"line":985,"column":3}}]},"59":{"line":985,"type":"binary-expr","locations":[{"start":{"line":985,"column":7},"end":{"line":985,"column":33}},{"start":{"line":985,"column":37},"end":{"line":985,"column":63}}]},"60":{"line":1009,"type":"if","locations":[{"start":{"line":1009,"column":2},"end":{"line":1009,"column":2}},{"start":{"line":1009,"column":2},"end":{"line":1009,"column":2}}]},"61":{"line":1039,"type":"if","locations":[{"start":{"line":1039,"column":2},"end":{"line":1039,"column":2}},{"start":{"line":1039,"column":2},"end":{"line":1039,"column":2}}]},"62":{"line":1040,"type":"if","locations":[{"start":{"line":1040,"column":3},"end":{"line":1040,"column":3}},{"start":{"line":1040,"column":3},"end":{"line":1040,"column":3}}]},"63":{"line":1061,"type":"if","locations":[{"start":{"line":1061,"column":2},"end":{"line":1061,"column":2}},{"start":{"line":1061,"column":2},"end":{"line":1061,"column":2}}]},"64":{"line":1066,"type":"if","locations":[{"start":{"line":1066,"column":4},"end":{"line":1066,"column":4}},{"start":{"line":1066,"column":4},"end":{"line":1066,"column":4}}]},"65":{"line":1089,"type":"if","locations":[{"start":{"line":1089,"column":3},"end":{"line":1089,"column":3}},{"start":{"line":1089,"column":3},"end":{"line":1089,"column":3}}]},"66":{"line":1120,"type":"if","locations":[{"start":{"line":1120,"column":2},"end":{"line":1120,"column":2}},{"start":{"line":1120,"column":2},"end":{"line":1120,"column":2}}]},"67":{"line":1278,"type":"binary-expr","locations":[{"start":{"line":1278,"column":19},"end":{"line":1278,"column":33}},{"start":{"line":1278,"column":37},"end":{"line":1278,"column":51}}]},"68":{"line":1300,"type":"binary-expr","locations":[{"start":{"line":1300,"column":9},"end":{"line":1300,"column":21}},{"start":{"line":1300,"column":25},"end":{"line":1300,"column":27}}]},"69":{"line":1350,"type":"binary-expr","locations":[{"start":{"line":1350,"column":9},"end":{"line":1350,"column":19}},{"start":{"line":1350,"column":25},"end":{"line":1350,"column":40}}]},"70":{"line":1375,"type":"cond-expr","locations":[{"start":{"line":1375,"column":33},"end":{"line":1375,"column":35}},{"start":{"line":1375,"column":38},"end":{"line":1375,"column":72}}]},"71":{"line":1380,"type":"if","locations":[{"start":{"line":1380,"column":3},"end":{"line":1380,"column":3}},{"start":{"line":1380,"column":3},"end":{"line":1380,"column":3}}]},"72":{"line":1400,"type":"cond-expr","locations":[{"start":{"line":1400,"column":33},"end":{"line":1400,"column":35}},{"start":{"line":1400,"column":38},"end":{"line":1400,"column":72}}]},"73":{"line":1404,"type":"binary-expr","locations":[{"start":{"line":1404,"column":9},"end":{"line":1404,"column":23}},{"start":{"line":1404,"column":29},"end":{"line":1404,"column":64}}]},"74":{"line":1406,"type":"if","locations":[{"start":{"line":1406,"column":3},"end":{"line":1406,"column":3}},{"start":{"line":1406,"column":3},"end":{"line":1406,"column":3}}]},"75":{"line":1423,"type":"binary-expr","locations":[{"start":{"line":1423,"column":9},"end":{"line":1423,"column":35}},{"start":{"line":1423,"column":39},"end":{"line":1423,"column":41}}]},"76":{"line":1457,"type":"binary-expr","locations":[{"start":{"line":1457,"column":9},"end":{"line":1457,"column":23}},{"start":{"line":1457,"column":27},"end":{"line":1457,"column":29}}]},"77":{"line":1470,"type":"cond-expr","locations":[{"start":{"line":1470,"column":28},"end":{"line":1470,"column":42}},{"start":{"line":1470,"column":45},"end":{"line":1470,"column":47}}]},"78":{"line":1484,"type":"if","locations":[{"start":{"line":1484,"column":2},"end":{"line":1484,"column":2}},{"start":{"line":1484,"column":2},"end":{"line":1484,"column":2}}]},"79":{"line":1490,"type":"if","locations":[{"start":{"line":1490,"column":3},"end":{"line":1490,"column":3}},{"start":{"line":1490,"column":3},"end":{"line":1490,"column":3}}]},"80":{"line":1643,"type":"binary-expr","locations":[{"start":{"line":1643,"column":8},"end":{"line":1643,"column":11}},{"start":{"line":1643,"column":15},"end":{"line":1643,"column":17}}]},"81":{"line":1683,"type":"if","locations":[{"start":{"line":1683,"column":2},"end":{"line":1683,"column":2}},{"start":{"line":1683,"column":2},"end":{"line":1683,"column":2}}]},"82":{"line":1686,"type":"if","locations":[{"start":{"line":1686,"column":2},"end":{"line":1686,"column":2}},{"start":{"line":1686,"column":2},"end":{"line":1686,"column":2}}]},"83":{"line":1691,"type":"if","locations":[{"start":{"line":1691,"column":2},"end":{"line":1691,"column":2}},{"start":{"line":1691,"column":2},"end":{"line":1691,"column":2}}]},"84":{"line":1692,"type":"if","locations":[{"start":{"line":1692,"column":3},"end":{"line":1692,"column":3}},{"start":{"line":1692,"column":3},"end":{"line":1692,"column":3}}]},"85":{"line":1692,"type":"binary-expr","locations":[{"start":{"line":1692,"column":7},"end":{"line":1692,"column":27}},{"start":{"line":1692,"column":31},"end":{"line":1692,"column":82}}]},"86":{"line":1724,"type":"if","locations":[{"start":{"line":1724,"column":2},"end":{"line":1724,"column":2}},{"start":{"line":1724,"column":2},"end":{"line":1724,"column":2}}]},"87":{"line":1768,"type":"if","locations":[{"start":{"line":1768,"column":2},"end":{"line":1768,"column":2}},{"start":{"line":1768,"column":2},"end":{"line":1768,"column":2}}]},"88":{"line":1768,"type":"binary-expr","locations":[{"start":{"line":1768,"column":6},"end":{"line":1768,"column":15}},{"start":{"line":1768,"column":19},"end":{"line":1768,"column":35}}]},"89":{"line":1773,"type":"if","locations":[{"start":{"line":1773,"column":2},"end":{"line":1773,"column":2}},{"start":{"line":1773,"column":2},"end":{"line":1773,"column":2}}]},"90":{"line":1776,"type":"if","locations":[{"start":{"line":1776,"column":9},"end":{"line":1776,"column":9}},{"start":{"line":1776,"column":9},"end":{"line":1776,"column":9}}]},"91":{"line":1916,"type":"binary-expr","locations":[{"start":{"line":1916,"column":17},"end":{"line":1916,"column":35}},{"start":{"line":1916,"column":39},"end":{"line":1916,"column":57}},{"start":{"line":1916,"column":61},"end":{"line":1916,"column":79}}]},"92":{"line":1922,"type":"if","locations":[{"start":{"line":1922,"column":3},"end":{"line":1922,"column":3}},{"start":{"line":1922,"column":3},"end":{"line":1922,"column":3}}]},"93":{"line":1928,"type":"if","locations":[{"start":{"line":1928,"column":3},"end":{"line":1928,"column":3}},{"start":{"line":1928,"column":3},"end":{"line":1928,"column":3}}]},"94":{"line":1938,"type":"if","locations":[{"start":{"line":1938,"column":2},"end":{"line":1938,"column":2}},{"start":{"line":1938,"column":2},"end":{"line":1938,"column":2}}]},"95":{"line":1942,"type":"if","locations":[{"start":{"line":1942,"column":3},"end":{"line":1942,"column":3}},{"start":{"line":1942,"column":3},"end":{"line":1942,"column":3}}]},"96":{"line":1983,"type":"if","locations":[{"start":{"line":1983,"column":3},"end":{"line":1983,"column":3}},{"start":{"line":1983,"column":3},"end":{"line":1983,"column":3}}]},"97":{"line":1987,"type":"if","locations":[{"start":{"line":1987,"column":3},"end":{"line":1987,"column":3}},{"start":{"line":1987,"column":3},"end":{"line":1987,"column":3}}]},"98":{"line":2121,"type":"if","locations":[{"start":{"line":2121,"column":2},"end":{"line":2121,"column":2}},{"start":{"line":2121,"column":2},"end":{"line":2121,"column":2}}]},"99":{"line":2122,"type":"if","locations":[{"start":{"line":2122,"column":2},"end":{"line":2122,"column":2}},{"start":{"line":2122,"column":2},"end":{"line":2122,"column":2}}]},"100":{"line":2367,"type":"if","locations":[{"start":{"line":2367,"column":2},"end":{"line":2367,"column":2}},{"start":{"line":2367,"column":2},"end":{"line":2367,"column":2}}]},"101":{"line":2368,"type":"if","locations":[{"start":{"line":2368,"column":2},"end":{"line":2368,"column":2}},{"start":{"line":2368,"column":2},"end":{"line":2368,"column":2}}]},"102":{"line":2369,"type":"if","locations":[{"start":{"line":2369,"column":2},"end":{"line":2369,"column":2}},{"start":{"line":2369,"column":2},"end":{"line":2369,"column":2}}]},"103":{"line":2515,"type":"if","locations":[{"start":{"line":2515,"column":2},"end":{"line":2515,"column":2}},{"start":{"line":2515,"column":2},"end":{"line":2515,"column":2}}]},"104":{"line":2597,"type":"if","locations":[{"start":{"line":2597,"column":2},"end":{"line":2597,"column":2}},{"start":{"line":2597,"column":2},"end":{"line":2597,"column":2}}]},"105":{"line":2644,"type":"switch","locations":[{"start":{"line":2645,"column":3},"end":{"line":2646,"column":52}},{"start":{"line":2647,"column":3},"end":{"line":2648,"column":57}},{"start":{"line":2649,"column":3},"end":{"line":2650,"column":59}},{"start":{"line":2652,"column":3},"end":{"line":2653,"column":81}}]},"106":{"line":2710,"type":"if","locations":[{"start":{"line":2710,"column":2},"end":{"line":2710,"column":2}},{"start":{"line":2710,"column":2},"end":{"line":2710,"column":2}}]},"107":{"line":2711,"type":"if","locations":[{"start":{"line":2711,"column":2},"end":{"line":2711,"column":2}},{"start":{"line":2711,"column":2},"end":{"line":2711,"column":2}}]},"108":{"line":2747,"type":"cond-expr","locations":[{"start":{"line":2747,"column":36},"end":{"line":2747,"column":39}},{"start":{"line":2747,"column":42},"end":{"line":2747,"column":44}}]},"109":{"line":2795,"type":"if","locations":[{"start":{"line":2795,"column":2},"end":{"line":2795,"column":2}},{"start":{"line":2795,"column":2},"end":{"line":2795,"column":2}}]},"110":{"line":2796,"type":"if","locations":[{"start":{"line":2796,"column":2},"end":{"line":2796,"column":2}},{"start":{"line":2796,"column":2},"end":{"line":2796,"column":2}}]},"111":{"line":2840,"type":"switch","locations":[{"start":{"line":2841,"column":3},"end":{"line":2842,"column":49}},{"start":{"line":2843,"column":3},"end":{"line":2844,"column":51}},{"start":{"line":2846,"column":3},"end":{"line":2847,"column":86}}]},"112":{"line":2873,"type":"if","locations":[{"start":{"line":2873,"column":2},"end":{"line":2873,"column":2}},{"start":{"line":2873,"column":2},"end":{"line":2873,"column":2}}]},"113":{"line":2942,"type":"if","locations":[{"start":{"line":2942,"column":2},"end":{"line":2942,"column":2}},{"start":{"line":2942,"column":2},"end":{"line":2942,"column":2}}]},"114":{"line":2942,"type":"binary-expr","locations":[{"start":{"line":2942,"column":6},"end":{"line":2942,"column":35}},{"start":{"line":2942,"column":39},"end":{"line":2942,"column":65}},{"start":{"line":2942,"column":69},"end":{"line":2942,"column":95}}]},"115":{"line":2943,"type":"if","locations":[{"start":{"line":2943,"column":2},"end":{"line":2943,"column":2}},{"start":{"line":2943,"column":2},"end":{"line":2943,"column":2}}]},"116":{"line":2944,"type":"if","locations":[{"start":{"line":2944,"column":2},"end":{"line":2944,"column":2}},{"start":{"line":2944,"column":2},"end":{"line":2944,"column":2}}]},"117":{"line":2945,"type":"if","locations":[{"start":{"line":2945,"column":2},"end":{"line":2945,"column":2}},{"start":{"line":2945,"column":2},"end":{"line":2945,"column":2}}]},"118":{"line":2946,"type":"if","locations":[{"start":{"line":2946,"column":2},"end":{"line":2946,"column":2}},{"start":{"line":2946,"column":2},"end":{"line":2946,"column":2}}]},"119":{"line":2947,"type":"if","locations":[{"start":{"line":2947,"column":2},"end":{"line":2947,"column":2}},{"start":{"line":2947,"column":2},"end":{"line":2947,"column":2}}]},"120":{"line":3030,"type":"if","locations":[{"start":{"line":3030,"column":2},"end":{"line":3030,"column":2}},{"start":{"line":3030,"column":2},"end":{"line":3030,"column":2}}]},"121":{"line":3030,"type":"binary-expr","locations":[{"start":{"line":3030,"column":6},"end":{"line":3030,"column":33}},{"start":{"line":3030,"column":37},"end":{"line":3030,"column":59}},{"start":{"line":3030,"column":63},"end":{"line":3030,"column":86}}]},"122":{"line":3060,"type":"if","locations":[{"start":{"line":3060,"column":2},"end":{"line":3060,"column":2}},{"start":{"line":3060,"column":2},"end":{"line":3060,"column":2}}]},"123":{"line":3064,"type":"if","locations":[{"start":{"line":3064,"column":2},"end":{"line":3064,"column":2}},{"start":{"line":3064,"column":2},"end":{"line":3064,"column":2}}]},"124":{"line":3067,"type":"if","locations":[{"start":{"line":3067,"column":2},"end":{"line":3067,"column":2}},{"start":{"line":3067,"column":2},"end":{"line":3067,"column":2}}]},"125":{"line":3070,"type":"if","locations":[{"start":{"line":3070,"column":2},"end":{"line":3070,"column":2}},{"start":{"line":3070,"column":2},"end":{"line":3070,"column":2}}]},"126":{"line":3131,"type":"if","locations":[{"start":{"line":3131,"column":2},"end":{"line":3131,"column":2}},{"start":{"line":3131,"column":2},"end":{"line":3131,"column":2}}]},"127":{"line":3171,"type":"if","locations":[{"start":{"line":3171,"column":2},"end":{"line":3171,"column":2}},{"start":{"line":3171,"column":2},"end":{"line":3171,"column":2}}]},"128":{"line":3315,"type":"if","locations":[{"start":{"line":3315,"column":3},"end":{"line":3315,"column":3}},{"start":{"line":3315,"column":3},"end":{"line":3315,"column":3}}]},"129":{"line":3315,"type":"binary-expr","locations":[{"start":{"line":3315,"column":7},"end":{"line":3315,"column":19}},{"start":{"line":3315,"column":23},"end":{"line":3315,"column":56}}]},"130":{"line":3376,"type":"if","locations":[{"start":{"line":3376,"column":3},"end":{"line":3376,"column":3}},{"start":{"line":3376,"column":3},"end":{"line":3376,"column":3}}]},"131":{"line":3376,"type":"binary-expr","locations":[{"start":{"line":3376,"column":7},"end":{"line":3376,"column":26}},{"start":{"line":3376,"column":30},"end":{"line":3376,"column":52}}]},"132":{"line":3448,"type":"if","locations":[{"start":{"line":3448,"column":2},"end":{"line":3448,"column":2}},{"start":{"line":3448,"column":2},"end":{"line":3448,"column":2}}]},"133":{"line":3459,"type":"if","locations":[{"start":{"line":3459,"column":3},"end":{"line":3459,"column":3}},{"start":{"line":3459,"column":3},"end":{"line":3459,"column":3}}]},"134":{"line":3459,"type":"binary-expr","locations":[{"start":{"line":3459,"column":7},"end":{"line":3459,"column":19}},{"start":{"line":3459,"column":23},"end":{"line":3459,"column":56}}]},"135":{"line":3628,"type":"if","locations":[{"start":{"line":3628,"column":2},"end":{"line":3628,"column":2}},{"start":{"line":3628,"column":2},"end":{"line":3628,"column":2}}]},"136":{"line":3629,"type":"if","locations":[{"start":{"line":3629,"column":2},"end":{"line":3629,"column":2}},{"start":{"line":3629,"column":2},"end":{"line":3629,"column":2}}]},"137":{"line":3655,"type":"binary-expr","locations":[{"start":{"line":3655,"column":31},"end":{"line":3655,"column":55}},{"start":{"line":3655,"column":59},"end":{"line":3655,"column":83}}]},"138":{"line":3658,"type":"if","locations":[{"start":{"line":3658,"column":3},"end":{"line":3658,"column":3}},{"start":{"line":3658,"column":3},"end":{"line":3658,"column":3}}]},"139":{"line":3664,"type":"if","locations":[{"start":{"line":3664,"column":3},"end":{"line":3664,"column":3}},{"start":{"line":3664,"column":3},"end":{"line":3664,"column":3}}]},"140":{"line":3664,"type":"binary-expr","locations":[{"start":{"line":3664,"column":7},"end":{"line":3664,"column":17}},{"start":{"line":3664,"column":21},"end":{"line":3664,"column":37}}]},"141":{"line":3672,"type":"if","locations":[{"start":{"line":3672,"column":3},"end":{"line":3672,"column":3}},{"start":{"line":3672,"column":3},"end":{"line":3672,"column":3}}]},"142":{"line":3672,"type":"binary-expr","locations":[{"start":{"line":3672,"column":7},"end":{"line":3672,"column":17}},{"start":{"line":3672,"column":21},"end":{"line":3672,"column":42}},{"start":{"line":3672,"column":46},"end":{"line":3672,"column":82}}]},"143":{"line":3676,"type":"if","locations":[{"start":{"line":3676,"column":3},"end":{"line":3676,"column":3}},{"start":{"line":3676,"column":3},"end":{"line":3676,"column":3}}]},"144":{"line":3683,"type":"if","locations":[{"start":{"line":3683,"column":3},"end":{"line":3683,"column":3}},{"start":{"line":3683,"column":3},"end":{"line":3683,"column":3}}]},"145":{"line":3688,"type":"if","locations":[{"start":{"line":3688,"column":4},"end":{"line":3688,"column":4}},{"start":{"line":3688,"column":4},"end":{"line":3688,"column":4}}]},"146":{"line":3693,"type":"cond-expr","locations":[{"start":{"line":3693,"column":39},"end":{"line":3693,"column":47}},{"start":{"line":3693,"column":52},"end":{"line":3693,"column":79}}]},"147":{"line":3693,"type":"cond-expr","locations":[{"start":{"line":3693,"column":66},"end":{"line":3693,"column":71}},{"start":{"line":3693,"column":74},"end":{"line":3693,"column":79}}]},"148":{"line":3735,"type":"if","locations":[{"start":{"line":3735,"column":2},"end":{"line":3735,"column":2}},{"start":{"line":3735,"column":2},"end":{"line":3735,"column":2}}]},"149":{"line":3738,"type":"binary-expr","locations":[{"start":{"line":3738,"column":25},"end":{"line":3738,"column":40}},{"start":{"line":3738,"column":44},"end":{"line":3738,"column":66}},{"start":{"line":3738,"column":72},"end":{"line":3738,"column":73}}]},"150":{"line":3739,"type":"binary-expr","locations":[{"start":{"line":3739,"column":26},"end":{"line":3739,"column":42}},{"start":{"line":3739,"column":46},"end":{"line":3739,"column":69}},{"start":{"line":3739,"column":75},"end":{"line":3739,"column":76}}]},"151":{"line":3741,"type":"if","locations":[{"start":{"line":3741,"column":3},"end":{"line":3741,"column":3}},{"start":{"line":3741,"column":3},"end":{"line":3741,"column":3}}]},"152":{"line":3766,"type":"if","locations":[{"start":{"line":3766,"column":2},"end":{"line":3766,"column":2}},{"start":{"line":3766,"column":2},"end":{"line":3766,"column":2}}]},"153":{"line":3771,"type":"if","locations":[{"start":{"line":3771,"column":2},"end":{"line":3771,"column":2}},{"start":{"line":3771,"column":2},"end":{"line":3771,"column":2}}]},"154":{"line":3780,"type":"if","locations":[{"start":{"line":3780,"column":2},"end":{"line":3780,"column":2}},{"start":{"line":3780,"column":2},"end":{"line":3780,"column":2}}]},"155":{"line":3786,"type":"if","locations":[{"start":{"line":3786,"column":2},"end":{"line":3786,"column":2}},{"start":{"line":3786,"column":2},"end":{"line":3786,"column":2}}]},"156":{"line":3873,"type":"if","locations":[{"start":{"line":3873,"column":2},"end":{"line":3873,"column":2}},{"start":{"line":3873,"column":2},"end":{"line":3873,"column":2}}]},"157":{"line":3874,"type":"binary-expr","locations":[{"start":{"line":3874,"column":5},"end":{"line":3874,"column":21}},{"start":{"line":3874,"column":25},"end":{"line":3874,"column":67}},{"start":{"line":3875,"column":3},"end":{"line":3875,"column":70}},{"start":{"line":3876,"column":4},"end":{"line":3876,"column":76}},{"start":{"line":3877,"column":6},"end":{"line":3877,"column":40}},{"start":{"line":3878,"column":3},"end":{"line":3878,"column":40}}]},"158":{"line":3910,"type":"binary-expr","locations":[{"start":{"line":3910,"column":11},"end":{"line":3910,"column":38}},{"start":{"line":3910,"column":42},"end":{"line":3910,"column":67}}]},"159":{"line":3936,"type":"binary-expr","locations":[{"start":{"line":3936,"column":11},"end":{"line":3936,"column":21}},{"start":{"line":3936,"column":27},"end":{"line":3936,"column":44}},{"start":{"line":3936,"column":48},"end":{"line":3936,"column":99}},{"start":{"line":3936,"column":105},"end":{"line":3936,"column":135}}]},"160":{"line":3958,"type":"if","locations":[{"start":{"line":3958,"column":2},"end":{"line":3958,"column":2}},{"start":{"line":3958,"column":2},"end":{"line":3958,"column":2}}]},"161":{"line":3958,"type":"binary-expr","locations":[{"start":{"line":3958,"column":6},"end":{"line":3958,"column":14}},{"start":{"line":3958,"column":18},"end":{"line":3958,"column":34}}]},"162":{"line":3993,"type":"if","locations":[{"start":{"line":3993,"column":2},"end":{"line":3993,"column":2}},{"start":{"line":3993,"column":2},"end":{"line":3993,"column":2}}]},"163":{"line":4000,"type":"if","locations":[{"start":{"line":4000,"column":2},"end":{"line":4000,"column":2}},{"start":{"line":4000,"column":2},"end":{"line":4000,"column":2}}]},"164":{"line":4011,"type":"if","locations":[{"start":{"line":4011,"column":2},"end":{"line":4011,"column":2}},{"start":{"line":4011,"column":2},"end":{"line":4011,"column":2}}]},"165":{"line":4035,"type":"if","locations":[{"start":{"line":4035,"column":1},"end":{"line":4035,"column":1}},{"start":{"line":4035,"column":1},"end":{"line":4035,"column":1}}]},"166":{"line":4048,"type":"if","locations":[{"start":{"line":4048,"column":2},"end":{"line":4048,"column":2}},{"start":{"line":4048,"column":2},"end":{"line":4048,"column":2}}]},"167":{"line":4053,"type":"if","locations":[{"start":{"line":4053,"column":2},"end":{"line":4053,"column":2}},{"start":{"line":4053,"column":2},"end":{"line":4053,"column":2}}]},"168":{"line":4058,"type":"if","locations":[{"start":{"line":4058,"column":2},"end":{"line":4058,"column":2}},{"start":{"line":4058,"column":2},"end":{"line":4058,"column":2}}]},"169":{"line":4063,"type":"if","locations":[{"start":{"line":4063,"column":2},"end":{"line":4063,"column":2}},{"start":{"line":4063,"column":2},"end":{"line":4063,"column":2}}]},"170":{"line":4068,"type":"if","locations":[{"start":{"line":4068,"column":2},"end":{"line":4068,"column":2}},{"start":{"line":4068,"column":2},"end":{"line":4068,"column":2}}]},"171":{"line":4077,"type":"if","locations":[{"start":{"line":4077,"column":2},"end":{"line":4077,"column":2}},{"start":{"line":4077,"column":2},"end":{"line":4077,"column":2}}]},"172":{"line":4077,"type":"binary-expr","locations":[{"start":{"line":4077,"column":6},"end":{"line":4077,"column":19}},{"start":{"line":4077,"column":23},"end":{"line":4077,"column":34}}]},"173":{"line":4080,"type":"if","locations":[{"start":{"line":4080,"column":2},"end":{"line":4080,"column":2}},{"start":{"line":4080,"column":2},"end":{"line":4080,"column":2}}]},"174":{"line":4083,"type":"if","locations":[{"start":{"line":4083,"column":2},"end":{"line":4083,"column":2}},{"start":{"line":4083,"column":2},"end":{"line":4083,"column":2}}]},"175":{"line":4086,"type":"if","locations":[{"start":{"line":4086,"column":2},"end":{"line":4086,"column":2}},{"start":{"line":4086,"column":2},"end":{"line":4086,"column":2}}]},"176":{"line":4089,"type":"if","locations":[{"start":{"line":4089,"column":2},"end":{"line":4089,"column":2}},{"start":{"line":4089,"column":2},"end":{"line":4089,"column":2}}]},"177":{"line":4100,"type":"if","locations":[{"start":{"line":4100,"column":2},"end":{"line":4100,"column":2}},{"start":{"line":4100,"column":2},"end":{"line":4100,"column":2}}]},"178":{"line":4105,"type":"if","locations":[{"start":{"line":4105,"column":1},"end":{"line":4105,"column":1}},{"start":{"line":4105,"column":1},"end":{"line":4105,"column":1}}]},"179":{"line":4111,"type":"if","locations":[{"start":{"line":4111,"column":1},"end":{"line":4111,"column":1}},{"start":{"line":4111,"column":1},"end":{"line":4111,"column":1}}]},"180":{"line":4113,"type":"if","locations":[{"start":{"line":4113,"column":2},"end":{"line":4113,"column":2}},{"start":{"line":4113,"column":2},"end":{"line":4113,"column":2}}]},"181":{"line":4119,"type":"if","locations":[{"start":{"line":4119,"column":1},"end":{"line":4119,"column":1}},{"start":{"line":4119,"column":1},"end":{"line":4119,"column":1}}]},"182":{"line":4122,"type":"if","locations":[{"start":{"line":4122,"column":1},"end":{"line":4122,"column":1}},{"start":{"line":4122,"column":1},"end":{"line":4122,"column":1}}]},"183":{"line":4126,"type":"if","locations":[{"start":{"line":4126,"column":1},"end":{"line":4126,"column":1}},{"start":{"line":4126,"column":1},"end":{"line":4126,"column":1}}]},"184":{"line":4131,"type":"if","locations":[{"start":{"line":4131,"column":1},"end":{"line":4131,"column":1}},{"start":{"line":4131,"column":1},"end":{"line":4131,"column":1}}]},"185":{"line":4134,"type":"if","locations":[{"start":{"line":4134,"column":1},"end":{"line":4134,"column":1}},{"start":{"line":4134,"column":1},"end":{"line":4134,"column":1}}]},"186":{"line":4135,"type":"if","locations":[{"start":{"line":4135,"column":2},"end":{"line":4135,"column":2}},{"start":{"line":4135,"column":2},"end":{"line":4135,"column":2}}]},"187":{"line":4141,"type":"if","locations":[{"start":{"line":4141,"column":1},"end":{"line":4141,"column":1}},{"start":{"line":4141,"column":1},"end":{"line":4141,"column":1}}]},"188":{"line":4144,"type":"if","locations":[{"start":{"line":4144,"column":1},"end":{"line":4144,"column":1}},{"start":{"line":4144,"column":1},"end":{"line":4144,"column":1}}]},"189":{"line":4147,"type":"if","locations":[{"start":{"line":4147,"column":1},"end":{"line":4147,"column":1}},{"start":{"line":4147,"column":1},"end":{"line":4147,"column":1}}]},"190":{"line":4148,"type":"if","locations":[{"start":{"line":4148,"column":2},"end":{"line":4148,"column":2}},{"start":{"line":4148,"column":2},"end":{"line":4148,"column":2}}]},"191":{"line":4149,"type":"if","locations":[{"start":{"line":4149,"column":3},"end":{"line":4149,"column":3}},{"start":{"line":4149,"column":3},"end":{"line":4149,"column":3}}]},"192":{"line":4158,"type":"if","locations":[{"start":{"line":4158,"column":1},"end":{"line":4158,"column":1}},{"start":{"line":4158,"column":1},"end":{"line":4158,"column":1}}]},"193":{"line":4160,"type":"if","locations":[{"start":{"line":4160,"column":2},"end":{"line":4160,"column":2}},{"start":{"line":4160,"column":2},"end":{"line":4160,"column":2}}]},"194":{"line":4161,"type":"if","locations":[{"start":{"line":4161,"column":3},"end":{"line":4161,"column":3}},{"start":{"line":4161,"column":3},"end":{"line":4161,"column":3}}]},"195":{"line":4170,"type":"if","locations":[{"start":{"line":4170,"column":1},"end":{"line":4170,"column":1}},{"start":{"line":4170,"column":1},"end":{"line":4170,"column":1}}]},"196":{"line":4170,"type":"binary-expr","locations":[{"start":{"line":4170,"column":5},"end":{"line":4170,"column":18}},{"start":{"line":4170,"column":22},"end":{"line":4170,"column":33}}]},"197":{"line":4172,"type":"if","locations":[{"start":{"line":4172,"column":2},"end":{"line":4172,"column":2}},{"start":{"line":4172,"column":2},"end":{"line":4172,"column":2}}]},"198":{"line":4176,"type":"if","locations":[{"start":{"line":4176,"column":1},"end":{"line":4176,"column":1}},{"start":{"line":4176,"column":1},"end":{"line":4176,"column":1}}]},"199":{"line":4180,"type":"if","locations":[{"start":{"line":4180,"column":1},"end":{"line":4180,"column":1}},{"start":{"line":4180,"column":1},"end":{"line":4180,"column":1}}]}},"code":["/*!"," * Autolinker.js"," * 1.4.3"," *"," * Copyright(c) 2017 Gregory Jacobs <greg@greg-jacobs.com>"," * MIT License"," *"," * https://github.com/gregjacobs/Autolinker.js"," */",";(function(root, factory) {","  if (typeof define === 'function' && define.amd) {","    define([], factory);","  } else if (typeof exports === 'object') {","    module.exports = factory();","  } else {","    root.Autolinker = factory();","  }","}(this, function() {","/**"," * @class Autolinker"," * @extends Object"," *"," * Utility class used to process a given string of text, and wrap the matches in"," * the appropriate anchor (&lt;a&gt;) tags to turn them into links."," *"," * Any of the configuration options may be provided in an Object (map) provided"," * to the Autolinker constructor, which will configure how the {@link #link link()}"," * method will process the links."," *"," * For example:"," *"," *     var autolinker = new Autolinker( {"," *         newWindow : false,"," *         truncate  : 30"," *     } );"," *"," *     var html = autolinker.link( \"Joe went to www.yahoo.com\" );"," *     // produces: 'Joe went to <a href=\"http://www.yahoo.com\">yahoo.com</a>'"," *"," *"," * The {@link #static-link static link()} method may also be used to inline"," * options into a single call, which may be more convenient for one-off uses."," * For example:"," *"," *     var html = Autolinker.link( \"Joe went to www.yahoo.com\", {"," *         newWindow : false,"," *         truncate  : 30"," *     } );"," *     // produces: 'Joe went to <a href=\"http://www.yahoo.com\">yahoo.com</a>'"," *"," *"," * ## Custom Replacements of Links"," *"," * If the configuration options do not provide enough flexibility, a {@link #replaceFn}"," * may be provided to fully customize the output of Autolinker. This function is"," * called once for each URL/Email/Phone#/Hashtag/Mention (Twitter, Instagram)"," * match that is encountered."," *"," * For example:"," *"," *     var input = \"...\";  // string with URLs, Email Addresses, Phone #s, Hashtags, and Mentions (Twitter, Instagram)"," *"," *     var linkedText = Autolinker.link( input, {"," *         replaceFn : function( match ) {"," *             console.log( \"href = \", match.getAnchorHref() );"," *             console.log( \"text = \", match.getAnchorText() );"," *"," *             switch( match.getType() ) {"," *                 case 'url' :"," *                     console.log( \"url: \", match.getUrl() );"," *"," *                     if( match.getUrl().indexOf( 'mysite.com' ) === -1 ) {"," *                         var tag = match.buildTag();  // returns an `Autolinker.HtmlTag` instance, which provides mutator methods for easy changes"," *                         tag.setAttr( 'rel', 'nofollow' );"," *                         tag.addClass( 'external-link' );"," *"," *                         return tag;"," *"," *                     } else {"," *                         return true;  // let Autolinker perform its normal anchor tag replacement"," *                     }"," *"," *                 case 'email' :"," *                     var email = match.getEmail();"," *                     console.log( \"email: \", email );"," *"," *                     if( email === \"my@own.address\" ) {"," *                         return false;  // don't auto-link this particular email address; leave as-is"," *                     } else {"," *                         return;  // no return value will have Autolinker perform its normal anchor tag replacement (same as returning `true`)"," *                     }"," *"," *                 case 'phone' :"," *                     var phoneNumber = match.getPhoneNumber();"," *                     console.log( phoneNumber );"," *"," *                     return '<a href=\"http://newplace.to.link.phone.numbers.to/\">' + phoneNumber + '</a>';"," *"," *                 case 'hashtag' :"," *                     var hashtag = match.getHashtag();"," *                     console.log( hashtag );"," *"," *                     return '<a href=\"http://newplace.to.link.hashtag.handles.to/\">' + hashtag + '</a>';"," *"," *                 case 'mention' :"," *                     var mention = match.getMention();"," *                     console.log( mention );"," *"," *                     return '<a href=\"http://newplace.to.link.mention.to/\">' + mention + '</a>';"," *             }"," *         }"," *     } );"," *"," *"," * The function may return the following values:"," *"," * - `true` (Boolean): Allow Autolinker to replace the match as it normally"," *   would."," * - `false` (Boolean): Do not replace the current match at all - leave as-is."," * - Any String: If a string is returned from the function, the string will be"," *   used directly as the replacement HTML for the match."," * - An {@link Autolinker.HtmlTag} instance, which can be used to build/modify"," *   an HTML tag before writing out its HTML text."," *"," * @constructor"," * @param {Object} [cfg] The configuration options for the Autolinker instance,"," *   specified in an Object (map)."," */","var Autolinker = function( cfg ) {","\tcfg = cfg || {};","","\tthis.version = Autolinker.version;","","\tthis.urls = this.normalizeUrlsCfg( cfg.urls );","\tthis.email = typeof cfg.email === 'boolean' ? cfg.email : true;","\tthis.phone = typeof cfg.phone === 'boolean' ? cfg.phone : true;","\tthis.hashtag = cfg.hashtag || false;","\tthis.mention = cfg.mention || false;","\tthis.newWindow = typeof cfg.newWindow === 'boolean' ? cfg.newWindow : true;","\tthis.stripPrefix = this.normalizeStripPrefixCfg( cfg.stripPrefix );","\tthis.stripTrailingSlash = typeof cfg.stripTrailingSlash === 'boolean' ? cfg.stripTrailingSlash : true;","","\t// Validate the value of the `mention` cfg","\tvar mention = this.mention;","\tif( mention !== false && mention !== 'twitter' && mention !== 'instagram' ) {","\t\tthrow new Error( \"invalid `mention` cfg - see docs\" );","\t}","","\t// Validate the value of the `hashtag` cfg","\tvar hashtag = this.hashtag;","\tif( hashtag !== false && hashtag !== 'twitter' && hashtag !== 'facebook' && hashtag !== 'instagram' ) {","\t\tthrow new Error( \"invalid `hashtag` cfg - see docs\" );","\t}","","\tthis.truncate = this.normalizeTruncateCfg( cfg.truncate );","\tthis.className = cfg.className || '';","\tthis.replaceFn = cfg.replaceFn || null;","\tthis.context = cfg.context || this;","","\tthis.htmlParser = null;","\tthis.matchers = null;","\tthis.tagBuilder = null;","};","","","","/**"," * Automatically links URLs, Email addresses, Phone Numbers, Twitter handles,"," * Hashtags, and Mentions found in the given chunk of HTML. Does not link URLs"," * found within HTML tags."," *"," * For instance, if given the text: `You should go to http://www.yahoo.com`,"," * then the result will be `You should go to &lt;a href=\"http://www.yahoo.com\"&gt;http://www.yahoo.com&lt;/a&gt;`"," *"," * Example:"," *"," *     var linkedText = Autolinker.link( \"Go to google.com\", { newWindow: false } );"," *     // Produces: \"Go to <a href=\"http://google.com\">google.com</a>\""," *"," * @static"," * @param {String} textOrHtml The HTML or text to find matches within (depending"," *   on if the {@link #urls}, {@link #email}, {@link #phone}, {@link #mention},"," *   {@link #hashtag}, and {@link #mention} options are enabled)."," * @param {Object} [options] Any of the configuration options for the Autolinker"," *   class, specified in an Object (map). See the class description for an"," *   example call."," * @return {String} The HTML text, with matches automatically linked."," */","Autolinker.link = function( textOrHtml, options ) {","\tvar autolinker = new Autolinker( options );","\treturn autolinker.link( textOrHtml );","};","","","","/**"," * Parses the input `textOrHtml` looking for URLs, email addresses, phone"," * numbers, username handles, and hashtags (depending on the configuration"," * of the Autolinker instance), and returns an array of {@link Autolinker.match.Match}"," * objects describing those matches (without making any replacements)."," *"," * Note that if parsing multiple pieces of text, it is slightly more efficient"," * to create an Autolinker instance, and use the instance-level {@link #parse}"," * method."," *"," * Example:"," *"," *     var matches = Autolinker.parse( \"Hello google.com, I am asdf@asdf.com\", {"," *         urls: true,"," *         email: true"," *     } );"," *"," *     console.log( matches.length );           // 2"," *     console.log( matches[ 0 ].getType() );   // 'url'"," *     console.log( matches[ 0 ].getUrl() );    // 'google.com'"," *     console.log( matches[ 1 ].getType() );   // 'email'"," *     console.log( matches[ 1 ].getEmail() );  // 'asdf@asdf.com'"," *"," * @static"," * @param {String} textOrHtml The HTML or text to find matches within"," *   (depending on if the {@link #urls}, {@link #email}, {@link #phone},"," *   {@link #hashtag}, and {@link #mention} options are enabled)."," * @param {Object} [options] Any of the configuration options for the Autolinker"," *   class, specified in an Object (map). See the class description for an"," *   example call."," * @return {Autolinker.match.Match[]} The array of Matches found in the"," *   given input `textOrHtml`."," */","Autolinker.parse = function( textOrHtml, options ) {","\tvar autolinker = new Autolinker( options );","\treturn autolinker.parse( textOrHtml );","};","","","/**"," * @static"," * @property {String} version (readonly)"," *"," * The Autolinker version number in the form major.minor.patch"," *"," * Ex: 0.25.1"," */","Autolinker.version = '1.4.3';","","","Autolinker.prototype = {","\tconstructor : Autolinker,  // fix constructor property","","\t/**","\t * @cfg {Boolean/Object} [urls]","\t *","\t * `true` if URLs should be automatically linked, `false` if they should not","\t * be. Defaults to `true`.","\t *","\t * Examples:","\t *","\t *     urls: true","\t *","\t *     // or","\t *","\t *     urls: {","\t *         schemeMatches : true,","\t *         wwwMatches    : true,","\t *         tldMatches    : true","\t *     }","\t *","\t * As shown above, this option also accepts an Object form with 3 properties","\t * to allow for more customization of what exactly gets linked. All default","\t * to `true`:","\t *","\t * @cfg {Boolean} [urls.schemeMatches] `true` to match URLs found prefixed","\t *   with a scheme, i.e. `http://google.com`, or `other+scheme://google.com`,","\t *   `false` to prevent these types of matches.","\t * @cfg {Boolean} [urls.wwwMatches] `true` to match urls found prefixed with","\t *   `'www.'`, i.e. `www.google.com`. `false` to prevent these types of","\t *   matches. Note that if the URL had a prefixed scheme, and","\t *   `schemeMatches` is true, it will still be linked.","\t * @cfg {Boolean} [urls.tldMatches] `true` to match URLs with known top","\t *   level domains (.com, .net, etc.) that are not prefixed with a scheme or","\t *   `'www.'`. This option attempts to match anything that looks like a URL","\t *   in the given text. Ex: `google.com`, `asdf.org/?page=1`, etc. `false`","\t *   to prevent these types of matches.","\t */","","\t/**","\t * @cfg {Boolean} [email=true]","\t *","\t * `true` if email addresses should be automatically linked, `false` if they","\t * should not be.","\t */","","\t/**","\t * @cfg {Boolean} [phone=true]","\t *","\t * `true` if Phone numbers (\"(555)555-5555\") should be automatically linked,","\t * `false` if they should not be.","\t */","","\t/**","\t * @cfg {Boolean/String} [hashtag=false]","\t *","\t * A string for the service name to have hashtags (ex: \"#myHashtag\")","\t * auto-linked to. The currently-supported values are:","\t *","\t * - 'twitter'","\t * - 'facebook'","\t * - 'instagram'","\t *","\t * Pass `false` to skip auto-linking of hashtags.","\t */","","\t/**","\t * @cfg {String/Boolean} [mention=false]","\t *","\t * A string for the service name to have mentions (ex: \"@myuser\")","\t * auto-linked to. The currently supported values are:","\t *","\t * - 'twitter'","\t * - 'instagram'","\t *","\t * Defaults to `false` to skip auto-linking of mentions.","\t */","","\t/**","\t * @cfg {Boolean} [newWindow=true]","\t *","\t * `true` if the links should open in a new window, `false` otherwise.","\t */","","\t/**","\t * @cfg {Boolean/Object} [stripPrefix]","\t *","\t * `true` if 'http://' (or 'https://') and/or the 'www.' should be stripped","\t * from the beginning of URL links' text, `false` otherwise. Defaults to","\t * `true`.","\t *","\t * Examples:","\t *","\t *     stripPrefix: true","\t *","\t *     // or","\t *","\t *     stripPrefix: {","\t *         scheme : true,","\t *         www    : true","\t *     }","\t *","\t * As shown above, this option also accepts an Object form with 2 properties","\t * to allow for more customization of what exactly is prevented from being","\t * displayed. Both default to `true`:","\t *","\t * @cfg {Boolean} [stripPrefix.scheme] `true` to prevent the scheme part of","\t *   a URL match from being displayed to the user. Example:","\t *   `'http://google.com'` will be displayed as `'google.com'`. `false` to","\t *   not strip the scheme. NOTE: Only an `'http://'` or `'https://'` scheme","\t *   will be removed, so as not to remove a potentially dangerous scheme","\t *   (such as `'file://'` or `'javascript:'`)","\t * @cfg {Boolean} [stripPrefix.www] www (Boolean): `true` to prevent the","\t *   `'www.'` part of a URL match from being displayed to the user. Ex:","\t *   `'www.google.com'` will be displayed as `'google.com'`. `false` to not","\t *   strip the `'www'`.","\t */","","\t/**","\t * @cfg {Boolean} [stripTrailingSlash=true]","\t *","\t * `true` to remove the trailing slash from URL matches, `false` to keep","\t *  the trailing slash.","\t *","\t *  Example when `true`: `http://google.com/` will be displayed as","\t *  `http://google.com`.","\t */","","\t/**","\t * @cfg {Number/Object} [truncate=0]","\t *","\t * ## Number Form","\t *","\t * A number for how many characters matched text should be truncated to","\t * inside the text of a link. If the matched text is over this number of","\t * characters, it will be truncated to this length by adding a two period","\t * ellipsis ('..') to the end of the string.","\t *","\t * For example: A url like 'http://www.yahoo.com/some/long/path/to/a/file'","\t * truncated to 25 characters might look something like this:","\t * 'yahoo.com/some/long/pat..'","\t *","\t * Example Usage:","\t *","\t *     truncate: 25","\t *","\t *","\t *  Defaults to `0` for \"no truncation.\"","\t *","\t *","\t * ## Object Form","\t *","\t * An Object may also be provided with two properties: `length` (Number) and","\t * `location` (String). `location` may be one of the following: 'end'","\t * (default), 'middle', or 'smart'.","\t *","\t * Example Usage:","\t *","\t *     truncate: { length: 25, location: 'middle' }","\t *","\t * @cfg {Number} [truncate.length=0] How many characters to allow before","\t *   truncation will occur. Defaults to `0` for \"no truncation.\"","\t * @cfg {\"end\"/\"middle\"/\"smart\"} [truncate.location=\"end\"]","\t *","\t * - 'end' (default): will truncate up to the number of characters, and then","\t *   add an ellipsis at the end. Ex: 'yahoo.com/some/long/pat..'","\t * - 'middle': will truncate and add the ellipsis in the middle. Ex:","\t *   'yahoo.com/s..th/to/a/file'","\t * - 'smart': for URLs where the algorithm attempts to strip out unnecessary","\t *   parts first (such as the 'www.', then URL scheme, hash, etc.),","\t *   attempting to make the URL human-readable before looking for a good","\t *   point to insert the ellipsis if it is still too long. Ex:","\t *   'yahoo.com/some..to/a/file'. For more details, see","\t *   {@link Autolinker.truncate.TruncateSmart}.","\t */","","\t/**","\t * @cfg {String} className","\t *","\t * A CSS class name to add to the generated links. This class will be added","\t * to all links, as well as this class plus match suffixes for styling","\t * url/email/phone/hashtag/mention links differently.","\t *","\t * For example, if this config is provided as \"myLink\", then:","\t *","\t * - URL links will have the CSS classes: \"myLink myLink-url\"","\t * - Email links will have the CSS classes: \"myLink myLink-email\", and","\t * - Phone links will have the CSS classes: \"myLink myLink-phone\"","\t * - Hashtag links will have the CSS classes: \"myLink myLink-hashtag\"","\t * - Mention links will have the CSS classes: \"myLink myLink-mention myLink-[type]\"","\t *   where [type] is either \"instagram\" or \"twitter\"","\t */","","\t/**","\t * @cfg {Function} replaceFn","\t *","\t * A function to individually process each match found in the input string.","\t *","\t * See the class's description for usage.","\t *","\t * The `replaceFn` can be called with a different context object (`this`","\t * reference) using the {@link #context} cfg.","\t *","\t * This function is called with the following parameter:","\t *","\t * @cfg {Autolinker.match.Match} replaceFn.match The Match instance which","\t *   can be used to retrieve information about the match that the `replaceFn`","\t *   is currently processing. See {@link Autolinker.match.Match} subclasses","\t *   for details.","\t */","","\t/**","\t * @cfg {Object} context","\t *","\t * The context object (`this` reference) to call the `replaceFn` with.","\t *","\t * Defaults to this Autolinker instance.","\t */","","","\t/**","\t * @property {String} version (readonly)","\t *","\t * The Autolinker version number in the form major.minor.patch","\t *","\t * Ex: 0.25.1","\t */","","\t/**","\t * @private","\t * @property {Autolinker.htmlParser.HtmlParser} htmlParser","\t *","\t * The HtmlParser instance used to skip over HTML tags, while finding text","\t * nodes to process. This is lazily instantiated in the {@link #getHtmlParser}","\t * method.","\t */","","\t/**","\t * @private","\t * @property {Autolinker.matcher.Matcher[]} matchers","\t *","\t * The {@link Autolinker.matcher.Matcher} instances for this Autolinker","\t * instance.","\t *","\t * This is lazily created in {@link #getMatchers}.","\t */","","\t/**","\t * @private","\t * @property {Autolinker.AnchorTagBuilder} tagBuilder","\t *","\t * The AnchorTagBuilder instance used to build match replacement anchor tags.","\t * Note: this is lazily instantiated in the {@link #getTagBuilder} method.","\t */","","","\t/**","\t * Normalizes the {@link #urls} config into an Object with 3 properties:","\t * `schemeMatches`, `wwwMatches`, and `tldMatches`, all Booleans.","\t *","\t * See {@link #urls} config for details.","\t *","\t * @private","\t * @param {Boolean/Object} urls","\t * @return {Object}","\t */","\tnormalizeUrlsCfg : function( urls ) {","\t\tif( urls == null ) urls = true;  // default to `true`","","\t\tif( typeof urls === 'boolean' ) {","\t\t\treturn { schemeMatches: urls, wwwMatches: urls, tldMatches: urls };","","\t\t} else {  // object form","\t\t\treturn {","\t\t\t\tschemeMatches : typeof urls.schemeMatches === 'boolean' ? urls.schemeMatches : true,","\t\t\t\twwwMatches    : typeof urls.wwwMatches === 'boolean'    ? urls.wwwMatches    : true,","\t\t\t\ttldMatches    : typeof urls.tldMatches === 'boolean'    ? urls.tldMatches    : true","\t\t\t};","\t\t}","\t},","","","\t/**","\t * Normalizes the {@link #stripPrefix} config into an Object with 2","\t * properties: `scheme`, and `www` - both Booleans.","\t *","\t * See {@link #stripPrefix} config for details.","\t *","\t * @private","\t * @param {Boolean/Object} stripPrefix","\t * @return {Object}","\t */","\tnormalizeStripPrefixCfg : function( stripPrefix ) {","\t\tif( stripPrefix == null ) stripPrefix = true;  // default to `true`","","\t\tif( typeof stripPrefix === 'boolean' ) {","\t\t\treturn { scheme: stripPrefix, www: stripPrefix };","","\t\t} else {  // object form","\t\t\treturn {","\t\t\t\tscheme : typeof stripPrefix.scheme === 'boolean' ? stripPrefix.scheme : true,","\t\t\t\twww    : typeof stripPrefix.www === 'boolean'    ? stripPrefix.www    : true","\t\t\t};","\t\t}","\t},","","","\t/**","\t * Normalizes the {@link #truncate} config into an Object with 2 properties:","\t * `length` (Number), and `location` (String).","\t *","\t * See {@link #truncate} config for details.","\t *","\t * @private","\t * @param {Number/Object} truncate","\t * @return {Object}","\t */","\tnormalizeTruncateCfg : function( truncate ) {","\t\tif( typeof truncate === 'number' ) {","\t\t\treturn { length: truncate, location: 'end' };","","\t\t} else {  // object, or undefined/null","\t\t\treturn Autolinker.Util.defaults( truncate || {}, {","\t\t\t\tlength   : Number.POSITIVE_INFINITY,","\t\t\t\tlocation : 'end'","\t\t\t} );","\t\t}","\t},","","","\t/**","\t * Parses the input `textOrHtml` looking for URLs, email addresses, phone","\t * numbers, username handles, and hashtags (depending on the configuration","\t * of the Autolinker instance), and returns an array of {@link Autolinker.match.Match}","\t * objects describing those matches (without making any replacements).","\t *","\t * This method is used by the {@link #link} method, but can also be used to","\t * simply do parsing of the input in order to discover what kinds of links","\t * there are and how many.","\t *","\t * Example usage:","\t *","\t *     var autolinker = new Autolinker( {","\t *         urls: true,","\t *         email: true","\t *     } );","\t *","\t *     var matches = autolinker.parse( \"Hello google.com, I am asdf@asdf.com\" );","\t *","\t *     console.log( matches.length );           // 2","\t *     console.log( matches[ 0 ].getType() );   // 'url'","\t *     console.log( matches[ 0 ].getUrl() );    // 'google.com'","\t *     console.log( matches[ 1 ].getType() );   // 'email'","\t *     console.log( matches[ 1 ].getEmail() );  // 'asdf@asdf.com'","\t *","\t * @param {String} textOrHtml The HTML or text to find matches within","\t *   (depending on if the {@link #urls}, {@link #email}, {@link #phone},","\t *   {@link #hashtag}, and {@link #mention} options are enabled).","\t * @return {Autolinker.match.Match[]} The array of Matches found in the","\t *   given input `textOrHtml`.","\t */","\tparse : function( textOrHtml ) {","\t\tvar htmlParser = this.getHtmlParser(),","\t\t    htmlNodes = htmlParser.parse( textOrHtml ),","\t\t    anchorTagStackCount = 0,  // used to only process text around anchor tags, and any inner text/html they may have;","\t\t    matches = [];","","\t\t// Find all matches within the `textOrHtml` (but not matches that are","\t\t// already nested within <a> tags)","\t\tfor( var i = 0, len = htmlNodes.length; i < len; i++ ) {","\t\t\tvar node = htmlNodes[ i ],","\t\t\t    nodeType = node.getType();","","\t\t\tif( nodeType === 'element' && node.getTagName() === 'a' ) {  // Process HTML anchor element nodes in the input `textOrHtml` to find out when we're within an <a> tag","\t\t\t\tif( !node.isClosing() ) {  // it's the start <a> tag","\t\t\t\t\tanchorTagStackCount++;","\t\t\t\t} else {  // it's the end </a> tag","\t\t\t\t\tanchorTagStackCount = Math.max( anchorTagStackCount - 1, 0 );  // attempt to handle extraneous </a> tags by making sure the stack count never goes below 0","\t\t\t\t}","","\t\t\t} else if( nodeType === 'text' && anchorTagStackCount === 0 ) {  // Process text nodes that are not within an <a> tag","\t\t\t\tvar textNodeMatches = this.parseText( node.getText(), node.getOffset() );","","\t\t\t\tmatches.push.apply( matches, textNodeMatches );","\t\t\t}","\t\t}","","","\t\t// After we have found all matches, remove subsequent matches that","\t\t// overlap with a previous match. This can happen for instance with URLs,","\t\t// where the url 'google.com/#link' would match '#link' as a hashtag.","\t\tmatches = this.compactMatches( matches );","","\t\t// And finally, remove matches for match types that have been turned","\t\t// off. We needed to have all match types turned on initially so that","\t\t// things like hashtags could be filtered out if they were really just","\t\t// part of a URL match (for instance, as a named anchor).","\t\tmatches = this.removeUnwantedMatches( matches );","","\t\treturn matches;","\t},","","","\t/**","\t * After we have found all matches, we need to remove subsequent matches","\t * that overlap with a previous match. This can happen for instance with","\t * URLs, where the url 'google.com/#link' would match '#link' as a hashtag.","\t *","\t * @private","\t * @param {Autolinker.match.Match[]} matches","\t * @return {Autolinker.match.Match[]}","\t */","\tcompactMatches : function( matches ) {","\t\t// First, the matches need to be sorted in order of offset","\t\tmatches.sort( function( a, b ) { return a.getOffset() - b.getOffset(); } );","","\t\tfor( var i = 0; i < matches.length - 1; i++ ) {","\t\t\tvar match = matches[ i ],","\t\t\t\t\toffset = match.getOffset(),","\t\t\t\t\tmatchedTextLength = match.getMatchedText().length,","\t\t\t    endIdx = offset + matchedTextLength;","","\t\t\tif( i + 1 < matches.length ) {","\t\t\t\t// Remove subsequent matches that equal offset with current match","\t\t\t\tif( matches[ i + 1 ].getOffset() === offset ) {","\t\t\t\t\tvar removeIdx = matches[ i + 1 ].getMatchedText().length > matchedTextLength ? i : i + 1;","\t\t\t\t\tmatches.splice( removeIdx, 1 );","\t\t\t\t\tcontinue;","\t\t\t\t}","","\t\t\t\t// Remove subsequent matches that overlap with the current match","\t\t\t\tif( matches[ i + 1 ].getOffset() <= endIdx ) {","\t\t\t\t\tmatches.splice( i + 1, 1 );","\t\t\t\t}","\t\t\t}","\t\t}","","\t\treturn matches;","\t},","","","\t/**","\t * Removes matches for matchers that were turned off in the options. For","\t * example, if {@link #hashtag hashtags} were not to be matched, we'll","\t * remove them from the `matches` array here.","\t *","\t * @private","\t * @param {Autolinker.match.Match[]} matches The array of matches to remove","\t *   the unwanted matches from. Note: this array is mutated for the","\t *   removals.","\t * @return {Autolinker.match.Match[]} The mutated input `matches` array.","\t */","\tremoveUnwantedMatches : function( matches ) {","\t\tvar remove = Autolinker.Util.remove;","","\t\tif( !this.hashtag ) remove( matches, function( match ) { return match.getType() === 'hashtag'; } );","\t\tif( !this.email )   remove( matches, function( match ) { return match.getType() === 'email'; } );","\t\tif( !this.phone )   remove( matches, function( match ) { return match.getType() === 'phone'; } );","\t\tif( !this.mention ) remove( matches, function( match ) { return match.getType() === 'mention'; } );","\t\tif( !this.urls.schemeMatches ) {","\t\t\tremove( matches, function( m ) { return m.getType() === 'url' && m.getUrlMatchType() === 'scheme'; } );","\t\t}","\t\tif( !this.urls.wwwMatches ) {","\t\t\tremove( matches, function( m ) { return m.getType() === 'url' && m.getUrlMatchType() === 'www'; } );","\t\t}","\t\tif( !this.urls.tldMatches ) {","\t\t\tremove( matches, function( m ) { return m.getType() === 'url' && m.getUrlMatchType() === 'tld'; } );","\t\t}","","\t\treturn matches;","\t},","","","\t/**","\t * Parses the input `text` looking for URLs, email addresses, phone","\t * numbers, username handles, and hashtags (depending on the configuration","\t * of the Autolinker instance), and returns an array of {@link Autolinker.match.Match}","\t * objects describing those matches.","\t *","\t * This method processes a **non-HTML string**, and is used to parse and","\t * match within the text nodes of an HTML string. This method is used","\t * internally by {@link #parse}.","\t *","\t * @private","\t * @param {String} text The text to find matches within (depending on if the","\t *   {@link #urls}, {@link #email}, {@link #phone},","\t *   {@link #hashtag}, and {@link #mention} options are enabled). This must be a non-HTML string.","\t * @param {Number} [offset=0] The offset of the text node within the","\t *   original string. This is used when parsing with the {@link #parse}","\t *   method to generate correct offsets within the {@link Autolinker.match.Match}","\t *   instances, but may be omitted if calling this method publicly.","\t * @return {Autolinker.match.Match[]} The array of Matches found in the","\t *   given input `text`.","\t */","\tparseText : function( text, offset ) {","\t\toffset = offset || 0;","\t\tvar matchers = this.getMatchers(),","\t\t    matches = [];","","\t\tfor( var i = 0, numMatchers = matchers.length; i < numMatchers; i++ ) {","\t\t\tvar textMatches = matchers[ i ].parseMatches( text );","","\t\t\t// Correct the offset of each of the matches. They are originally","\t\t\t// the offset of the match within the provided text node, but we","\t\t\t// need to correct them to be relative to the original HTML input","\t\t\t// string (i.e. the one provided to #parse).","\t\t\tfor( var j = 0, numTextMatches = textMatches.length; j < numTextMatches; j++ ) {","\t\t\t\ttextMatches[ j ].setOffset( offset + textMatches[ j ].getOffset() );","\t\t\t}","","\t\t\tmatches.push.apply( matches, textMatches );","\t\t}","\t\treturn matches;","\t},","","","\t/**","\t * Automatically links URLs, Email addresses, Phone numbers, Hashtags,","\t * and Mentions (Twitter, Instagram) found in the given chunk of HTML. Does not link","\t * URLs found within HTML tags.","\t *","\t * For instance, if given the text: `You should go to http://www.yahoo.com`,","\t * then the result will be `You should go to","\t * &lt;a href=\"http://www.yahoo.com\"&gt;http://www.yahoo.com&lt;/a&gt;`","\t *","\t * This method finds the text around any HTML elements in the input","\t * `textOrHtml`, which will be the text that is processed. Any original HTML","\t * elements will be left as-is, as well as the text that is already wrapped","\t * in anchor (&lt;a&gt;) tags.","\t *","\t * @param {String} textOrHtml The HTML or text to autolink matches within","\t *   (depending on if the {@link #urls}, {@link #email}, {@link #phone}, {@link #hashtag}, and {@link #mention} options are enabled).","\t * @return {String} The HTML, with matches automatically linked.","\t */","\tlink : function( textOrHtml ) {","\t\tif( !textOrHtml ) { return \"\"; }  // handle `null` and `undefined`","","\t\tvar matches = this.parse( textOrHtml ),","\t\t\tnewHtml = [],","\t\t\tlastIndex = 0;","","\t\tfor( var i = 0, len = matches.length; i < len; i++ ) {","\t\t\tvar match = matches[ i ];","","\t\t\tnewHtml.push( textOrHtml.substring( lastIndex, match.getOffset() ) );","\t\t\tnewHtml.push( this.createMatchReturnVal( match ) );","","\t\t\tlastIndex = match.getOffset() + match.getMatchedText().length;","\t\t}","\t\tnewHtml.push( textOrHtml.substring( lastIndex ) );  // handle the text after the last match","","\t\treturn newHtml.join( '' );","\t},","","","\t/**","\t * Creates the return string value for a given match in the input string.","\t *","\t * This method handles the {@link #replaceFn}, if one was provided.","\t *","\t * @private","\t * @param {Autolinker.match.Match} match The Match object that represents","\t *   the match.","\t * @return {String} The string that the `match` should be replaced with.","\t *   This is usually the anchor tag string, but may be the `matchStr` itself","\t *   if the match is not to be replaced.","\t */","\tcreateMatchReturnVal : function( match ) {","\t\t// Handle a custom `replaceFn` being provided","\t\tvar replaceFnResult;","\t\tif( this.replaceFn ) {","\t\t\treplaceFnResult = this.replaceFn.call( this.context, match );  // Autolinker instance is the context","\t\t}","","\t\tif( typeof replaceFnResult === 'string' ) {","\t\t\treturn replaceFnResult;  // `replaceFn` returned a string, use that","","\t\t} else if( replaceFnResult === false ) {","\t\t\treturn match.getMatchedText();  // no replacement for the match","","\t\t} else if( replaceFnResult instanceof Autolinker.HtmlTag ) {","\t\t\treturn replaceFnResult.toAnchorString();","","\t\t} else {  // replaceFnResult === true, or no/unknown return value from function","\t\t\t// Perform Autolinker's default anchor tag generation","\t\t\tvar anchorTag = match.buildTag();  // returns an Autolinker.HtmlTag instance","","\t\t\treturn anchorTag.toAnchorString();","\t\t}","\t},","","","\t/**","\t * Lazily instantiates and returns the {@link #htmlParser} instance for this","\t * Autolinker instance.","\t *","\t * @protected","\t * @return {Autolinker.htmlParser.HtmlParser}","\t */","\tgetHtmlParser : function() {","\t\tvar htmlParser = this.htmlParser;","","\t\tif( !htmlParser ) {","\t\t\thtmlParser = this.htmlParser = new Autolinker.htmlParser.HtmlParser();","\t\t}","","\t\treturn htmlParser;","\t},","","","\t/**","\t * Lazily instantiates and returns the {@link Autolinker.matcher.Matcher}","\t * instances for this Autolinker instance.","\t *","\t * @protected","\t * @return {Autolinker.matcher.Matcher[]}","\t */","\tgetMatchers : function() {","\t\tif( !this.matchers ) {","\t\t\tvar matchersNs = Autolinker.matcher,","\t\t\t    tagBuilder = this.getTagBuilder();","","\t\t\tvar matchers = [","\t\t\t\tnew matchersNs.Hashtag( { tagBuilder: tagBuilder, serviceName: this.hashtag } ),","\t\t\t\tnew matchersNs.Email( { tagBuilder: tagBuilder } ),","\t\t\t\tnew matchersNs.Phone( { tagBuilder: tagBuilder } ),","\t\t\t\tnew matchersNs.Mention( { tagBuilder: tagBuilder, serviceName: this.mention } ),","\t\t\t\tnew matchersNs.Url( { tagBuilder: tagBuilder, stripPrefix: this.stripPrefix, stripTrailingSlash: this.stripTrailingSlash } )","\t\t\t];","","\t\t\treturn ( this.matchers = matchers );","","\t\t} else {","\t\t\treturn this.matchers;","\t\t}","\t},","","","\t/**","\t * Returns the {@link #tagBuilder} instance for this Autolinker instance, lazily instantiating it","\t * if it does not yet exist.","\t *","\t * This method may be used in a {@link #replaceFn} to generate the {@link Autolinker.HtmlTag HtmlTag} instance that","\t * Autolinker would normally generate, and then allow for modifications before returning it. For example:","\t *","\t *     var html = Autolinker.link( \"Test google.com\", {","\t *         replaceFn : function( match ) {","\t *             var tag = match.buildTag();  // returns an {@link Autolinker.HtmlTag} instance","\t *             tag.setAttr( 'rel', 'nofollow' );","\t *","\t *             return tag;","\t *         }","\t *     } );","\t *","\t *     // generated html:","\t *     //   Test <a href=\"http://google.com\" target=\"_blank\" rel=\"nofollow\">google.com</a>","\t *","\t * @return {Autolinker.AnchorTagBuilder}","\t */","\tgetTagBuilder : function() {","\t\tvar tagBuilder = this.tagBuilder;","","\t\tif( !tagBuilder ) {","\t\t\ttagBuilder = this.tagBuilder = new Autolinker.AnchorTagBuilder( {","\t\t\t\tnewWindow   : this.newWindow,","\t\t\t\ttruncate    : this.truncate,","\t\t\t\tclassName   : this.className","\t\t\t} );","\t\t}","","\t\treturn tagBuilder;","\t}","","};","","","// Autolinker Namespaces","","Autolinker.match = {};","Autolinker.matcher = {};","Autolinker.htmlParser = {};","Autolinker.truncate = {};","","/*global Autolinker */","/*jshint eqnull:true, boss:true */","/**"," * @class Autolinker.Util"," * @singleton"," *"," * A few utility methods for Autolinker."," */","Autolinker.Util = {","","\t/**","\t * @property {Function} abstractMethod","\t *","\t * A function object which represents an abstract method.","\t */","\tabstractMethod : function() { throw \"abstract\"; },","","","\t/**","\t * @private","\t * @property {RegExp} trimRegex","\t *","\t * The regular expression used to trim the leading and trailing whitespace","\t * from a string.","\t */","\ttrimRegex : /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,","","","\t/**","\t * Assigns (shallow copies) the properties of `src` onto `dest`.","\t *","\t * @param {Object} dest The destination object.","\t * @param {Object} src The source object.","\t * @return {Object} The destination object (`dest`)","\t */","\tassign : function( dest, src ) {","\t\tfor( var prop in src ) {","\t\t\tif( src.hasOwnProperty( prop ) ) {","\t\t\t\tdest[ prop ] = src[ prop ];","\t\t\t}","\t\t}","","\t\treturn dest;","\t},","","","\t/**","\t * Assigns (shallow copies) the properties of `src` onto `dest`, if the","\t * corresponding property on `dest` === `undefined`.","\t *","\t * @param {Object} dest The destination object.","\t * @param {Object} src The source object.","\t * @return {Object} The destination object (`dest`)","\t */","\tdefaults : function( dest, src ) {","\t\tfor( var prop in src ) {","\t\t\tif( src.hasOwnProperty( prop ) && dest[ prop ] === undefined ) {","\t\t\t\tdest[ prop ] = src[ prop ];","\t\t\t}","\t\t}","","\t\treturn dest;","\t},","","","\t/**","\t * Extends `superclass` to create a new subclass, adding the `protoProps` to the new subclass's prototype.","\t *","\t * @param {Function} superclass The constructor function for the superclass.","\t * @param {Object} protoProps The methods/properties to add to the subclass's prototype. This may contain the","\t *   special property `constructor`, which will be used as the new subclass's constructor function.","\t * @return {Function} The new subclass function.","\t */","\textend : function( superclass, protoProps ) {","\t\tvar superclassProto = superclass.prototype;","","\t\tvar F = function() {};","\t\tF.prototype = superclassProto;","","\t\tvar subclass;","\t\tif( protoProps.hasOwnProperty( 'constructor' ) ) {","\t\t\tsubclass = protoProps.constructor;","\t\t} else {","\t\t\tsubclass = function() { superclassProto.constructor.apply( this, arguments ); };","\t\t}","","\t\tvar subclassProto = subclass.prototype = new F();  // set up prototype chain","\t\tsubclassProto.constructor = subclass;  // fix constructor property","\t\tsubclassProto.superclass = superclassProto;","","\t\tdelete protoProps.constructor;  // don't re-assign constructor property to the prototype, since a new function may have been created (`subclass`), which is now already there","\t\tAutolinker.Util.assign( subclassProto, protoProps );","","\t\treturn subclass;","\t},","","","\t/**","\t * Truncates the `str` at `len - ellipsisChars.length`, and adds the `ellipsisChars` to the","\t * end of the string (by default, two periods: '..'). If the `str` length does not exceed","\t * `len`, the string will be returned unchanged.","\t *","\t * @param {String} str The string to truncate and add an ellipsis to.","\t * @param {Number} truncateLen The length to truncate the string at.","\t * @param {String} [ellipsisChars=...] The ellipsis character(s) to add to the end of `str`","\t *   when truncated. Defaults to '...'","\t */","\tellipsis : function( str, truncateLen, ellipsisChars ) {","\t\tvar ellipsisLength;","","\t\tif( str.length > truncateLen ) {","\t\t\tif(ellipsisChars == null) {","\t\t\t  ellipsisChars = '&hellip;';","\t\t\t  ellipsisLength = 3;","\t\t\t} else {","\t\t\t  ellipsisLength = ellipsisChars.length;","\t\t\t}","","\t\t\tstr = str.substring( 0, truncateLen - ellipsisLength ) + ellipsisChars;","\t\t}","\t\treturn str;","\t},","","","\t/**","\t * Supports `Array.prototype.indexOf()` functionality for old IE (IE8 and below).","\t *","\t * @param {Array} arr The array to find an element of.","\t * @param {*} element The element to find in the array, and return the index of.","\t * @return {Number} The index of the `element`, or -1 if it was not found.","\t */","\tindexOf : function( arr, element ) {","\t\tif( Array.prototype.indexOf ) {","\t\t\treturn arr.indexOf( element );","","\t\t} else {","\t\t\tfor( var i = 0, len = arr.length; i < len; i++ ) {","\t\t\t\tif( arr[ i ] === element ) return i;","\t\t\t}","\t\t\treturn -1;","\t\t}","\t},","","","\t/**","\t * Removes array elements based on a filtering function. Mutates the input","\t * array.","\t *","\t * Using this instead of the ES5 Array.prototype.filter() function, to allow","\t * Autolinker compatibility with IE8, and also to prevent creating many new","\t * arrays in memory for filtering.","\t *","\t * @param {Array} arr The array to remove elements from. This array is","\t *   mutated.","\t * @param {Function} fn A function which should return `true` to","\t *   remove an element.","\t * @return {Array} The mutated input `arr`.","\t */","\tremove : function( arr, fn ) {","\t\tfor( var i = arr.length - 1; i >= 0; i-- ) {","\t\t\tif( fn( arr[ i ] ) === true ) {","\t\t\t\tarr.splice( i, 1 );","\t\t\t}","\t\t}","\t},","","","\t/**","\t * Performs the functionality of what modern browsers do when `String.prototype.split()` is called","\t * with a regular expression that contains capturing parenthesis.","\t *","\t * For example:","\t *","\t *     // Modern browsers:","\t *     \"a,b,c\".split( /(,)/ );  // --> [ 'a', ',', 'b', ',', 'c' ]","\t *","\t *     // Old IE (including IE8):","\t *     \"a,b,c\".split( /(,)/ );  // --> [ 'a', 'b', 'c' ]","\t *","\t * This method emulates the functionality of modern browsers for the old IE case.","\t *","\t * @param {String} str The string to split.","\t * @param {RegExp} splitRegex The regular expression to split the input `str` on. The splitting","\t *   character(s) will be spliced into the array, as in the \"modern browsers\" example in the","\t *   description of this method.","\t *   Note #1: the supplied regular expression **must** have the 'g' flag specified.","\t *   Note #2: for simplicity's sake, the regular expression does not need","\t *   to contain capturing parenthesis - it will be assumed that any match has them.","\t * @return {String[]} The split array of strings, with the splitting character(s) included.","\t */","\tsplitAndCapture : function( str, splitRegex ) {","\t\tif( !splitRegex.global ) throw new Error( \"`splitRegex` must have the 'g' flag set\" );","","\t\tvar result = [],","\t\t    lastIdx = 0,","\t\t    match;","","\t\twhile( match = splitRegex.exec( str ) ) {","\t\t\tresult.push( str.substring( lastIdx, match.index ) );","\t\t\tresult.push( match[ 0 ] );  // push the splitting char(s)","","\t\t\tlastIdx = match.index + match[ 0 ].length;","\t\t}","\t\tresult.push( str.substring( lastIdx ) );","","\t\treturn result;","\t},","","","\t/**","\t * Trims the leading and trailing whitespace from a string.","\t *","\t * @param {String} str The string to trim.","\t * @return {String}","\t */","\ttrim : function( str ) {","\t\treturn str.replace( this.trimRegex, '' );","\t}","","};","","/*global Autolinker */","/*jshint boss:true */","/**"," * @class Autolinker.HtmlTag"," * @extends Object"," *"," * Represents an HTML tag, which can be used to easily build/modify HTML tags programmatically."," *"," * Autolinker uses this abstraction to create HTML tags, and then write them out as strings. You may also use"," * this class in your code, especially within a {@link Autolinker#replaceFn replaceFn}."," *"," * ## Examples"," *"," * Example instantiation:"," *"," *     var tag = new Autolinker.HtmlTag( {"," *         tagName : 'a',"," *         attrs   : { 'href': 'http://google.com', 'class': 'external-link' },"," *         innerHtml : 'Google'"," *     } );"," *"," *     tag.toAnchorString();  // <a href=\"http://google.com\" class=\"external-link\">Google</a>"," *"," *     // Individual accessor methods"," *     tag.getTagName();                 // 'a'"," *     tag.getAttr( 'href' );            // 'http://google.com'"," *     tag.hasClass( 'external-link' );  // true"," *"," *"," * Using mutator methods (which may be used in combination with instantiation config properties):"," *"," *     var tag = new Autolinker.HtmlTag();"," *     tag.setTagName( 'a' );"," *     tag.setAttr( 'href', 'http://google.com' );"," *     tag.addClass( 'external-link' );"," *     tag.setInnerHtml( 'Google' );"," *"," *     tag.getTagName();                 // 'a'"," *     tag.getAttr( 'href' );            // 'http://google.com'"," *     tag.hasClass( 'external-link' );  // true"," *"," *     tag.toAnchorString();  // <a href=\"http://google.com\" class=\"external-link\">Google</a>"," *"," *"," * ## Example use within a {@link Autolinker#replaceFn replaceFn}"," *"," *     var html = Autolinker.link( \"Test google.com\", {"," *         replaceFn : function( match ) {"," *             var tag = match.buildTag();  // returns an {@link Autolinker.HtmlTag} instance, configured with the Match's href and anchor text"," *             tag.setAttr( 'rel', 'nofollow' );"," *"," *             return tag;"," *         }"," *     } );"," *"," *     // generated html:"," *     //   Test <a href=\"http://google.com\" target=\"_blank\" rel=\"nofollow\">google.com</a>"," *"," *"," * ## Example use with a new tag for the replacement"," *"," *     var html = Autolinker.link( \"Test google.com\", {"," *         replaceFn : function( match ) {"," *             var tag = new Autolinker.HtmlTag( {"," *                 tagName : 'button',"," *                 attrs   : { 'title': 'Load URL: ' + match.getAnchorHref() },"," *                 innerHtml : 'Load URL: ' + match.getAnchorText()"," *             } );"," *"," *             return tag;"," *         }"," *     } );"," *"," *     // generated html:"," *     //   Test <button title=\"Load URL: http://google.com\">Load URL: google.com</button>"," */","Autolinker.HtmlTag = Autolinker.Util.extend( Object, {","","\t/**","\t * @cfg {String} tagName","\t *","\t * The tag name. Ex: 'a', 'button', etc.","\t *","\t * Not required at instantiation time, but should be set using {@link #setTagName} before {@link #toAnchorString}","\t * is executed.","\t */","","\t/**","\t * @cfg {Object.<String, String>} attrs","\t *","\t * An key/value Object (map) of attributes to create the tag with. The keys are the attribute names, and the","\t * values are the attribute values.","\t */","","\t/**","\t * @cfg {String} innerHtml","\t *","\t * The inner HTML for the tag.","\t *","\t * Note the camel case name on `innerHtml`. Acronyms are camelCased in this utility (such as not to run into the acronym","\t * naming inconsistency that the DOM developers created with `XMLHttpRequest`). You may alternatively use {@link #innerHTML}","\t * if you prefer, but this one is recommended.","\t */","","\t/**","\t * @cfg {String} innerHTML","\t *","\t * Alias of {@link #innerHtml}, accepted for consistency with the browser DOM api, but prefer the camelCased version","\t * for acronym names.","\t */","","","\t/**","\t * @protected","\t * @property {RegExp} whitespaceRegex","\t *","\t * Regular expression used to match whitespace in a string of CSS classes.","\t */","\twhitespaceRegex : /\\s+/,","","","\t/**","\t * @constructor","\t * @param {Object} [cfg] The configuration properties for this class, in an Object (map)","\t */","\tconstructor : function( cfg ) {","\t\tAutolinker.Util.assign( this, cfg );","","\t\tthis.innerHtml = this.innerHtml || this.innerHTML;  // accept either the camelCased form or the fully capitalized acronym","\t},","","","\t/**","\t * Sets the tag name that will be used to generate the tag with.","\t *","\t * @param {String} tagName","\t * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.","\t */","\tsetTagName : function( tagName ) {","\t\tthis.tagName = tagName;","\t\treturn this;","\t},","","","\t/**","\t * Retrieves the tag name.","\t *","\t * @return {String}","\t */","\tgetTagName : function() {","\t\treturn this.tagName || \"\";","\t},","","","\t/**","\t * Sets an attribute on the HtmlTag.","\t *","\t * @param {String} attrName The attribute name to set.","\t * @param {String} attrValue The attribute value to set.","\t * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.","\t */","\tsetAttr : function( attrName, attrValue ) {","\t\tvar tagAttrs = this.getAttrs();","\t\ttagAttrs[ attrName ] = attrValue;","","\t\treturn this;","\t},","","","\t/**","\t * Retrieves an attribute from the HtmlTag. If the attribute does not exist, returns `undefined`.","\t *","\t * @param {String} attrName The attribute name to retrieve.","\t * @return {String} The attribute's value, or `undefined` if it does not exist on the HtmlTag.","\t */","\tgetAttr : function( attrName ) {","\t\treturn this.getAttrs()[ attrName ];","\t},","","","\t/**","\t * Sets one or more attributes on the HtmlTag.","\t *","\t * @param {Object.<String, String>} attrs A key/value Object (map) of the attributes to set.","\t * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.","\t */","\tsetAttrs : function( attrs ) {","\t\tvar tagAttrs = this.getAttrs();","\t\tAutolinker.Util.assign( tagAttrs, attrs );","","\t\treturn this;","\t},","","","\t/**","\t * Retrieves the attributes Object (map) for the HtmlTag.","\t *","\t * @return {Object.<String, String>} A key/value object of the attributes for the HtmlTag.","\t */","\tgetAttrs : function() {","\t\treturn this.attrs || ( this.attrs = {} );","\t},","","","\t/**","\t * Sets the provided `cssClass`, overwriting any current CSS classes on the HtmlTag.","\t *","\t * @param {String} cssClass One or more space-separated CSS classes to set (overwrite).","\t * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.","\t */","\tsetClass : function( cssClass ) {","\t\treturn this.setAttr( 'class', cssClass );","\t},","","","\t/**","\t * Convenience method to add one or more CSS classes to the HtmlTag. Will not add duplicate CSS classes.","\t *","\t * @param {String} cssClass One or more space-separated CSS classes to add.","\t * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.","\t */","\taddClass : function( cssClass ) {","\t\tvar classAttr = this.getClass(),","\t\t    whitespaceRegex = this.whitespaceRegex,","\t\t    indexOf = Autolinker.Util.indexOf,  // to support IE8 and below","\t\t    classes = ( !classAttr ) ? [] : classAttr.split( whitespaceRegex ),","\t\t    newClasses = cssClass.split( whitespaceRegex ),","\t\t    newClass;","","\t\twhile( newClass = newClasses.shift() ) {","\t\t\tif( indexOf( classes, newClass ) === -1 ) {","\t\t\t\tclasses.push( newClass );","\t\t\t}","\t\t}","","\t\tthis.getAttrs()[ 'class' ] = classes.join( \" \" );","\t\treturn this;","\t},","","","\t/**","\t * Convenience method to remove one or more CSS classes from the HtmlTag.","\t *","\t * @param {String} cssClass One or more space-separated CSS classes to remove.","\t * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.","\t */","\tremoveClass : function( cssClass ) {","\t\tvar classAttr = this.getClass(),","\t\t    whitespaceRegex = this.whitespaceRegex,","\t\t    indexOf = Autolinker.Util.indexOf,  // to support IE8 and below","\t\t    classes = ( !classAttr ) ? [] : classAttr.split( whitespaceRegex ),","\t\t    removeClasses = cssClass.split( whitespaceRegex ),","\t\t    removeClass;","","\t\twhile( classes.length && ( removeClass = removeClasses.shift() ) ) {","\t\t\tvar idx = indexOf( classes, removeClass );","\t\t\tif( idx !== -1 ) {","\t\t\t\tclasses.splice( idx, 1 );","\t\t\t}","\t\t}","","\t\tthis.getAttrs()[ 'class' ] = classes.join( \" \" );","\t\treturn this;","\t},","","","\t/**","\t * Convenience method to retrieve the CSS class(es) for the HtmlTag, which will each be separated by spaces when","\t * there are multiple.","\t *","\t * @return {String}","\t */","\tgetClass : function() {","\t\treturn this.getAttrs()[ 'class' ] || \"\";","\t},","","","\t/**","\t * Convenience method to check if the tag has a CSS class or not.","\t *","\t * @param {String} cssClass The CSS class to check for.","\t * @return {Boolean} `true` if the HtmlTag has the CSS class, `false` otherwise.","\t */","\thasClass : function( cssClass ) {","\t\treturn ( ' ' + this.getClass() + ' ' ).indexOf( ' ' + cssClass + ' ' ) !== -1;","\t},","","","\t/**","\t * Sets the inner HTML for the tag.","\t *","\t * @param {String} html The inner HTML to set.","\t * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.","\t */","\tsetInnerHtml : function( html ) {","\t\tthis.innerHtml = html;","","\t\treturn this;","\t},","","","\t/**","\t * Retrieves the inner HTML for the tag.","\t *","\t * @return {String}","\t */","\tgetInnerHtml : function() {","\t\treturn this.innerHtml || \"\";","\t},","","","\t/**","\t * Override of superclass method used to generate the HTML string for the tag.","\t *","\t * @return {String}","\t */","\ttoAnchorString : function() {","\t\tvar tagName = this.getTagName(),","\t\t    attrsStr = this.buildAttrsStr();","","\t\tattrsStr = ( attrsStr ) ? ' ' + attrsStr : '';  // prepend a space if there are actually attributes","","\t\treturn [ '<', tagName, attrsStr, '>', this.getInnerHtml(), '</', tagName, '>' ].join( \"\" );","\t},","","","\t/**","\t * Support method for {@link #toAnchorString}, returns the string space-separated key=\"value\" pairs, used to populate","\t * the stringified HtmlTag.","\t *","\t * @protected","\t * @return {String} Example return: `attr1=\"value1\" attr2=\"value2\"`","\t */","\tbuildAttrsStr : function() {","\t\tif( !this.attrs ) return \"\";  // no `attrs` Object (map) has been set, return empty string","","\t\tvar attrs = this.getAttrs(),","\t\t    attrsArr = [];","","\t\tfor( var prop in attrs ) {","\t\t\tif( attrs.hasOwnProperty( prop ) ) {","\t\t\t\tattrsArr.push( prop + '=\"' + attrs[ prop ] + '\"' );","\t\t\t}","\t\t}","\t\treturn attrsArr.join( \" \" );","\t}","","} );","","/*global Autolinker */","/**"," * @class Autolinker.RegexLib"," * @singleton"," *"," * Builds and stores a library of the common regular expressions used by the"," * Autolinker utility."," *"," * Other regular expressions may exist ad-hoc, but these are generally the"," * regular expressions that are shared between source files."," */","Autolinker.RegexLib = (function() {","","\t/**","\t * The string form of a regular expression that would match all of the","\t * alphabetic (\"letter\") chars in the unicode character set when placed in a","\t * RegExp character class (`[]`). This includes all international alphabetic","\t * characters.","\t *","\t * These would be the characters matched by unicode regex engines `\\p{L}`","\t * escape (\"all letters\").","\t *","\t * Taken from the XRegExp library: http://xregexp.com/","\t * Specifically: http://xregexp.com/v/3.0.0/unicode-categories.js","\t *","\t * @private","\t * @type {String}","\t */","\tvar alphaCharsStr = 'A-Za-z\\\\xAA\\\\xB5\\\\xBA\\\\xC0-\\\\xD6\\\\xD8-\\\\xF6\\\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC';","","\t/**","\t * The string form of a regular expression that would match all of the","\t * decimal number chars in the unicode character set when placed in a RegExp","\t * character class (`[]`).","\t *","\t * These would be the characters matched by unicode regex engines `\\p{Nd}`","\t * escape (\"all decimal numbers\")","\t *","\t * Taken from the XRegExp library: http://xregexp.com/","\t * Specifically: http://xregexp.com/v/3.0.0/unicode-categories.js","\t *","\t * @private","\t * @type {String}","\t */","\tvar decimalNumbersStr = '0-9\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19';","","","\t// See documentation below","\tvar alphaNumericCharsStr = alphaCharsStr + decimalNumbersStr;","","","\t// See documentation below","\tvar domainNameRegex = new RegExp( '[' + alphaNumericCharsStr + '.\\\\-]*[' + alphaNumericCharsStr + '\\\\-]' );","","\treturn {","","\t\t/**","\t\t * The string form of a regular expression that would match all of the","\t\t * letters and decimal number chars in the unicode character set when placed","\t\t * in a RegExp character class (`[]`).","\t\t *","\t\t * These would be the characters matched by unicode regex engines `[\\p{L}\\p{Nd}]`","\t\t * escape (\"all letters and decimal numbers\")","\t\t *","\t\t * @property {String} alphaNumericCharsStr","\t\t */","\t\talphaNumericCharsStr : alphaNumericCharsStr,","","\t\t/**","\t\t * The string form of a regular expression that would match all of the","\t\t * letters and in the unicode character set when placed","\t\t * in a RegExp character class (`[]`).","\t\t *","\t\t * These would be the characters matched by unicode regex engines `[\\p{L}]`","\t\t * escape (\"all letters\")","\t\t *","\t\t * @property {String} alphaCharsStr","\t\t */","\t\talphaCharsStr : alphaCharsStr,","","\t\t/**","\t\t * A regular expression to match domain names of a URL or email address.","\t\t * Ex: 'google', 'yahoo', 'some-other-company', etc.","\t\t *","\t\t * @property {RegExp} domainNameRegex","\t\t */","\t\tdomainNameRegex : domainNameRegex,","","\t};","","","}() );","","/*global Autolinker */","/*jshint sub:true */","/**"," * @protected"," * @class Autolinker.AnchorTagBuilder"," * @extends Object"," *"," * Builds anchor (&lt;a&gt;) tags for the Autolinker utility when a match is"," * found."," *"," * Normally this class is instantiated, configured, and used internally by an"," * {@link Autolinker} instance, but may actually be used indirectly in a"," * {@link Autolinker#replaceFn replaceFn} to create {@link Autolinker.HtmlTag HtmlTag}"," * instances which may be modified before returning from the"," * {@link Autolinker#replaceFn replaceFn}. For example:"," *"," *     var html = Autolinker.link( \"Test google.com\", {"," *         replaceFn : function( match ) {"," *             var tag = match.buildTag();  // returns an {@link Autolinker.HtmlTag} instance"," *             tag.setAttr( 'rel', 'nofollow' );"," *"," *             return tag;"," *         }"," *     } );"," *"," *     // generated html:"," *     //   Test <a href=\"http://google.com\" target=\"_blank\" rel=\"nofollow\">google.com</a>"," */","Autolinker.AnchorTagBuilder = Autolinker.Util.extend( Object, {","","\t/**","\t * @cfg {Boolean} newWindow","\t * @inheritdoc Autolinker#newWindow","\t */","","\t/**","\t * @cfg {Object} truncate","\t * @inheritdoc Autolinker#truncate","\t */","","\t/**","\t * @cfg {String} className","\t * @inheritdoc Autolinker#className","\t */","","","\t/**","\t * @constructor","\t * @param {Object} [cfg] The configuration options for the AnchorTagBuilder instance, specified in an Object (map).","\t */","\tconstructor : function( cfg ) {","\t\tcfg = cfg || {};","","\t\tthis.newWindow = cfg.newWindow;","\t\tthis.truncate = cfg.truncate;","\t\tthis.className = cfg.className;","\t},","","","\t/**","\t * Generates the actual anchor (&lt;a&gt;) tag to use in place of the","\t * matched text, via its `match` object.","\t *","\t * @param {Autolinker.match.Match} match The Match instance to generate an","\t *   anchor tag from.","\t * @return {Autolinker.HtmlTag} The HtmlTag instance for the anchor tag.","\t */","\tbuild : function( match ) {","\t\treturn new Autolinker.HtmlTag( {","\t\t\ttagName   : 'a',","\t\t\tattrs     : this.createAttrs( match ),","\t\t\tinnerHtml : this.processAnchorText( match.getAnchorText() )","\t\t} );","\t},","","","\t/**","\t * Creates the Object (map) of the HTML attributes for the anchor (&lt;a&gt;)","\t *   tag being generated.","\t *","\t * @protected","\t * @param {Autolinker.match.Match} match The Match instance to generate an","\t *   anchor tag from.","\t * @return {Object} A key/value Object (map) of the anchor tag's attributes.","\t */","\tcreateAttrs : function( match ) {","\t\tvar attrs = {","\t\t\t'href' : match.getAnchorHref()  // we'll always have the `href` attribute","\t\t};","","\t\tvar cssClass = this.createCssClass( match );","\t\tif( cssClass ) {","\t\t\tattrs[ 'class' ] = cssClass;","\t\t}","\t\tif( this.newWindow ) {","\t\t\tattrs[ 'target' ] = \"_blank\";","\t\t\tattrs[ 'rel' ] = \"noopener noreferrer\";","\t\t}","","\t\tif( this.truncate ) {","\t\t\tif( this.truncate.length && this.truncate.length < match.getAnchorText().length ) {","\t\t\t\tattrs[ 'title' ] = match.getAnchorHref();","\t\t\t}","\t\t}","","\t\treturn attrs;","\t},","","","\t/**","\t * Creates the CSS class that will be used for a given anchor tag, based on","\t * the `matchType` and the {@link #className} config.","\t *","\t * Example returns:","\t *","\t * - \"\"                                      // no {@link #className}","\t * - \"myLink myLink-url\"                     // url match","\t * - \"myLink myLink-email\"                   // email match","\t * - \"myLink myLink-phone\"                   // phone match","\t * - \"myLink myLink-hashtag\"                 // hashtag match","\t * - \"myLink myLink-mention myLink-twitter\"  // mention match with Twitter service","\t *","\t * @private","\t * @param {Autolinker.match.Match} match The Match instance to generate an","\t *   anchor tag from.","\t * @return {String} The CSS class string for the link. Example return:","\t *   \"myLink myLink-url\". If no {@link #className} was configured, returns","\t *   an empty string.","\t */","\tcreateCssClass : function( match ) {","\t\tvar className = this.className;","","\t\tif( !className ) {","\t\t\treturn \"\";","","\t\t} else {","\t\t\tvar returnClasses = [ className ],","\t\t\t\tcssClassSuffixes = match.getCssClassSuffixes();","","\t\t\tfor( var i = 0, len = cssClassSuffixes.length; i < len; i++ ) {","\t\t\t\treturnClasses.push( className + '-' + cssClassSuffixes[ i ] );","\t\t\t}","\t\t\treturn returnClasses.join( ' ' );","\t\t}","\t},","","","\t/**","\t * Processes the `anchorText` by truncating the text according to the","\t * {@link #truncate} config.","\t *","\t * @private","\t * @param {String} anchorText The anchor tag's text (i.e. what will be","\t *   displayed).","\t * @return {String} The processed `anchorText`.","\t */","\tprocessAnchorText : function( anchorText ) {","\t\tanchorText = this.doTruncate( anchorText );","","\t\treturn anchorText;","\t},","","","\t/**","\t * Performs the truncation of the `anchorText` based on the {@link #truncate}","\t * option. If the `anchorText` is longer than the length specified by the","\t * {@link #truncate} option, the truncation is performed based on the","\t * `location` property. See {@link #truncate} for details.","\t *","\t * @private","\t * @param {String} anchorText The anchor tag's text (i.e. what will be","\t *   displayed).","\t * @return {String} The truncated anchor text.","\t */","\tdoTruncate : function( anchorText ) {","\t\tvar truncate = this.truncate;","\t\tif( !truncate || !truncate.length ) return anchorText;","","\t\tvar truncateLength = truncate.length,","\t\t\ttruncateLocation = truncate.location;","","\t\tif( truncateLocation === 'smart' ) {","\t\t\treturn Autolinker.truncate.TruncateSmart( anchorText, truncateLength );","","\t\t} else if( truncateLocation === 'middle' ) {","\t\t\treturn Autolinker.truncate.TruncateMiddle( anchorText, truncateLength );","","\t\t} else {","\t\t\treturn Autolinker.truncate.TruncateEnd( anchorText, truncateLength );","\t\t}","\t}","","} );","","/*global Autolinker */","/**"," * @class Autolinker.htmlParser.HtmlParser"," * @extends Object"," *"," * An HTML parser implementation which simply walks an HTML string and returns an array of"," * {@link Autolinker.htmlParser.HtmlNode HtmlNodes} that represent the basic HTML structure of the input string."," *"," * Autolinker uses this to only link URLs/emails/mentions within text nodes, effectively ignoring / \"walking"," * around\" HTML tags."," */","Autolinker.htmlParser.HtmlParser = Autolinker.Util.extend( Object, {","","\t/**","\t * @private","\t * @property {RegExp} htmlRegex","\t *","\t * The regular expression used to pull out HTML tags from a string. Handles namespaced HTML tags and","\t * attribute names, as specified by http://www.w3.org/TR/html-markup/syntax.html.","\t *","\t * Capturing groups:","\t *","\t * 1. The \"!DOCTYPE\" tag name, if a tag is a &lt;!DOCTYPE&gt; tag.","\t * 2. If it is an end tag, this group will have the '/'.","\t * 3. If it is a comment tag, this group will hold the comment text (i.e.","\t *    the text inside the `&lt;!--` and `--&gt;`.","\t * 4. The tag name for a tag without attributes (other than the &lt;!DOCTYPE&gt; tag)","\t * 5. The tag name for a tag with attributes (other than the &lt;!DOCTYPE&gt; tag)","\t */","\thtmlRegex : (function() {","\t\tvar commentTagRegex = /!--([\\s\\S]+?)--/,","\t\t    tagNameRegex = /[0-9a-zA-Z][0-9a-zA-Z:]*/,","\t\t    attrNameRegex = /[^\\s\"'>\\/=\\x00-\\x1F\\x7F]+/,   // the unicode range accounts for excluding control chars, and the delete char","\t\t    attrValueRegex = /(?:\"[^\"]*?\"|'[^']*?'|[^'\"=<>`\\s]+)/, // double quoted, single quoted, or unquoted attribute values","\t\t    nameEqualsValueRegex = attrNameRegex.source + '(?:\\\\s*=\\\\s*' + attrValueRegex.source + ')?';  // optional '=[value]'","","\t\treturn new RegExp( [","\t\t\t// for <!DOCTYPE> tag. Ex: <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">)","\t\t\t'(?:',","\t\t\t\t'<(!DOCTYPE)',  // *** Capturing Group 1 - If it's a doctype tag","","\t\t\t\t\t// Zero or more attributes following the tag name","\t\t\t\t\t'(?:',","\t\t\t\t\t\t'\\\\s+',  // one or more whitespace chars before an attribute","","\t\t\t\t\t\t// Either:","\t\t\t\t\t\t// A. attr=\"value\", or","\t\t\t\t\t\t// B. \"value\" alone (To cover example doctype tag: <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">)","\t\t\t\t\t\t'(?:', nameEqualsValueRegex, '|', attrValueRegex.source + ')',","\t\t\t\t\t')*',","\t\t\t\t'>',","\t\t\t')',","","\t\t\t'|',","","\t\t\t// All other HTML tags (i.e. tags that are not <!DOCTYPE>)","\t\t\t'(?:',","\t\t\t\t'<(/)?',  // Beginning of a tag or comment. Either '<' for a start tag, or '</' for an end tag.","\t\t\t\t          // *** Capturing Group 2: The slash or an empty string. Slash ('/') for end tag, empty string for start or self-closing tag.","","\t\t\t\t\t'(?:',","\t\t\t\t\t\tcommentTagRegex.source,  // *** Capturing Group 3 - A Comment Tag's Text","","\t\t\t\t\t\t'|',","","\t\t\t\t\t\t// Handle tag without attributes.","\t\t\t\t\t\t// Doing this separately from a tag that has attributes","\t\t\t\t\t\t// to fix a regex time complexity issue seen with the","\t\t\t\t\t\t// example in https://github.com/gregjacobs/Autolinker.js/issues/172","\t\t\t\t\t\t'(?:',","\t\t\t\t\t\t\t// *** Capturing Group 4 - The tag name for a tag without attributes","\t\t\t\t\t\t\t'(' + tagNameRegex.source + ')',","","\t\t\t\t\t\t\t'\\\\s*/?',  // any trailing spaces and optional '/' before the closing '>'","\t\t\t\t\t\t')',","","\t\t\t\t\t\t'|',","","\t\t\t\t\t\t// Handle tag with attributes","\t\t\t\t\t\t// Doing this separately from a tag with no attributes","\t\t\t\t\t\t// to fix a regex time complexity issue seen with the","\t\t\t\t\t\t// example in https://github.com/gregjacobs/Autolinker.js/issues/172","\t\t\t\t\t\t'(?:',","\t\t\t\t\t\t\t// *** Capturing Group 5 - The tag name for a tag with attributes","\t\t\t\t\t\t\t'(' + tagNameRegex.source + ')',","","\t\t\t\t\t\t\t'\\\\s+',  // must have at least one space after the tag name to prevent ReDoS issue (issue #172)","","\t\t\t\t\t\t\t// Zero or more attributes following the tag name","\t\t\t\t\t\t\t'(?:',","\t\t\t\t\t\t\t\t'(?:\\\\s+|\\\\b)',        // any number of whitespace chars before an attribute. NOTE: Using \\s* here throws Chrome into an infinite loop for some reason, so using \\s+|\\b instead","\t\t\t\t\t\t\t\tnameEqualsValueRegex,  // attr=\"value\" (with optional =\"value\" part)","\t\t\t\t\t\t\t')*',","","\t\t\t\t\t\t\t'\\\\s*/?',  // any trailing spaces and optional '/' before the closing '>'","\t\t\t\t\t\t')',","\t\t\t\t\t')',","\t\t\t\t'>',","\t\t\t')'","\t\t].join( \"\" ), 'gi' );","\t} )(),","","\t/**","\t * @private","\t * @property {RegExp} htmlCharacterEntitiesRegex","\t *","\t * The regular expression that matches common HTML character entities.","\t *","\t * Ignoring &amp; as it could be part of a query string -- handling it separately.","\t */","\thtmlCharacterEntitiesRegex: /(&nbsp;|&#160;|&lt;|&#60;|&gt;|&#62;|&quot;|&#34;|&#39;)/gi,","","","\t/**","\t * Parses an HTML string and returns a simple array of {@link Autolinker.htmlParser.HtmlNode HtmlNodes}","\t * to represent the HTML structure of the input string.","\t *","\t * @param {String} html The HTML to parse.","\t * @return {Autolinker.htmlParser.HtmlNode[]}","\t */","\tparse : function( html ) {","\t\tvar htmlRegex = this.htmlRegex,","\t\t    currentResult,","\t\t    lastIndex = 0,","\t\t    textAndEntityNodes,","\t\t    nodes = [];  // will be the result of the method","","\t\twhile( ( currentResult = htmlRegex.exec( html ) ) !== null ) {","\t\t\tvar tagText = currentResult[ 0 ],","\t\t\t    commentText = currentResult[ 3 ], // if we've matched a comment","\t\t\t    tagName = currentResult[ 1 ] || currentResult[ 4 ] || currentResult[ 5 ],  // The <!DOCTYPE> tag (ex: \"!DOCTYPE\"), or another tag (ex: \"a\" or \"img\")","\t\t\t    isClosingTag = !!currentResult[ 2 ],","\t\t\t    offset = currentResult.index,","\t\t\t    inBetweenTagsText = html.substring( lastIndex, offset );","","\t\t\t// Push TextNodes and EntityNodes for any text found between tags","\t\t\tif( inBetweenTagsText ) {","\t\t\t\ttextAndEntityNodes = this.parseTextAndEntityNodes( lastIndex, inBetweenTagsText );","\t\t\t\tnodes.push.apply( nodes, textAndEntityNodes );","\t\t\t}","","\t\t\t// Push the CommentNode or ElementNode","\t\t\tif( commentText ) {","\t\t\t\tnodes.push( this.createCommentNode( offset, tagText, commentText ) );","\t\t\t} else {","\t\t\t\tnodes.push( this.createElementNode( offset, tagText, tagName, isClosingTag ) );","\t\t\t}","","\t\t\tlastIndex = offset + tagText.length;","\t\t}","","\t\t// Process any remaining text after the last HTML element. Will process all of the text if there were no HTML elements.","\t\tif( lastIndex < html.length ) {","\t\t\tvar text = html.substring( lastIndex );","","\t\t\t// Push TextNodes and EntityNodes for any text found between tags","\t\t\tif( text ) {","\t\t\t\ttextAndEntityNodes = this.parseTextAndEntityNodes( lastIndex, text );","","\t\t\t\t// Note: the following 3 lines were previously:","\t\t\t\t//   nodes.push.apply( nodes, textAndEntityNodes );","\t\t\t\t// but this was causing a \"Maximum Call Stack Size Exceeded\"","\t\t\t\t// error on inputs with a large number of html entities.","\t\t\t\ttextAndEntityNodes.forEach( function( node ) {","\t\t\t\t\tnodes.push( node );","\t\t\t\t} );","\t\t\t}","\t\t}","","\t\treturn nodes;","\t},","","","\t/**","\t * Parses text and HTML entity nodes from a given string. The input string","\t * should not have any HTML tags (elements) within it.","\t *","\t * @private","\t * @param {Number} offset The offset of the text node match within the","\t *   original HTML string.","\t * @param {String} text The string of text to parse. This is from an HTML","\t *   text node.","\t * @return {Autolinker.htmlParser.HtmlNode[]} An array of HtmlNodes to","\t *   represent the {@link Autolinker.htmlParser.TextNode TextNodes} and","\t *   {@link Autolinker.htmlParser.EntityNode EntityNodes} found.","\t */","\tparseTextAndEntityNodes : function( offset, text ) {","\t\tvar nodes = [],","\t\t    textAndEntityTokens = Autolinker.Util.splitAndCapture( text, this.htmlCharacterEntitiesRegex );  // split at HTML entities, but include the HTML entities in the results array","","\t\t// Every even numbered token is a TextNode, and every odd numbered token is an EntityNode","\t\t// For example: an input `text` of \"Test &quot;this&quot; today\" would turn into the","\t\t//   `textAndEntityTokens`: [ 'Test ', '&quot;', 'this', '&quot;', ' today' ]","\t\tfor( var i = 0, len = textAndEntityTokens.length; i < len; i += 2 ) {","\t\t\tvar textToken = textAndEntityTokens[ i ],","\t\t\t    entityToken = textAndEntityTokens[ i + 1 ];","","\t\t\tif( textToken ) {","\t\t\t\tnodes.push( this.createTextNode( offset, textToken ) );","\t\t\t\toffset += textToken.length;","\t\t\t}","\t\t\tif( entityToken ) {","\t\t\t\tnodes.push( this.createEntityNode( offset, entityToken ) );","\t\t\t\toffset += entityToken.length;","\t\t\t}","\t\t}","\t\treturn nodes;","\t},","","","\t/**","\t * Factory method to create an {@link Autolinker.htmlParser.CommentNode CommentNode}.","\t *","\t * @private","\t * @param {Number} offset The offset of the match within the original HTML","\t *   string.","\t * @param {String} tagText The full text of the tag (comment) that was","\t *   matched, including its &lt;!-- and --&gt;.","\t * @param {String} commentText The full text of the comment that was matched.","\t */","\tcreateCommentNode : function( offset, tagText, commentText ) {","\t\treturn new Autolinker.htmlParser.CommentNode( {","\t\t\toffset : offset,","\t\t\ttext   : tagText,","\t\t\tcomment: Autolinker.Util.trim( commentText )","\t\t} );","\t},","","","\t/**","\t * Factory method to create an {@link Autolinker.htmlParser.ElementNode ElementNode}.","\t *","\t * @private","\t * @param {Number} offset The offset of the match within the original HTML","\t *   string.","\t * @param {String} tagText The full text of the tag (element) that was","\t *   matched, including its attributes.","\t * @param {String} tagName The name of the tag. Ex: An &lt;img&gt; tag would","\t *   be passed to this method as \"img\".","\t * @param {Boolean} isClosingTag `true` if it's a closing tag, false","\t *   otherwise.","\t * @return {Autolinker.htmlParser.ElementNode}","\t */","\tcreateElementNode : function( offset, tagText, tagName, isClosingTag ) {","\t\treturn new Autolinker.htmlParser.ElementNode( {","\t\t\toffset  : offset,","\t\t\ttext    : tagText,","\t\t\ttagName : tagName.toLowerCase(),","\t\t\tclosing : isClosingTag","\t\t} );","\t},","","","\t/**","\t * Factory method to create a {@link Autolinker.htmlParser.EntityNode EntityNode}.","\t *","\t * @private","\t * @param {Number} offset The offset of the match within the original HTML","\t *   string.","\t * @param {String} text The text that was matched for the HTML entity (such","\t *   as '&amp;nbsp;').","\t * @return {Autolinker.htmlParser.EntityNode}","\t */","\tcreateEntityNode : function( offset, text ) {","\t\treturn new Autolinker.htmlParser.EntityNode( { offset: offset, text: text } );","\t},","","","\t/**","\t * Factory method to create a {@link Autolinker.htmlParser.TextNode TextNode}.","\t *","\t * @private","\t * @param {Number} offset The offset of the match within the original HTML","\t *   string.","\t * @param {String} text The text that was matched.","\t * @return {Autolinker.htmlParser.TextNode}","\t */","\tcreateTextNode : function( offset, text ) {","\t\treturn new Autolinker.htmlParser.TextNode( { offset: offset, text: text } );","\t}","","} );","","/*global Autolinker */","/**"," * @abstract"," * @class Autolinker.htmlParser.HtmlNode"," *"," * Represents an HTML node found in an input string. An HTML node is one of the"," * following:"," *"," * 1. An {@link Autolinker.htmlParser.ElementNode ElementNode}, which represents"," *    HTML tags."," * 2. A {@link Autolinker.htmlParser.CommentNode CommentNode}, which represents"," *    HTML comments."," * 3. A {@link Autolinker.htmlParser.TextNode TextNode}, which represents text"," *    outside or within HTML tags."," * 4. A {@link Autolinker.htmlParser.EntityNode EntityNode}, which represents"," *    one of the known HTML entities that Autolinker looks for. This includes"," *    common ones such as &amp;quot; and &amp;nbsp;"," */","Autolinker.htmlParser.HtmlNode = Autolinker.Util.extend( Object, {","","\t/**","\t * @cfg {Number} offset (required)","\t *","\t * The offset of the HTML node in the original text that was parsed.","\t */","\toffset : undefined,","","\t/**","\t * @cfg {String} text (required)","\t *","\t * The text that was matched for the HtmlNode.","\t *","\t * - In the case of an {@link Autolinker.htmlParser.ElementNode ElementNode},","\t *   this will be the tag's text.","\t * - In the case of an {@link Autolinker.htmlParser.CommentNode CommentNode},","\t *   this will be the comment's text.","\t * - In the case of a {@link Autolinker.htmlParser.TextNode TextNode}, this","\t *   will be the text itself.","\t * - In the case of a {@link Autolinker.htmlParser.EntityNode EntityNode},","\t *   this will be the text of the HTML entity.","\t */","\ttext : undefined,","","","\t/**","\t * @constructor","\t * @param {Object} cfg The configuration properties for the Match instance,","\t * specified in an Object (map).","\t */","\tconstructor : function( cfg ) {","\t\tAutolinker.Util.assign( this, cfg );","","\t\tif( this.offset == null ) throw new Error( '`offset` cfg required' );","\t\tif( this.text == null ) throw new Error( '`text` cfg required' );","\t},","","","\t/**","\t * Returns a string name for the type of node that this class represents.","\t *","\t * @abstract","\t * @return {String}","\t */","\tgetType : Autolinker.Util.abstractMethod,","","","\t/**","\t * Retrieves the {@link #offset} of the HtmlNode. This is the offset of the","\t * HTML node in the original string that was parsed.","\t *","\t * @return {Number}","\t */","\tgetOffset : function() {","\t\treturn this.offset;","\t},","","","\t/**","\t * Retrieves the {@link #text} for the HtmlNode.","\t *","\t * @return {String}","\t */","\tgetText : function() {","\t\treturn this.text;","\t}","","} );","/*global Autolinker */","/**"," * @class Autolinker.htmlParser.CommentNode"," * @extends Autolinker.htmlParser.HtmlNode"," *"," * Represents an HTML comment node that has been parsed by the"," * {@link Autolinker.htmlParser.HtmlParser}."," *"," * See this class's superclass ({@link Autolinker.htmlParser.HtmlNode}) for more"," * details."," */","Autolinker.htmlParser.CommentNode = Autolinker.Util.extend( Autolinker.htmlParser.HtmlNode, {","","\t/**","\t * @cfg {String} comment (required)","\t *","\t * The text inside the comment tag. This text is stripped of any leading or","\t * trailing whitespace.","\t */","\tcomment : '',","","","\t/**","\t * Returns a string name for the type of node that this class represents.","\t *","\t * @return {String}","\t */","\tgetType : function() {","\t\treturn 'comment';","\t},","","","\t/**","\t * Returns the comment inside the comment tag.","\t *","\t * @return {String}","\t */","\tgetComment : function() {","\t\treturn this.comment;","\t}","","} );","/*global Autolinker */","/**"," * @class Autolinker.htmlParser.ElementNode"," * @extends Autolinker.htmlParser.HtmlNode"," *"," * Represents an HTML element node that has been parsed by the {@link Autolinker.htmlParser.HtmlParser}."," *"," * See this class's superclass ({@link Autolinker.htmlParser.HtmlNode}) for more"," * details."," */","Autolinker.htmlParser.ElementNode = Autolinker.Util.extend( Autolinker.htmlParser.HtmlNode, {","","\t/**","\t * @cfg {String} tagName (required)","\t *","\t * The name of the tag that was matched.","\t */","\ttagName : '',","","\t/**","\t * @cfg {Boolean} closing (required)","\t *","\t * `true` if the element (tag) is a closing tag, `false` if its an opening","\t * tag.","\t */","\tclosing : false,","","","\t/**","\t * Returns a string name for the type of node that this class represents.","\t *","\t * @return {String}","\t */","\tgetType : function() {","\t\treturn 'element';","\t},","","","\t/**","\t * Returns the HTML element's (tag's) name. Ex: for an &lt;img&gt; tag,","\t * returns \"img\".","\t *","\t * @return {String}","\t */","\tgetTagName : function() {","\t\treturn this.tagName;","\t},","","","\t/**","\t * Determines if the HTML element (tag) is a closing tag. Ex: &lt;div&gt;","\t * returns `false`, while &lt;/div&gt; returns `true`.","\t *","\t * @return {Boolean}","\t */","\tisClosing : function() {","\t\treturn this.closing;","\t}","","} );","/*global Autolinker */","/**"," * @class Autolinker.htmlParser.EntityNode"," * @extends Autolinker.htmlParser.HtmlNode"," *"," * Represents a known HTML entity node that has been parsed by the {@link Autolinker.htmlParser.HtmlParser}."," * Ex: '&amp;nbsp;', or '&amp#160;' (which will be retrievable from the {@link #getText}"," * method."," *"," * Note that this class will only be returned from the HtmlParser for the set of"," * checked HTML entity nodes  defined by the {@link Autolinker.htmlParser.HtmlParser#htmlCharacterEntitiesRegex}."," *"," * See this class's superclass ({@link Autolinker.htmlParser.HtmlNode}) for more"," * details."," */","Autolinker.htmlParser.EntityNode = Autolinker.Util.extend( Autolinker.htmlParser.HtmlNode, {","","\t/**","\t * Returns a string name for the type of node that this class represents.","\t *","\t * @return {String}","\t */","\tgetType : function() {","\t\treturn 'entity';","\t}","","} );","/*global Autolinker */","/**"," * @class Autolinker.htmlParser.TextNode"," * @extends Autolinker.htmlParser.HtmlNode"," *"," * Represents a text node that has been parsed by the {@link Autolinker.htmlParser.HtmlParser}."," *"," * See this class's superclass ({@link Autolinker.htmlParser.HtmlNode}) for more"," * details."," */","Autolinker.htmlParser.TextNode = Autolinker.Util.extend( Autolinker.htmlParser.HtmlNode, {","","\t/**","\t * Returns a string name for the type of node that this class represents.","\t *","\t * @return {String}","\t */","\tgetType : function() {","\t\treturn 'text';","\t}","","} );","/*global Autolinker */","/**"," * @abstract"," * @class Autolinker.match.Match"," *"," * Represents a match found in an input string which should be Autolinked. A Match object is what is provided in a"," * {@link Autolinker#replaceFn replaceFn}, and may be used to query for details about the match."," *"," * For example:"," *"," *     var input = \"...\";  // string with URLs, Email Addresses, and Mentions (Twitter, Instagram)"," *"," *     var linkedText = Autolinker.link( input, {"," *         replaceFn : function( match ) {"," *             console.log( \"href = \", match.getAnchorHref() );"," *             console.log( \"text = \", match.getAnchorText() );"," *"," *             switch( match.getType() ) {"," *                 case 'url' :"," *                     console.log( \"url: \", match.getUrl() );"," *"," *                 case 'email' :"," *                     console.log( \"email: \", match.getEmail() );"," *"," *                 case 'mention' :"," *                     console.log( \"mention: \", match.getMention() );"," *             }"," *         }"," *     } );"," *"," * See the {@link Autolinker} class for more details on using the {@link Autolinker#replaceFn replaceFn}."," */","Autolinker.match.Match = Autolinker.Util.extend( Object, {","","\t/**","\t * @cfg {Autolinker.AnchorTagBuilder} tagBuilder (required)","\t *","\t * Reference to the AnchorTagBuilder instance to use to generate an anchor","\t * tag for the Match.","\t */","","\t/**","\t * @cfg {String} matchedText (required)","\t *","\t * The original text that was matched by the {@link Autolinker.matcher.Matcher}.","\t */","","\t/**","\t * @cfg {Number} offset (required)","\t *","\t * The offset of where the match was made in the input string.","\t */","","","\t/**","\t * @constructor","\t * @param {Object} cfg The configuration properties for the Match","\t *   instance, specified in an Object (map).","\t */","\tconstructor : function( cfg ) {","\t\tif( cfg.tagBuilder == null ) throw new Error( '`tagBuilder` cfg required' );","\t\tif( cfg.matchedText == null ) throw new Error( '`matchedText` cfg required' );","\t\tif( cfg.offset == null ) throw new Error( '`offset` cfg required' );","","\t\tthis.tagBuilder = cfg.tagBuilder;","\t\tthis.matchedText = cfg.matchedText;","\t\tthis.offset = cfg.offset;","\t},","","","\t/**","\t * Returns a string name for the type of match that this class represents.","\t *","\t * @abstract","\t * @return {String}","\t */","\tgetType : Autolinker.Util.abstractMethod,","","","\t/**","\t * Returns the original text that was matched.","\t *","\t * @return {String}","\t */","\tgetMatchedText : function() {","\t\treturn this.matchedText;","\t},","","","\t/**","\t * Sets the {@link #offset} of where the match was made in the input string.","\t *","\t * A {@link Autolinker.matcher.Matcher} will be fed only HTML text nodes,","\t * and will therefore set an original offset that is relative to the HTML","\t * text node itself. However, we want this offset to be relative to the full","\t * HTML input string, and thus if using {@link Autolinker#parse} (rather","\t * than calling a {@link Autolinker.matcher.Matcher} directly), then this","\t * offset is corrected after the Matcher itself has done its job.","\t *","\t * @param {Number} offset","\t */","\tsetOffset : function( offset ) {","\t\tthis.offset = offset;","\t},","","","\t/**","\t * Returns the offset of where the match was made in the input string. This","\t * is the 0-based index of the match.","\t *","\t * @return {Number}","\t */","\tgetOffset : function() {","\t\treturn this.offset;","\t},","","","\t/**","\t * Returns the anchor href that should be generated for the match.","\t *","\t * @abstract","\t * @return {String}","\t */","\tgetAnchorHref : Autolinker.Util.abstractMethod,","","","\t/**","\t * Returns the anchor text that should be generated for the match.","\t *","\t * @abstract","\t * @return {String}","\t */","\tgetAnchorText : Autolinker.Util.abstractMethod,","","","\t/**","\t * Returns the CSS class suffix(es) for this match.","\t *","\t * A CSS class suffix is appended to the {@link Autolinker#className} in","\t * the {@link Autolinker.AnchorTagBuilder} when a match is translated into","\t * an anchor tag.","\t *","\t * For example, if {@link Autolinker#className} was configured as 'myLink',","\t * and this method returns `[ 'url' ]`, the final class name of the element","\t * will become: 'myLink myLink-url'.","\t *","\t * The match may provide multiple CSS class suffixes to be appended to the","\t * {@link Autolinker#className} in order to facilitate better styling","\t * options for different match criteria. See {@link Autolinker.match.Mention}","\t * for an example.","\t *","\t * By default, this method returns a single array with the match's","\t * {@link #getType type} name, but may be overridden by subclasses.","\t *","\t * @return {String[]}","\t */","\tgetCssClassSuffixes : function() {","\t\treturn [ this.getType() ];","\t},","","","\t/**","\t * Builds and returns an {@link Autolinker.HtmlTag} instance based on the","\t * Match.","\t *","\t * This can be used to easily generate anchor tags from matches, and either","\t * return their HTML string, or modify them before doing so.","\t *","\t * Example Usage:","\t *","\t *     var tag = match.buildTag();","\t *     tag.addClass( 'cordova-link' );","\t *     tag.setAttr( 'target', '_system' );","\t *","\t *     tag.toAnchorString();  // <a href=\"http://google.com\" class=\"cordova-link\" target=\"_system\">Google</a>","\t */","\tbuildTag : function() {","\t\treturn this.tagBuilder.build( this );","\t}","","} );","","/*global Autolinker */","/**"," * @class Autolinker.match.Email"," * @extends Autolinker.match.Match"," *"," * Represents a Email match found in an input string which should be Autolinked."," *"," * See this class's superclass ({@link Autolinker.match.Match}) for more details."," */","Autolinker.match.Email = Autolinker.Util.extend( Autolinker.match.Match, {","","\t/**","\t * @cfg {String} email (required)","\t *","\t * The email address that was matched.","\t */","","","\t/**","\t * @constructor","\t * @param {Object} cfg The configuration properties for the Match","\t *   instance, specified in an Object (map).","\t */","\tconstructor : function( cfg ) {","\t\tAutolinker.match.Match.prototype.constructor.call( this, cfg );","","\t\tif( !cfg.email ) throw new Error( '`email` cfg required' );","","\t\tthis.email = cfg.email;","\t},","","","\t/**","\t * Returns a string name for the type of match that this class represents.","\t *","\t * @return {String}","\t */","\tgetType : function() {","\t\treturn 'email';","\t},","","","\t/**","\t * Returns the email address that was matched.","\t *","\t * @return {String}","\t */","\tgetEmail : function() {","\t\treturn this.email;","\t},","","","\t/**","\t * Returns the anchor href that should be generated for the match.","\t *","\t * @return {String}","\t */","\tgetAnchorHref : function() {","\t\treturn 'mailto:' + this.email;","\t},","","","\t/**","\t * Returns the anchor text that should be generated for the match.","\t *","\t * @return {String}","\t */","\tgetAnchorText : function() {","\t\treturn this.email;","\t}","","} );","/*global Autolinker */","/**"," * @class Autolinker.match.Hashtag"," * @extends Autolinker.match.Match"," *"," * Represents a Hashtag match found in an input string which should be"," * Autolinked."," *"," * See this class's superclass ({@link Autolinker.match.Match}) for more"," * details."," */","Autolinker.match.Hashtag = Autolinker.Util.extend( Autolinker.match.Match, {","","\t/**","\t * @cfg {String} serviceName","\t *","\t * The service to point hashtag matches to. See {@link Autolinker#hashtag}","\t * for available values.","\t */","","\t/**","\t * @cfg {String} hashtag (required)","\t *","\t * The Hashtag that was matched, without the '#'.","\t */","","","\t/**","\t * @constructor","\t * @param {Object} cfg The configuration properties for the Match","\t *   instance, specified in an Object (map).","\t */","\tconstructor : function( cfg ) {","\t\tAutolinker.match.Match.prototype.constructor.call( this, cfg );","","\t\t// TODO: if( !serviceName ) throw new Error( '`serviceName` cfg required' );","\t\tif( !cfg.hashtag ) throw new Error( '`hashtag` cfg required' );","","\t\tthis.serviceName = cfg.serviceName;","\t\tthis.hashtag = cfg.hashtag;","\t},","","","\t/**","\t * Returns the type of match that this class represents.","\t *","\t * @return {String}","\t */","\tgetType : function() {","\t\treturn 'hashtag';","\t},","","","\t/**","\t * Returns the configured {@link #serviceName} to point the Hashtag to.","\t * Ex: 'facebook', 'twitter'.","\t *","\t * @return {String}","\t */","\tgetServiceName : function() {","\t\treturn this.serviceName;","\t},","","","\t/**","\t * Returns the matched hashtag, without the '#' character.","\t *","\t * @return {String}","\t */","\tgetHashtag : function() {","\t\treturn this.hashtag;","\t},","","","\t/**","\t * Returns the anchor href that should be generated for the match.","\t *","\t * @return {String}","\t */","\tgetAnchorHref : function() {","\t\tvar serviceName = this.serviceName,","\t\t    hashtag = this.hashtag;","","\t\tswitch( serviceName ) {","\t\t\tcase 'twitter' :","\t\t\t\treturn 'https://twitter.com/hashtag/' + hashtag;","\t\t\tcase 'facebook' :","\t\t\t\treturn 'https://www.facebook.com/hashtag/' + hashtag;","\t\t\tcase 'instagram' :","\t\t\t\treturn 'https://instagram.com/explore/tags/' + hashtag;","","\t\t\tdefault :  // Shouldn't happen because Autolinker's constructor should block any invalid values, but just in case.","\t\t\t\tthrow new Error( 'Unknown service name to point hashtag to: ', serviceName );","\t\t}","\t},","","","\t/**","\t * Returns the anchor text that should be generated for the match.","\t *","\t * @return {String}","\t */","\tgetAnchorText : function() {","\t\treturn '#' + this.hashtag;","\t}","","} );","","/*global Autolinker */","/**"," * @class Autolinker.match.Phone"," * @extends Autolinker.match.Match"," *"," * Represents a Phone number match found in an input string which should be"," * Autolinked."," *"," * See this class's superclass ({@link Autolinker.match.Match}) for more"," * details."," */","Autolinker.match.Phone = Autolinker.Util.extend( Autolinker.match.Match, {","","\t/**","\t * @protected","\t * @property {String} number (required)","\t *","\t * The phone number that was matched, without any delimiter characters.","\t *","\t * Note: This is a string to allow for prefixed 0's.","\t */","","\t/**","\t * @protected","\t * @property  {Boolean} plusSign (required)","\t *","\t * `true` if the matched phone number started with a '+' sign. We'll include","\t * it in the `tel:` URL if so, as this is needed for international numbers.","\t *","\t * Ex: '+1 (123) 456 7879'","\t */","","","\t/**","\t * @constructor","\t * @param {Object} cfg The configuration properties for the Match","\t *   instance, specified in an Object (map).","\t */","\tconstructor : function( cfg ) {","\t\tAutolinker.match.Match.prototype.constructor.call( this, cfg );","","\t\tif( !cfg.number ) throw new Error( '`number` cfg required' );","\t\tif( cfg.plusSign == null ) throw new Error( '`plusSign` cfg required' );","","\t\tthis.number = cfg.number;","\t\tthis.plusSign = cfg.plusSign;","\t},","","","\t/**","\t * Returns a string name for the type of match that this class represents.","\t *","\t * @return {String}","\t */","\tgetType : function() {","\t\treturn 'phone';","\t},","","","\t/**","\t * Returns the phone number that was matched as a string, without any","\t * delimiter characters.","\t *","\t * Note: This is a string to allow for prefixed 0's.","\t *","\t * @return {String}","\t */","\tgetNumber: function() {","\t\treturn this.number;","\t},","","","\t/**","\t * Returns the anchor href that should be generated for the match.","\t *","\t * @return {String}","\t */","\tgetAnchorHref : function() {","\t\treturn 'tel:' + ( this.plusSign ? '+' : '' ) + this.number;","\t},","","","\t/**","\t * Returns the anchor text that should be generated for the match.","\t *","\t * @return {String}","\t */","\tgetAnchorText : function() {","\t\treturn this.matchedText;","\t}","","} );","","/*global Autolinker */","/**"," * @class Autolinker.match.Mention"," * @extends Autolinker.match.Match"," *"," * Represents a Mention match found in an input string which should be Autolinked."," *"," * See this class's superclass ({@link Autolinker.match.Match}) for more details."," */","Autolinker.match.Mention = Autolinker.Util.extend( Autolinker.match.Match, {","","\t/**","\t * @cfg {String} serviceName","\t *","\t * The service to point mention matches to. See {@link Autolinker#mention}","\t * for available values.","\t */","","\t/**","\t * @cfg {String} mention (required)","\t *","\t * The Mention that was matched, without the '@' character.","\t */","","","\t/**","\t * @constructor","\t * @param {Object} cfg The configuration properties for the Match","\t *   instance, specified in an Object (map).","\t */","\tconstructor : function( cfg ) {","\t\tAutolinker.match.Match.prototype.constructor.call( this, cfg );","","\t\tif( !cfg.serviceName ) throw new Error( '`serviceName` cfg required' );","\t\tif( !cfg.mention ) throw new Error( '`mention` cfg required' );","","\t\tthis.mention = cfg.mention;","\t\tthis.serviceName = cfg.serviceName;","\t},","","","\t/**","\t * Returns the type of match that this class represents.","\t *","\t * @return {String}","\t */","\tgetType : function() {","\t\treturn 'mention';","\t},","","","\t/**","\t * Returns the mention, without the '@' character.","\t *","\t * @return {String}","\t */","\tgetMention : function() {","\t\treturn this.mention;","\t},","","","\t/**","\t * Returns the configured {@link #serviceName} to point the mention to.","\t * Ex: 'instagram', 'twitter'.","\t *","\t * @return {String}","\t */","\tgetServiceName : function() {","\t\treturn this.serviceName;","\t},","","","\t/**","\t * Returns the anchor href that should be generated for the match.","\t *","\t * @return {String}","\t */","\tgetAnchorHref : function() {","\t\tswitch( this.serviceName ) {","\t\t\tcase 'twitter' :","\t\t\t\treturn 'https://twitter.com/' + this.mention;","\t\t\tcase 'instagram' :","\t\t\t\treturn 'https://instagram.com/' + this.mention;","","\t\t\tdefault :  // Shouldn't happen because Autolinker's constructor should block any invalid values, but just in case.","\t\t\t\tthrow new Error( 'Unknown service name to point mention to: ', this.serviceName );","\t\t}","\t},","","","\t/**","\t * Returns the anchor text that should be generated for the match.","\t *","\t * @return {String}","\t */","\tgetAnchorText : function() {","\t\treturn '@' + this.mention;","\t},","","","\t/**","\t * Returns the CSS class suffixes that should be used on a tag built with","\t * the match. See {@link Autolinker.match.Match#getCssClassSuffixes} for","\t * details.","\t *","\t * @return {String[]}","\t */","\tgetCssClassSuffixes : function() {","\t\tvar cssClassSuffixes = Autolinker.match.Match.prototype.getCssClassSuffixes.call( this ),","\t\t    serviceName = this.getServiceName();","","\t\tif( serviceName ) {","\t\t\tcssClassSuffixes.push( serviceName );","\t\t}","\t\treturn cssClassSuffixes;","\t}","","} );","","/*global Autolinker */","/**"," * @class Autolinker.match.Url"," * @extends Autolinker.match.Match"," *"," * Represents a Url match found in an input string which should be Autolinked."," *"," * See this class's superclass ({@link Autolinker.match.Match}) for more details."," */","Autolinker.match.Url = Autolinker.Util.extend( Autolinker.match.Match, {","","\t/**","\t * @cfg {String} url (required)","\t *","\t * The url that was matched.","\t */","","\t/**","\t * @cfg {\"scheme\"/\"www\"/\"tld\"} urlMatchType (required)","\t *","\t * The type of URL match that this class represents. This helps to determine","\t * if the match was made in the original text with a prefixed scheme (ex:","\t * 'http://www.google.com'), a prefixed 'www' (ex: 'www.google.com'), or","\t * was matched by a known top-level domain (ex: 'google.com').","\t */","","\t/**","\t * @cfg {Boolean} protocolUrlMatch (required)","\t *","\t * `true` if the URL is a match which already has a protocol (i.e.","\t * 'http://'), `false` if the match was from a 'www' or known TLD match.","\t */","","\t/**","\t * @cfg {Boolean} protocolRelativeMatch (required)","\t *","\t * `true` if the URL is a protocol-relative match. A protocol-relative match","\t * is a URL that starts with '//', and will be either http:// or https://","\t * based on the protocol that the site is loaded under.","\t */","","\t/**","\t * @cfg {Object} stripPrefix (required)","\t *","\t * The Object form of {@link Autolinker#cfg-stripPrefix}.","\t */","","\t/**","\t * @cfg {Boolean} stripTrailingSlash (required)","\t * @inheritdoc Autolinker#cfg-stripTrailingSlash","\t */","","","\t/**","\t * @constructor","\t * @param {Object} cfg The configuration properties for the Match","\t *   instance, specified in an Object (map).","\t */","\tconstructor : function( cfg ) {","\t\tAutolinker.match.Match.prototype.constructor.call( this, cfg );","","\t\tif( cfg.urlMatchType !== 'scheme' && cfg.urlMatchType !== 'www' && cfg.urlMatchType !== 'tld' ) throw new Error( '`urlMatchType` cfg must be one of: \"scheme\", \"www\", or \"tld\"' );","\t\tif( !cfg.url ) throw new Error( '`url` cfg required' );","\t\tif( cfg.protocolUrlMatch == null ) throw new Error( '`protocolUrlMatch` cfg required' );","\t\tif( cfg.protocolRelativeMatch == null ) throw new Error( '`protocolRelativeMatch` cfg required' );","\t\tif( cfg.stripPrefix == null ) throw new Error( '`stripPrefix` cfg required' );","\t\tif( cfg.stripTrailingSlash == null ) throw new Error( '`stripTrailingSlash` cfg required' );","","\t\tthis.urlMatchType = cfg.urlMatchType;","\t\tthis.url = cfg.url;","\t\tthis.protocolUrlMatch = cfg.protocolUrlMatch;","\t\tthis.protocolRelativeMatch = cfg.protocolRelativeMatch;","\t\tthis.stripPrefix = cfg.stripPrefix;","\t\tthis.stripTrailingSlash = cfg.stripTrailingSlash;","\t},","","","\t/**","\t * @private","\t * @property {RegExp} schemePrefixRegex","\t *","\t * A regular expression used to remove the 'http://' or 'https://' from","\t * URLs.","\t */","\tschemePrefixRegex: /^(https?:\\/\\/)?/i,","","\t/**","\t * @private","\t * @property {RegExp} wwwPrefixRegex","\t *","\t * A regular expression used to remove the 'www.' from URLs.","\t */","\twwwPrefixRegex: /^(https?:\\/\\/)?(www\\.)?/i,","","\t/**","\t * @private","\t * @property {RegExp} protocolRelativeRegex","\t *","\t * The regular expression used to remove the protocol-relative '//' from the {@link #url} string, for purposes","\t * of {@link #getAnchorText}. A protocol-relative URL is, for example, \"//yahoo.com\"","\t */","\tprotocolRelativeRegex : /^\\/\\//,","","\t/**","\t * @private","\t * @property {Boolean} protocolPrepended","\t *","\t * Will be set to `true` if the 'http://' protocol has been prepended to the {@link #url} (because the","\t * {@link #url} did not have a protocol)","\t */","\tprotocolPrepended : false,","","","\t/**","\t * Returns a string name for the type of match that this class represents.","\t *","\t * @return {String}","\t */","\tgetType : function() {","\t\treturn 'url';","\t},","","","\t/**","\t * Returns a string name for the type of URL match that this class","\t * represents.","\t *","\t * This helps to determine if the match was made in the original text with a","\t * prefixed scheme (ex: 'http://www.google.com'), a prefixed 'www' (ex:","\t * 'www.google.com'), or was matched by a known top-level domain (ex:","\t * 'google.com').","\t *","\t * @return {\"scheme\"/\"www\"/\"tld\"}","\t */","\tgetUrlMatchType : function() {","\t\treturn this.urlMatchType;","\t},","","","\t/**","\t * Returns the url that was matched, assuming the protocol to be 'http://' if the original","\t * match was missing a protocol.","\t *","\t * @return {String}","\t */","\tgetUrl : function() {","\t\tvar url = this.url;","","\t\t// if the url string doesn't begin with a protocol, assume 'http://'","\t\tif( !this.protocolRelativeMatch && !this.protocolUrlMatch && !this.protocolPrepended ) {","\t\t\turl = this.url = 'http://' + url;","","\t\t\tthis.protocolPrepended = true;","\t\t}","","\t\treturn url;","\t},","","","\t/**","\t * Returns the anchor href that should be generated for the match.","\t *","\t * @return {String}","\t */","\tgetAnchorHref : function() {","\t\tvar url = this.getUrl();","","\t\treturn url.replace( /&amp;/g, '&' );  // any &amp;'s in the URL should be converted back to '&' if they were displayed as &amp; in the source html","\t},","","","\t/**","\t * Returns the anchor text that should be generated for the match.","\t *","\t * @return {String}","\t */","\tgetAnchorText : function() {","\t\tvar anchorText = this.getMatchedText();","","\t\tif( this.protocolRelativeMatch ) {","\t\t\t// Strip off any protocol-relative '//' from the anchor text","\t\t\tanchorText = this.stripProtocolRelativePrefix( anchorText );","\t\t}","\t\tif( this.stripPrefix.scheme ) {","\t\t\tanchorText = this.stripSchemePrefix( anchorText );","\t\t}","\t\tif( this.stripPrefix.www ) {","\t\t\tanchorText = this.stripWwwPrefix( anchorText );","\t\t}","\t\tif( this.stripTrailingSlash ) {","\t\t\tanchorText = this.removeTrailingSlash( anchorText );  // remove trailing slash, if there is one","\t\t}","","\t\treturn anchorText;","\t},","","","\t// ---------------------------------------","","\t// Utility Functionality","","\t/**","\t * Strips the scheme prefix (such as \"http://\" or \"https://\") from the given","\t * `url`.","\t *","\t * @private","\t * @param {String} url The text of the anchor that is being generated, for","\t *   which to strip off the url scheme.","\t * @return {String} The `url`, with the scheme stripped.","\t */","\tstripSchemePrefix : function( url ) {","\t\treturn url.replace( this.schemePrefixRegex, '' );","\t},","","","\t/**","\t * Strips the 'www' prefix from the given `url`.","\t *","\t * @private","\t * @param {String} url The text of the anchor that is being generated, for","\t *   which to strip off the 'www' if it exists.","\t * @return {String} The `url`, with the 'www' stripped.","\t */","\tstripWwwPrefix : function( url ) {","\t\treturn url.replace( this.wwwPrefixRegex, '$1' );  // leave any scheme ($1), it one exists","\t},","","","\t/**","\t * Strips any protocol-relative '//' from the anchor text.","\t *","\t * @private","\t * @param {String} text The text of the anchor that is being generated, for which to strip off the","\t *   protocol-relative prefix (such as stripping off \"//\")","\t * @return {String} The `anchorText`, with the protocol-relative prefix stripped.","\t */","\tstripProtocolRelativePrefix : function( text ) {","\t\treturn text.replace( this.protocolRelativeRegex, '' );","\t},","","","\t/**","\t * Removes any trailing slash from the given `anchorText`, in preparation for the text to be displayed.","\t *","\t * @private","\t * @param {String} anchorText The text of the anchor that is being generated, for which to remove any trailing","\t *   slash ('/') that may exist.","\t * @return {String} The `anchorText`, with the trailing slash removed.","\t */","\tremoveTrailingSlash : function( anchorText ) {","\t\tif( anchorText.charAt( anchorText.length - 1 ) === '/' ) {","\t\t\tanchorText = anchorText.slice( 0, -1 );","\t\t}","\t\treturn anchorText;","\t}","","} );","// NOTE: THIS IS A GENERATED FILE","// To update with the latest TLD list, run `gulp update-tld-list`","","/*global Autolinker */","Autolinker.tldRegex = /(?:xn--vermgensberatung-pwb|xn--vermgensberater-ctb|xn--clchc0ea0b2g2a9gcd|xn--w4r85el8fhu5dnra|northwesternmutual|travelersinsurance|vermögensberatung|xn--3oq18vl8pn36a|xn--5su34j936bgsg|xn--bck1b9a5dre4c|xn--mgbai9azgqp6j|xn--mgberp4a5d4ar|xn--xkc2dl3a5ee0h|vermögensberater|xn--fzys8d69uvgm|xn--mgba7c0bbn0a|xn--xkc2al3hye2a|americanexpress|kerryproperties|sandvikcoromant|xn--i1b6b1a6a2e|xn--kcrx77d1x4a|xn--lgbbat1ad8j|xn--mgba3a4f16a|xn--mgbc0a9azcg|xn--nqv7fs00ema|afamilycompany|americanfamily|bananarepublic|cancerresearch|cookingchannel|kerrylogistics|weatherchannel|xn--54b7fta0cc|xn--6qq986b3xl|xn--80aqecdr1a|xn--b4w605ferd|xn--fiq228c5hs|xn--jlq61u9w7b|xn--mgba3a3ejt|xn--mgbaam7a8h|xn--mgbayh7gpa|xn--mgbb9fbpob|xn--mgbbh1a71e|xn--mgbca7dzdo|xn--mgbi4ecexp|xn--mgbx4cd0ab|international|lifeinsurance|orientexpress|spreadbetting|travelchannel|wolterskluwer|xn--eckvdtc9d|xn--fpcrj9c3d|xn--fzc2c9e2c|xn--tiq49xqyj|xn--yfro4i67o|xn--ygbi2ammx|construction|lplfinancial|pamperedchef|scholarships|versicherung|xn--3e0b707e|xn--80adxhks|xn--80asehdb|xn--8y0a063a|xn--gckr3f0f|xn--mgb9awbf|xn--mgbab2bd|xn--mgbpl2fh|xn--mgbt3dhd|xn--mk1bu44c|xn--ngbc5azd|xn--ngbe9e0a|xn--ogbpf8fl|xn--qcka1pmc|accountants|barclaycard|blackfriday|blockbuster|bridgestone|calvinklein|contractors|creditunion|engineering|enterprises|foodnetwork|investments|kerryhotels|lamborghini|motorcycles|olayangroup|photography|playstation|productions|progressive|redumbrella|rightathome|williamhill|xn--11b4c3d|xn--1ck2e1b|xn--1qqw23a|xn--3bst00m|xn--3ds443g|xn--42c2d9a|xn--45brj9c|xn--55qw42g|xn--6frz82g|xn--80ao21a|xn--9krt00a|xn--cck2b3b|xn--czr694b|xn--d1acj3b|xn--efvy88h|xn--estv75g|xn--fct429k|xn--fjq720a|xn--flw351e|xn--g2xx48c|xn--gecrj9c|xn--gk3at1e|xn--h2brj9c|xn--hxt814e|xn--imr513n|xn--j6w193g|xn--jvr189m|xn--kprw13d|xn--kpry57d|xn--kpu716f|xn--mgbtx2b|xn--mix891f|xn--nyqy26a|xn--pbt977c|xn--pgbs0dh|xn--q9jyb4c|xn--rhqv96g|xn--rovu88b|xn--s9brj9c|xn--ses554g|xn--t60b56a|xn--vuq861b|xn--w4rs40l|xn--xhq521b|xn--zfr164b|சிங்கப்பூர்|accountant|apartments|associates|basketball|bnpparibas|boehringer|capitalone|consulting|creditcard|cuisinella|eurovision|extraspace|foundation|healthcare|immobilien|industries|management|mitsubishi|nationwide|newholland|nextdirect|onyourside|properties|protection|prudential|realestate|republican|restaurant|schaeffler|swiftcover|tatamotors|technology|telefonica|university|vistaprint|vlaanderen|volkswagen|xn--30rr7y|xn--3pxu8k|xn--45q11c|xn--4gbrim|xn--55qx5d|xn--5tzm5g|xn--80aswg|xn--90a3ac|xn--9dbq2a|xn--9et52u|xn--c2br7g|xn--cg4bki|xn--czrs0t|xn--czru2d|xn--fiq64b|xn--fiqs8s|xn--fiqz9s|xn--io0a7i|xn--kput3i|xn--mxtq1m|xn--o3cw4h|xn--pssy2u|xn--unup4y|xn--wgbh1c|xn--wgbl6a|xn--y9a3aq|accenture|alfaromeo|allfinanz|amsterdam|analytics|aquarelle|barcelona|bloomberg|christmas|community|directory|education|equipment|fairwinds|financial|firestone|fresenius|frontdoor|fujixerox|furniture|goldpoint|goodhands|hisamitsu|homedepot|homegoods|homesense|honeywell|institute|insurance|kuokgroup|ladbrokes|lancaster|landrover|lifestyle|marketing|marshalls|mcdonalds|melbourne|microsoft|montblanc|panasonic|passagens|pramerica|richardli|scjohnson|shangrila|solutions|statebank|statefarm|stockholm|travelers|vacations|xn--90ais|xn--c1avg|xn--d1alf|xn--e1a4c|xn--fhbei|xn--j1aef|xn--j1amh|xn--l1acc|xn--nqv7f|xn--p1acf|xn--tckwe|xn--vhquv|yodobashi|abudhabi|airforce|allstate|attorney|barclays|barefoot|bargains|baseball|boutique|bradesco|broadway|brussels|budapest|builders|business|capetown|catering|catholic|chrysler|cipriani|cityeats|cleaning|clinique|clothing|commbank|computer|delivery|deloitte|democrat|diamonds|discount|discover|download|engineer|ericsson|esurance|everbank|exchange|feedback|fidelity|firmdale|football|frontier|goodyear|grainger|graphics|guardian|hdfcbank|helsinki|holdings|hospital|infiniti|ipiranga|istanbul|jpmorgan|lighting|lundbeck|marriott|maserati|mckinsey|memorial|mortgage|movistar|observer|partners|pharmacy|pictures|plumbing|property|redstone|reliance|saarland|samsclub|security|services|shopping|showtime|softbank|software|stcgroup|supplies|symantec|telecity|training|uconnect|vanguard|ventures|verisign|woodside|xn--90ae|xn--node|xn--p1ai|xn--qxam|yokohama|السعودية|abogado|academy|agakhan|alibaba|android|athleta|auction|audible|auspost|avianca|banamex|bauhaus|bentley|bestbuy|booking|brother|bugatti|capital|caravan|careers|cartier|channel|chintai|citadel|clubmed|college|cologne|comcast|company|compare|contact|cooking|corsica|country|coupons|courses|cricket|cruises|dentist|digital|domains|exposed|express|farmers|fashion|ferrari|ferrero|finance|fishing|fitness|flights|florist|flowers|forsale|frogans|fujitsu|gallery|genting|godaddy|guitars|hamburg|hangout|hitachi|holiday|hosting|hoteles|hotmail|hyundai|iselect|ismaili|jewelry|juniper|kitchen|komatsu|lacaixa|lancome|lanxess|lasalle|latrobe|leclerc|liaison|limited|lincoln|markets|metlife|monster|netbank|netflix|network|neustar|okinawa|oldnavy|organic|origins|panerai|philips|pioneer|politie|realtor|recipes|rentals|reviews|rexroth|samsung|sandvik|schmidt|schwarz|science|shiksha|shriram|singles|spiegel|staples|starhub|statoil|storage|support|surgery|systems|temasek|theater|theatre|tickets|tiffany|toshiba|trading|walmart|wanggou|watches|weather|website|wedding|whoswho|windows|winners|xfinity|yamaxun|youtube|zuerich|католик|الجزائر|العليان|پاکستان|كاثوليك|موبايلي|இந்தியா|abarth|abbott|abbvie|active|africa|agency|airbus|airtel|alipay|alsace|alstom|anquan|aramco|author|bayern|beauty|berlin|bharti|blanco|bostik|boston|broker|camera|career|caseih|casino|center|chanel|chrome|church|circle|claims|clinic|coffee|comsec|condos|coupon|credit|cruise|dating|datsun|dealer|degree|dental|design|direct|doctor|dunlop|dupont|durban|emerck|energy|estate|events|expert|family|flickr|futbol|gallup|garden|george|giving|global|google|gratis|health|hermes|hiphop|hockey|hughes|imamat|insure|intuit|jaguar|joburg|juegos|kaufen|kinder|kindle|kosher|lancia|latino|lawyer|lefrak|living|locker|london|luxury|madrid|maison|makeup|market|mattel|mobile|mobily|monash|mormon|moscow|museum|mutual|nagoya|natura|nissan|nissay|norton|nowruz|office|olayan|online|oracle|orange|otsuka|pfizer|photos|physio|piaget|pictet|quebec|racing|realty|reisen|repair|report|review|rocher|rogers|ryukyu|safety|sakura|sanofi|school|schule|secure|select|shouji|soccer|social|stream|studio|supply|suzuki|swatch|sydney|taipei|taobao|target|tattoo|tennis|tienda|tjmaxx|tkmaxx|toyota|travel|unicom|viajes|viking|villas|virgin|vision|voting|voyage|vuelos|walter|warman|webcam|xihuan|xperia|yachts|yandex|zappos|москва|онлайн|ابوظبي|ارامكو|الاردن|المغرب|امارات|فلسطين|مليسيا|இலங்கை|ファッション|actor|adult|aetna|amfam|amica|apple|archi|audio|autos|azure|baidu|beats|bible|bingo|black|boats|boots|bosch|build|canon|cards|chase|cheap|chloe|cisco|citic|click|cloud|coach|codes|crown|cymru|dabur|dance|deals|delta|dodge|drive|dubai|earth|edeka|email|epost|epson|faith|fedex|final|forex|forum|gallo|games|gifts|gives|glade|glass|globo|gmail|green|gripe|group|gucci|guide|homes|honda|horse|house|hyatt|ikano|intel|irish|iveco|jetzt|koeln|kyoto|lamer|lease|legal|lexus|lilly|linde|lipsy|lixil|loans|locus|lotte|lotto|lupin|macys|mango|media|miami|money|mopar|movie|nadex|nexus|nikon|ninja|nokia|nowtv|omega|osaka|paris|parts|party|phone|photo|pizza|place|poker|praxi|press|prime|promo|quest|radio|rehab|reise|ricoh|rocks|rodeo|salon|sener|seven|sharp|shell|shoes|skype|sling|smart|smile|solar|space|stada|store|study|style|sucks|swiss|tatar|tires|tirol|tmall|today|tokyo|tools|toray|total|tours|trade|trust|tunes|tushu|ubank|vegas|video|vista|vodka|volvo|wales|watch|weber|weibo|works|world|xerox|yahoo|zippo|ایران|بازار|بھارت|سودان|سورية|همراه|संगठन|বাংলা|భారత్|嘉里大酒店|aarp|able|adac|aero|aigo|akdn|ally|amex|army|arpa|arte|asda|asia|audi|auto|baby|band|bank|bbva|beer|best|bike|bing|blog|blue|bofa|bond|book|buzz|cafe|call|camp|care|cars|casa|case|cash|cbre|cern|chat|citi|city|club|cool|coop|cyou|data|date|dclk|deal|dell|desi|diet|dish|docs|doha|duck|duns|dvag|erni|fage|fail|fans|farm|fast|fiat|fido|film|fire|fish|flir|food|ford|free|fund|game|gbiz|gent|ggee|gift|gmbh|gold|golf|goog|guge|guru|hair|haus|hdfc|help|here|hgtv|host|hsbc|icbc|ieee|imdb|immo|info|itau|java|jeep|jobs|jprs|kddi|kiwi|kpmg|kred|land|lego|lgbt|lidl|life|like|limo|link|live|loan|loft|love|ltda|luxe|maif|meet|meme|menu|mini|mint|mobi|moda|moto|mtpc|name|navy|news|next|nico|nike|ollo|open|page|pars|pccw|pics|ping|pink|play|plus|pohl|porn|post|prod|prof|qpon|raid|read|reit|rent|rest|rich|rmit|room|rsvp|ruhr|safe|sale|sapo|sarl|save|saxo|scor|scot|seat|seek|sexy|shaw|shia|shop|show|silk|sina|site|skin|sncf|sohu|song|sony|spot|star|surf|talk|taxi|team|tech|teva|tiaa|tips|town|toys|tube|vana|visa|viva|vivo|vote|voto|wang|weir|wien|wiki|wine|work|xbox|yoga|zara|zero|zone|дети|сайт|بيتك|تونس|شبكة|عراق|عمان|موقع|भारत|ভারত|ਭਾਰਤ|ભારત|ලංකා|グーグル|クラウド|ポイント|大众汽车|组织机构|電訊盈科|香格里拉|aaa|abb|abc|aco|ads|aeg|afl|aig|anz|aol|app|art|aws|axa|bar|bbc|bbt|bcg|bcn|bet|bid|bio|biz|bms|bmw|bnl|bom|boo|bot|box|buy|bzh|cab|cal|cam|car|cat|cba|cbn|cbs|ceb|ceo|cfa|cfd|com|crs|csc|dad|day|dds|dev|dhl|diy|dnp|dog|dot|dtv|dvr|eat|eco|edu|esq|eus|fan|fit|fly|foo|fox|frl|ftr|fun|fyi|gal|gap|gdn|gea|gle|gmo|gmx|goo|gop|got|gov|hbo|hiv|hkt|hot|how|htc|ibm|ice|icu|ifm|ing|ink|int|ist|itv|iwc|jcb|jcp|jio|jlc|jll|jmp|jnj|jot|joy|kfh|kia|kim|kpn|krd|lat|law|lds|lol|lpl|ltd|man|mba|mcd|med|men|meo|mil|mit|mlb|mls|mma|moe|moi|mom|mov|msd|mtn|mtr|nab|nba|nec|net|new|nfl|ngo|nhk|now|nra|nrw|ntt|nyc|obi|off|one|ong|onl|ooo|org|ott|ovh|pay|pet|pid|pin|pnc|pro|pru|pub|pwc|qvc|red|ren|ril|rio|rip|run|rwe|sap|sas|sbi|sbs|sca|scb|ses|sew|sex|sfr|ski|sky|soy|srl|srt|stc|tab|tax|tci|tdk|tel|thd|tjx|top|trv|tui|tvs|ubs|uno|uol|ups|vet|vig|vin|vip|wed|win|wme|wow|wtc|wtf|xin|xxx|xyz|you|yun|zip|бел|ком|қаз|мкд|мон|орг|рус|срб|укр|հայ|קום|قطر|كوم|مصر|कॉम|नेट|คอม|ไทย|ストア|セール|みんな|中文网|天主教|我爱你|新加坡|淡马锡|诺基亚|飞利浦|ac|ad|ae|af|ag|ai|al|am|ao|aq|ar|as|at|au|aw|ax|az|ba|bb|bd|be|bf|bg|bh|bi|bj|bm|bn|bo|br|bs|bt|bv|bw|by|bz|ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cu|cv|cw|cx|cy|cz|de|dj|dk|dm|do|dz|ec|ee|eg|er|es|et|eu|fi|fj|fk|fm|fo|fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|in|io|iq|ir|is|it|je|jm|jo|jp|ke|kg|kh|ki|km|kn|kp|kr|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|me|mg|mh|mk|ml|mm|mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz|na|nc|ne|nf|ng|ni|nl|no|np|nr|nu|nz|om|pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|py|qa|re|ro|rs|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|sk|sl|sm|sn|so|sr|st|su|sv|sx|sy|sz|tc|td|tf|tg|th|tj|tk|tl|tm|tn|to|tr|tt|tv|tw|tz|ua|ug|uk|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|ye|yt|za|zm|zw|ελ|бг|ею|рф|გე|닷넷|닷컴|삼성|한국|コム|世界|中信|中国|中國|企业|佛山|信息|健康|八卦|公司|公益|台湾|台灣|商城|商店|商标|嘉里|在线|大拿|娱乐|家電|工行|广东|微博|慈善|手机|手表|政务|政府|新闻|时尚|書籍|机构|游戏|澳門|点看|珠宝|移动|网址|网店|网站|网络|联通|谷歌|购物|通販|集团|食品|餐厅|香港)/;","","/*global Autolinker */","/**"," * @abstract"," * @class Autolinker.matcher.Matcher"," *"," * An abstract class and interface for individual matchers to find matches in"," * an input string with linkified versions of them."," *"," * Note that Matchers do not take HTML into account - they must be fed the text"," * nodes of any HTML string, which is handled by {@link Autolinker#parse}."," */","Autolinker.matcher.Matcher = Autolinker.Util.extend( Object, {","","\t/**","\t * @cfg {Autolinker.AnchorTagBuilder} tagBuilder (required)","\t *","\t * Reference to the AnchorTagBuilder instance to use to generate HTML tags","\t * for {@link Autolinker.match.Match Matches}.","\t */","","","\t/**","\t * @constructor","\t * @param {Object} cfg The configuration properties for the Matcher","\t *   instance, specified in an Object (map).","\t */","\tconstructor : function( cfg ) {","\t\tif( !cfg.tagBuilder ) throw new Error( '`tagBuilder` cfg required' );","","\t\tthis.tagBuilder = cfg.tagBuilder;","\t},","","","\t/**","\t * Parses the input `text` and returns the array of {@link Autolinker.match.Match Matches}","\t * for the matcher.","\t *","\t * @abstract","\t * @param {String} text The text to scan and replace matches in.","\t * @return {Autolinker.match.Match[]}","\t */","\tparseMatches : Autolinker.Util.abstractMethod","","} );","/*global Autolinker */","/**"," * @class Autolinker.matcher.Email"," * @extends Autolinker.matcher.Matcher"," *"," * Matcher to find email matches in an input string."," *"," * See this class's superclass ({@link Autolinker.matcher.Matcher}) for more details."," */","Autolinker.matcher.Email = Autolinker.Util.extend( Autolinker.matcher.Matcher, {","","\t/**","\t * The regular expression to match email addresses. Example match:","\t *","\t *     person@place.com","\t *","\t * @private","\t * @property {RegExp} matcherRegex","\t */","\tmatcherRegex : (function() {","\t\tvar alphaNumericChars = Autolinker.RegexLib.alphaNumericCharsStr,","\t\t    emailRegex = new RegExp( '[' + alphaNumericChars + '\\\\-_\\';:&=+$.,]+@' ),  // something@ for email addresses (a.k.a. local-part)","\t\t\tdomainNameRegex = Autolinker.RegexLib.domainNameRegex,","\t\t\ttldRegex = Autolinker.tldRegex;  // match our known top level domains (TLDs)","","\t\treturn new RegExp( [","\t\t\temailRegex.source,","\t\t\tdomainNameRegex.source,","\t\t\t'\\\\.', tldRegex.source   // '.com', '.net', etc","\t\t].join( \"\" ), 'gi' );","\t} )(),","","","\t/**","\t * @inheritdoc","\t */","\tparseMatches : function( text ) {","\t\tvar matcherRegex = this.matcherRegex,","\t\t    tagBuilder = this.tagBuilder,","\t\t    matches = [],","\t\t    match;","","\t\twhile( ( match = matcherRegex.exec( text ) ) !== null ) {","\t\t\tvar matchedText = match[ 0 ];","","\t\t\tmatches.push( new Autolinker.match.Email( {","\t\t\t\ttagBuilder  : tagBuilder,","\t\t\t\tmatchedText : matchedText,","\t\t\t\toffset      : match.index,","\t\t\t\temail       : matchedText","\t\t\t} ) );","\t\t}","","\t\treturn matches;","\t}","","} );","","/*global Autolinker */","/**"," * @class Autolinker.matcher.Hashtag"," * @extends Autolinker.matcher.Matcher"," *"," * Matcher to find Hashtag matches in an input string."," */","Autolinker.matcher.Hashtag = Autolinker.Util.extend( Autolinker.matcher.Matcher, {","","\t/**","\t * @cfg {String} serviceName","\t *","\t * The service to point hashtag matches to. See {@link Autolinker#hashtag}","\t * for available values.","\t */","","","\t/**","\t * The regular expression to match Hashtags. Example match:","\t *","\t *     #asdf","\t *","\t * @private","\t * @property {RegExp} matcherRegex","\t */","\tmatcherRegex : new RegExp( '#[_' + Autolinker.RegexLib.alphaNumericCharsStr + ']{1,139}', 'g' ),","","\t/**","\t * The regular expression to use to check the character before a username match to","\t * make sure we didn't accidentally match an email address.","\t *","\t * For example, the string \"asdf@asdf.com\" should not match \"@asdf\" as a username.","\t *","\t * @private","\t * @property {RegExp} nonWordCharRegex","\t */","\tnonWordCharRegex : new RegExp( '[^' + Autolinker.RegexLib.alphaNumericCharsStr + ']' ),","","","\t/**","\t * @constructor","\t * @param {Object} cfg The configuration properties for the Match instance,","\t *   specified in an Object (map).","\t */","\tconstructor : function( cfg ) {","\t\tAutolinker.matcher.Matcher.prototype.constructor.call( this, cfg );","","\t\tthis.serviceName = cfg.serviceName;","\t},","","","\t/**","\t * @inheritdoc","\t */","\tparseMatches : function( text ) {","\t\tvar matcherRegex = this.matcherRegex,","\t\t    nonWordCharRegex = this.nonWordCharRegex,","\t\t    serviceName = this.serviceName,","\t\t    tagBuilder = this.tagBuilder,","\t\t    matches = [],","\t\t    match;","","\t\twhile( ( match = matcherRegex.exec( text ) ) !== null ) {","\t\t\tvar offset = match.index,","\t\t\t    prevChar = text.charAt( offset - 1 );","","\t\t\t// If we found the match at the beginning of the string, or we found the match","\t\t\t// and there is a whitespace char in front of it (meaning it is not a '#' char","\t\t\t// in the middle of a word), then it is a hashtag match.","\t\t\tif( offset === 0 || nonWordCharRegex.test( prevChar ) ) {","\t\t\t\tvar matchedText = match[ 0 ],","\t\t\t\t    hashtag = match[ 0 ].slice( 1 );  // strip off the '#' character at the beginning","","\t\t\t\tmatches.push( new Autolinker.match.Hashtag( {","\t\t\t\t\ttagBuilder  : tagBuilder,","\t\t\t\t\tmatchedText : matchedText,","\t\t\t\t\toffset      : offset,","\t\t\t\t\tserviceName : serviceName,","\t\t\t\t\thashtag     : hashtag","\t\t\t\t} ) );","\t\t\t}","\t\t}","","\t\treturn matches;","\t}","","} );","/*global Autolinker */","/**"," * @class Autolinker.matcher.Phone"," * @extends Autolinker.matcher.Matcher"," *"," * Matcher to find Phone number matches in an input string."," *"," * See this class's superclass ({@link Autolinker.matcher.Matcher}) for more"," * details."," */","Autolinker.matcher.Phone = Autolinker.Util.extend( Autolinker.matcher.Matcher, {","","\t/**","\t * The regular expression to match Phone numbers. Example match:","\t *","\t *     (123) 456-7890","\t *","\t * This regular expression has the following capturing groups:","\t *","\t * 1. The prefixed '+' sign, if there is one.","\t *","\t * @private","\t * @property {RegExp} matcherRegex","\t */","    matcherRegex : /(?:(\\+)?\\d{1,3}[-\\040.]?)?\\(?\\d{3}\\)?[-\\040.]?\\d{3}[-\\040.]?\\d{4}([,;]*[0-9]+#?)*/g,    ","    ","    // ex: (123) 456-7890, 123 456 7890, 123-456-7890, +18004441234,,;,10226420346#, ","    // +1 (800) 444 1234, 10226420346#, 1-800-444-1234,1022,64,20346#","","\t/**","\t * @inheritdoc","\t */","\tparseMatches: function(text) {","\t\tvar matcherRegex = this.matcherRegex,","\t\t\ttagBuilder = this.tagBuilder,","\t\t\tmatches = [],","\t\t\tmatch;","","\t\twhile ((match = matcherRegex.exec(text)) !== null) {","\t\t\t// Remove non-numeric values from phone number string","\t\t\tvar matchedText = match[0],","\t\t\t\tcleanNumber = matchedText.replace(/[^0-9,;#]/g, ''), // strip out non-digit characters exclude comma semicolon and #","\t\t\t\tplusSign = !!match[1]; // match[ 1 ] is the prefixed plus sign, if there is one","\t\t\tif (/\\D/.test(match[2]) && /\\D/.test(matchedText)) {","    \t\t\tmatches.push(new Autolinker.match.Phone({","    \t\t\t\ttagBuilder: tagBuilder,","    \t\t\t\tmatchedText: matchedText,","    \t\t\t\toffset: match.index,","    \t\t\t\tnumber: cleanNumber,","    \t\t\t\tplusSign: plusSign","    \t\t\t}));","            }","\t\t}","","\t\treturn matches;","\t}","","} );","/*global Autolinker */","/**"," * @class Autolinker.matcher.Mention"," * @extends Autolinker.matcher.Matcher"," *"," * Matcher to find/replace username matches in an input string."," */","Autolinker.matcher.Mention = Autolinker.Util.extend( Autolinker.matcher.Matcher, {","","\t/**","\t * Hash of regular expression to match username handles. Example match:","\t *","\t *     @asdf","\t *","\t * @private","\t * @property {Object} matcherRegexes","\t */","\tmatcherRegexes : {","\t\t\"twitter\": new RegExp( '@[_' + Autolinker.RegexLib.alphaNumericCharsStr + ']{1,20}', 'g' ),","\t\t\"instagram\": new RegExp( '@[_.' + Autolinker.RegexLib.alphaNumericCharsStr + ']{1,50}', 'g' )","\t},","","\t/**","\t * The regular expression to use to check the character before a username match to","\t * make sure we didn't accidentally match an email address.","\t *","\t * For example, the string \"asdf@asdf.com\" should not match \"@asdf\" as a username.","\t *","\t * @private","\t * @property {RegExp} nonWordCharRegex","\t */","\tnonWordCharRegex : new RegExp( '[^' + Autolinker.RegexLib.alphaNumericCharsStr + ']' ),","","","\t/**","\t * @constructor","\t * @param {Object} cfg The configuration properties for the Match instance,","\t *   specified in an Object (map).","\t */","\tconstructor : function( cfg ) {","\t\tAutolinker.matcher.Matcher.prototype.constructor.call( this, cfg );","","\t\tthis.serviceName = cfg.serviceName;","\t},","","","\t/**","\t * @inheritdoc","\t */","\tparseMatches : function( text ) {","\t\tvar matcherRegex = this.matcherRegexes[this.serviceName],","\t\t    nonWordCharRegex = this.nonWordCharRegex,","\t\t    serviceName = this.serviceName,","\t\t    tagBuilder = this.tagBuilder,","\t\t    matches = [],","\t\t    match;","","\t\tif (!matcherRegex) {","\t\t\treturn matches;","\t\t}","","\t\twhile( ( match = matcherRegex.exec( text ) ) !== null ) {","\t\t\tvar offset = match.index,","\t\t\t    prevChar = text.charAt( offset - 1 );","","\t\t\t// If we found the match at the beginning of the string, or we found the match","\t\t\t// and there is a whitespace char in front of it (meaning it is not an email","\t\t\t// address), then it is a username match.","\t\t\tif( offset === 0 || nonWordCharRegex.test( prevChar ) ) {","\t\t\t\tvar matchedText = match[ 0 ].replace(/\\.+$/g, ''), // strip off trailing .","\t\t\t\t    mention = matchedText.slice( 1 );  // strip off the '@' character at the beginning","","\t\t\t\tmatches.push( new Autolinker.match.Mention( {","\t\t\t\t\ttagBuilder    : tagBuilder,","\t\t\t\t\tmatchedText   : matchedText,","\t\t\t\t\toffset        : offset,","\t\t\t\t\tserviceName   : serviceName,","\t\t\t\t\tmention       : mention","\t\t\t\t} ) );","\t\t\t}","\t\t}","","\t\treturn matches;","\t}","","} );","","/*global Autolinker */","/**"," * @class Autolinker.matcher.Url"," * @extends Autolinker.matcher.Matcher"," *"," * Matcher to find URL matches in an input string."," *"," * See this class's superclass ({@link Autolinker.matcher.Matcher}) for more details."," */","Autolinker.matcher.Url = Autolinker.Util.extend( Autolinker.matcher.Matcher, {","","\t/**","\t * @cfg {Object} stripPrefix (required)","\t *","\t * The Object form of {@link Autolinker#cfg-stripPrefix}.","\t */","","\t/**","\t * @cfg {Boolean} stripTrailingSlash (required)","\t * @inheritdoc Autolinker#stripTrailingSlash","\t */","","","\t/**","\t * @private","\t * @property {RegExp} matcherRegex","\t *","\t * The regular expression to match URLs with an optional scheme, port","\t * number, path, query string, and hash anchor.","\t *","\t * Example matches:","\t *","\t *     http://google.com","\t *     www.google.com","\t *     google.com/path/to/file?q1=1&q2=2#myAnchor","\t *","\t *","\t * This regular expression will have the following capturing groups:","\t *","\t * 1.  Group that matches a scheme-prefixed URL (i.e. 'http://google.com').","\t *     This is used to match scheme URLs with just a single word, such as","\t *     'http://localhost', where we won't double check that the domain name","\t *     has at least one dot ('.') in it.","\t * 2.  Group that matches a 'www.' prefixed URL. This is only matched if the","\t *     'www.' text was not prefixed by a scheme (i.e.: not prefixed by","\t *     'http://', 'ftp:', etc.)","\t * 3.  A protocol-relative ('//') match for the case of a 'www.' prefixed","\t *     URL. Will be an empty string if it is not a protocol-relative match.","\t *     We need to know the character before the '//' in order to determine","\t *     if it is a valid match or the // was in a string we don't want to","\t *     auto-link.","\t * 4.  Group that matches a known TLD (top level domain), when a scheme","\t *     or 'www.'-prefixed domain is not matched.","\t * 5.  A protocol-relative ('//') match for the case of a known TLD prefixed","\t *     URL. Will be an empty string if it is not a protocol-relative match.","\t *     See #3 for more info.","\t */","\tmatcherRegex : (function() {","\t\tvar schemeRegex = /(?:[A-Za-z][-.+A-Za-z0-9]*:(?![A-Za-z][-.+A-Za-z0-9]*:\\/\\/)(?!\\d+\\/?)(?:\\/\\/)?)/,  // match protocol, allow in format \"http://\" or \"mailto:\". However, do not match the first part of something like 'link:http://www.google.com' (i.e. don't match \"link:\"). Also, make sure we don't interpret 'google.com:8000' as if 'google.com' was a protocol here (i.e. ignore a trailing port number in this regex)","\t\t    wwwRegex = /(?:www\\.)/,                  // starting with 'www.'","\t\t    domainNameRegex = Autolinker.RegexLib.domainNameRegex,","\t\t    tldRegex = Autolinker.tldRegex,  // match our known top level domains (TLDs)","\t\t    alphaNumericCharsStr = Autolinker.RegexLib.alphaNumericCharsStr,","","\t\t    // Allow optional path, query string, and hash anchor, not ending in the following characters: \"?!:,.;\"","\t\t    // http://blog.codinghorror.com/the-problem-with-urls/","\t\t    urlSuffixRegex = new RegExp( '[/?#](?:[' + alphaNumericCharsStr + '\\\\-+&@#/%=~_()|\\'$*\\\\[\\\\]?!:,.;\\u2713]*[' + alphaNumericCharsStr + '\\\\-+&@#/%=~_()|\\'$*\\\\[\\\\]\\u2713])?' );","","\t\treturn new RegExp( [","\t\t\t'(?:', // parens to cover match for scheme (optional), and domain","\t\t\t\t'(',  // *** Capturing group $1, for a scheme-prefixed url (ex: http://google.com)","\t\t\t\t\tschemeRegex.source,","\t\t\t\t\tdomainNameRegex.source,","\t\t\t\t')',","","\t\t\t\t'|',","","\t\t\t\t'(',  // *** Capturing group $2, for a 'www.' prefixed url (ex: www.google.com)","\t\t\t\t\t'(//)?',  // *** Capturing group $3 for an optional protocol-relative URL. Must be at the beginning of the string or start with a non-word character (handled later)","\t\t\t\t\twwwRegex.source,","\t\t\t\t\tdomainNameRegex.source,","\t\t\t\t')',","","\t\t\t\t'|',","","\t\t\t\t'(',  // *** Capturing group $4, for known a TLD url (ex: google.com)","\t\t\t\t\t'(//)?',  // *** Capturing group $5 for an optional protocol-relative URL. Must be at the beginning of the string or start with a non-word character (handled later)","\t\t\t\t\tdomainNameRegex.source + '\\\\.',","\t\t\t\t\ttldRegex.source,","\t\t\t\t\t'(?![-' + alphaNumericCharsStr + '])', // TLD not followed by a letter, behaves like unicode-aware \\b","\t\t\t\t')',","\t\t\t')',","","\t\t\t'(?::[0-9]+)?', // port","","\t\t\t'(?:' + urlSuffixRegex.source + ')?'  // match for path, query string, and/or hash anchor - optional","\t\t].join( \"\" ), 'gi' );","\t} )(),","","","\t/**","\t * A regular expression to use to check the character before a protocol-relative","\t * URL match. We don't want to match a protocol-relative URL if it is part","\t * of another word.","\t *","\t * For example, we want to match something like \"Go to: //google.com\",","\t * but we don't want to match something like \"abc//google.com\"","\t *","\t * This regular expression is used to test the character before the '//'.","\t *","\t * @private","\t * @type {RegExp} wordCharRegExp","\t */","\twordCharRegExp : new RegExp( '[' + Autolinker.RegexLib.alphaNumericCharsStr + ']' ),","","","\t/**","\t * The regular expression to match opening parenthesis in a URL match.","\t *","\t * This is to determine if we have unbalanced parenthesis in the URL, and to","\t * drop the final parenthesis that was matched if so.","\t *","\t * Ex: The text \"(check out: wikipedia.com/something_(disambiguation))\"","\t * should only autolink the inner \"wikipedia.com/something_(disambiguation)\"","\t * part, so if we find that we have unbalanced parenthesis, we will drop the","\t * last one for the match.","\t *","\t * @private","\t * @property {RegExp}","\t */","\topenParensRe : /\\(/g,","","\t/**","\t * The regular expression to match closing parenthesis in a URL match. See","\t * {@link #openParensRe} for more information.","\t *","\t * @private","\t * @property {RegExp}","\t */","\tcloseParensRe : /\\)/g,","","","\t/**","\t * @constructor","\t * @param {Object} cfg The configuration properties for the Match instance,","\t *   specified in an Object (map).","\t */","\tconstructor : function( cfg ) {","\t\tAutolinker.matcher.Matcher.prototype.constructor.call( this, cfg );","","\t\tif( cfg.stripPrefix == null ) throw new Error( '`stripPrefix` cfg required' );","\t\tif( cfg.stripTrailingSlash == null ) throw new Error( '`stripTrailingSlash` cfg required' );","","\t\tthis.stripPrefix = cfg.stripPrefix;","\t\tthis.stripTrailingSlash = cfg.stripTrailingSlash;","\t},","","","\t/**","\t * @inheritdoc","\t */","\tparseMatches : function( text ) {","\t\tvar matcherRegex = this.matcherRegex,","\t\t    stripPrefix = this.stripPrefix,","\t\t    stripTrailingSlash = this.stripTrailingSlash,","\t\t    tagBuilder = this.tagBuilder,","\t\t    matches = [],","\t\t    match;","","\t\twhile( ( match = matcherRegex.exec( text ) ) !== null ) {","\t\t\tvar matchStr = match[ 0 ],","\t\t\t    schemeUrlMatch = match[ 1 ],","\t\t\t    wwwUrlMatch = match[ 2 ],","\t\t\t    wwwProtocolRelativeMatch = match[ 3 ],","\t\t\t    //tldUrlMatch = match[ 4 ],  -- not needed at the moment","\t\t\t    tldProtocolRelativeMatch = match[ 5 ],","\t\t\t    offset = match.index,","\t\t\t    protocolRelativeMatch = wwwProtocolRelativeMatch || tldProtocolRelativeMatch,","\t\t\t\tprevChar = text.charAt( offset - 1 );","","\t\t\tif( !Autolinker.matcher.UrlMatchValidator.isValid( matchStr, schemeUrlMatch ) ) {","\t\t\t\tcontinue;","\t\t\t}","","\t\t\t// If the match is preceded by an '@' character, then it is either","\t\t\t// an email address or a username. Skip these types of matches.","\t\t\tif( offset > 0 && prevChar === '@' ) {","\t\t\t\tcontinue;","\t\t\t}","","\t\t\t// If it's a protocol-relative '//' match, but the character before the '//'","\t\t\t// was a word character (i.e. a letter/number), then we found the '//' in the","\t\t\t// middle of another word (such as \"asdf//asdf.com\"). In this case, skip the","\t\t\t// match.","\t\t\tif( offset > 0 && protocolRelativeMatch && this.wordCharRegExp.test( prevChar ) ) {","\t\t\t\tcontinue;","\t\t\t}","","\t\t\tif( /\\?$/.test(matchStr) ) {","\t\t\t\tmatchStr = matchStr.substr(0, matchStr.length-1);","\t\t\t}","","\t\t\t// Handle a closing parenthesis at the end of the match, and exclude","\t\t\t// it if there is not a matching open parenthesis in the match","\t\t\t// itself.","\t\t\tif( this.matchHasUnbalancedClosingParen( matchStr ) ) {","\t\t\t\tmatchStr = matchStr.substr( 0, matchStr.length - 1 );  // remove the trailing \")\"","\t\t\t} else {","\t\t\t\t// Handle an invalid character after the TLD","\t\t\t\tvar pos = this.matchHasInvalidCharAfterTld( matchStr, schemeUrlMatch );","\t\t\t\tif( pos > -1 ) {","\t\t\t\t\tmatchStr = matchStr.substr( 0, pos ); // remove the trailing invalid chars","\t\t\t\t}","\t\t\t}","","\t\t\tvar urlMatchType = schemeUrlMatch ? 'scheme' : ( wwwUrlMatch ? 'www' : 'tld' ),","\t\t\t    protocolUrlMatch = !!schemeUrlMatch;","","\t\t\tmatches.push( new Autolinker.match.Url( {","\t\t\t\ttagBuilder            : tagBuilder,","\t\t\t\tmatchedText           : matchStr,","\t\t\t\toffset                : offset,","\t\t\t\turlMatchType          : urlMatchType,","\t\t\t\turl                   : matchStr,","\t\t\t\tprotocolUrlMatch      : protocolUrlMatch,","\t\t\t\tprotocolRelativeMatch : !!protocolRelativeMatch,","\t\t\t\tstripPrefix           : stripPrefix,","\t\t\t\tstripTrailingSlash    : stripTrailingSlash","\t\t\t} ) );","\t\t}","","\t\treturn matches;","\t},","","","\t/**","\t * Determines if a match found has an unmatched closing parenthesis. If so,","\t * this parenthesis will be removed from the match itself, and appended","\t * after the generated anchor tag.","\t *","\t * A match may have an extra closing parenthesis at the end of the match","\t * because the regular expression must include parenthesis for URLs such as","\t * \"wikipedia.com/something_(disambiguation)\", which should be auto-linked.","\t *","\t * However, an extra parenthesis *will* be included when the URL itself is","\t * wrapped in parenthesis, such as in the case of \"(wikipedia.com/something_(disambiguation))\".","\t * In this case, the last closing parenthesis should *not* be part of the","\t * URL itself, and this method will return `true`.","\t *","\t * @private","\t * @param {String} matchStr The full match string from the {@link #matcherRegex}.","\t * @return {Boolean} `true` if there is an unbalanced closing parenthesis at","\t *   the end of the `matchStr`, `false` otherwise.","\t */","\tmatchHasUnbalancedClosingParen : function( matchStr ) {","\t\tvar lastChar = matchStr.charAt( matchStr.length - 1 );","","\t\tif( lastChar === ')' ) {","\t\t\tvar openParensMatch = matchStr.match( this.openParensRe ),","\t\t\t    closeParensMatch = matchStr.match( this.closeParensRe ),","\t\t\t    numOpenParens = ( openParensMatch && openParensMatch.length ) || 0,","\t\t\t    numCloseParens = ( closeParensMatch && closeParensMatch.length ) || 0;","","\t\t\tif( numOpenParens < numCloseParens ) {","\t\t\t\treturn true;","\t\t\t}","\t\t}","","\t\treturn false;","\t},","","","\t/**","\t * Determine if there's an invalid character after the TLD in a URL. Valid","\t * characters after TLD are ':/?#'. Exclude scheme matched URLs from this","\t * check.","\t *","\t * @private","\t * @param {String} urlMatch The matched URL, if there was one. Will be an","\t *   empty string if the match is not a URL match.","\t * @param {String} schemeUrlMatch The match URL string for a scheme","\t *   match. Ex: 'http://yahoo.com'. This is used to match something like","\t *   'http://localhost', where we won't double check that the domain name","\t *   has at least one '.' in it.","\t * @return {Number} the position where the invalid character was found. If","\t *   no such character was found, returns -1","\t */","\tmatchHasInvalidCharAfterTld : function( urlMatch, schemeUrlMatch ) {","\t\tif( !urlMatch ) {","\t\t\treturn -1;","\t\t}","","\t\tvar offset = 0;","\t\tif ( schemeUrlMatch ) {","\t\t\toffset = urlMatch.indexOf(':');","\t\t\turlMatch = urlMatch.slice(offset);","\t\t}","","\t\tvar alphaNumeric = Autolinker.RegexLib.alphaNumericCharsStr;","","\t\tvar re = new RegExp(\"^((.?\\/\\/)?[-.\" + alphaNumeric + \"]*[-\" + alphaNumeric + \"]\\\\.[-\" + alphaNumeric + \"]+)\");","\t\tvar res = re.exec( urlMatch );","\t\tif ( res === null ) {","\t\t\treturn -1;","\t\t}","","\t\toffset += res[1].length;","\t\turlMatch = urlMatch.slice(res[1].length);","\t\tif (/^[^-.A-Za-z0-9:\\/?#]/.test(urlMatch)) {","\t\t\treturn offset;","\t\t}","","\t\treturn -1;","\t}","","} );","","/*global Autolinker */","/*jshint scripturl:true */","/**"," * @private"," * @class Autolinker.matcher.UrlMatchValidator"," * @singleton"," *"," * Used by Autolinker to filter out false URL positives from the"," * {@link Autolinker.matcher.Url UrlMatcher}."," *"," * Due to the limitations of regular expressions (including the missing feature"," * of look-behinds in JS regular expressions), we cannot always determine the"," * validity of a given match. This class applies a bit of additional logic to"," * filter out any false positives that have been matched by the"," * {@link Autolinker.matcher.Url UrlMatcher}."," */","Autolinker.matcher.UrlMatchValidator = {","","\t/**","\t * Regex to test for a full protocol, with the two trailing slashes. Ex: 'http://'","\t *","\t * @private","\t * @property {RegExp} hasFullProtocolRegex","\t */","\thasFullProtocolRegex : /^[A-Za-z][-.+A-Za-z0-9]*:\\/\\//,","","\t/**","\t * Regex to find the URI scheme, such as 'mailto:'.","\t *","\t * This is used to filter out 'javascript:' and 'vbscript:' schemes.","\t *","\t * @private","\t * @property {RegExp} uriSchemeRegex","\t */","\turiSchemeRegex : /^[A-Za-z][-.+A-Za-z0-9]*:/,","","\t/**","\t * Regex to determine if at least one word char exists after the protocol (i.e. after the ':')","\t *","\t * @private","\t * @property {RegExp} hasWordCharAfterProtocolRegex","\t */","\thasWordCharAfterProtocolRegex : new RegExp(\":[^\\\\s]*?[\" + Autolinker.RegexLib.alphaCharsStr + \"]\"),","","\t/**","\t * Regex to determine if the string is a valid IP address","\t *","\t * @private","\t * @property {RegExp} ipRegex","\t */","\tipRegex: /[0-9][0-9]?[0-9]?\\.[0-9][0-9]?[0-9]?\\.[0-9][0-9]?[0-9]?\\.[0-9][0-9]?[0-9]?(:[0-9]*)?\\/?$/,","","\t/**","\t * Determines if a given URL match found by the {@link Autolinker.matcher.Url UrlMatcher}","\t * is valid. Will return `false` for:","\t *","\t * 1) URL matches which do not have at least have one period ('.') in the","\t *    domain name (effectively skipping over matches like \"abc:def\").","\t *    However, URL matches with a protocol will be allowed (ex: 'http://localhost')","\t * 2) URL matches which do not have at least one word character in the","\t *    domain name (effectively skipping over matches like \"git:1.0\").","\t * 3) A protocol-relative url match (a URL beginning with '//') whose","\t *    previous character is a word character (effectively skipping over","\t *    strings like \"abc//google.com\")","\t *","\t * Otherwise, returns `true`.","\t *","\t * @param {String} urlMatch The matched URL, if there was one. Will be an","\t *   empty string if the match is not a URL match.","\t * @param {String} protocolUrlMatch The match URL string for a protocol","\t *   match. Ex: 'http://yahoo.com'. This is used to match something like","\t *   'http://localhost', where we won't double check that the domain name","\t *   has at least one '.' in it.","\t * @return {Boolean} `true` if the match given is valid and should be","\t *   processed, or `false` if the match is invalid and/or should just not be","\t *   processed.","\t */","\tisValid : function( urlMatch, protocolUrlMatch ) {","\t\tif(","\t\t\t( protocolUrlMatch && !this.isValidUriScheme( protocolUrlMatch ) ) ||","\t\t\tthis.urlMatchDoesNotHaveProtocolOrDot( urlMatch, protocolUrlMatch ) ||    // At least one period ('.') must exist in the URL match for us to consider it an actual URL, *unless* it was a full protocol match (like 'http://localhost')","\t\t\t(this.urlMatchDoesNotHaveAtLeastOneWordChar( urlMatch, protocolUrlMatch ) && // At least one letter character must exist in the domain name after a protocol match. Ex: skip over something like \"git:1.0\"","\t\t\t   !this.isValidIpAddress( urlMatch )) || // Except if it's an IP address","\t\t\tthis.containsMultipleDots( urlMatch )","\t\t) {","\t\t\treturn false;","\t\t}","","\t\treturn true;","\t},","","","\tisValidIpAddress : function ( uriSchemeMatch ) {","\t\tvar newRegex = new RegExp(this.hasFullProtocolRegex.source + this.ipRegex.source);","\t\tvar uriScheme = uriSchemeMatch.match( newRegex );","","\t\treturn uriScheme !== null;","\t},","","\tcontainsMultipleDots : function ( urlMatch ) {","\t\treturn urlMatch.indexOf(\"..\") > -1;","\t},","","\t/**","\t * Determines if the URI scheme is a valid scheme to be autolinked. Returns","\t * `false` if the scheme is 'javascript:' or 'vbscript:'","\t *","\t * @private","\t * @param {String} uriSchemeMatch The match URL string for a full URI scheme","\t *   match. Ex: 'http://yahoo.com' or 'mailto:a@a.com'.","\t * @return {Boolean} `true` if the scheme is a valid one, `false` otherwise.","\t */","\tisValidUriScheme : function( uriSchemeMatch ) {","\t\tvar uriScheme = uriSchemeMatch.match( this.uriSchemeRegex )[ 0 ].toLowerCase();","","\t\treturn ( uriScheme !== 'javascript:' && uriScheme !== 'vbscript:' );","\t},","","","\t/**","\t * Determines if a URL match does not have either:","\t *","\t * a) a full protocol (i.e. 'http://'), or","\t * b) at least one dot ('.') in the domain name (for a non-full-protocol","\t *    match).","\t *","\t * Either situation is considered an invalid URL (ex: 'git:d' does not have","\t * either the '://' part, or at least one dot in the domain name. If the","\t * match was 'git:abc.com', we would consider this valid.)","\t *","\t * @private","\t * @param {String} urlMatch The matched URL, if there was one. Will be an","\t *   empty string if the match is not a URL match.","\t * @param {String} protocolUrlMatch The match URL string for a protocol","\t *   match. Ex: 'http://yahoo.com'. This is used to match something like","\t *   'http://localhost', where we won't double check that the domain name","\t *   has at least one '.' in it.","\t * @return {Boolean} `true` if the URL match does not have a full protocol,","\t *   or at least one dot ('.') in a non-full-protocol match.","\t */","\turlMatchDoesNotHaveProtocolOrDot : function( urlMatch, protocolUrlMatch ) {","\t\treturn ( !!urlMatch && ( !protocolUrlMatch || !this.hasFullProtocolRegex.test( protocolUrlMatch ) ) && urlMatch.indexOf( '.' ) === -1 );","\t},","","","\t/**","\t * Determines if a URL match does not have at least one word character after","\t * the protocol (i.e. in the domain name).","\t *","\t * At least one letter character must exist in the domain name after a","\t * protocol match. Ex: skip over something like \"git:1.0\"","\t *","\t * @private","\t * @param {String} urlMatch The matched URL, if there was one. Will be an","\t *   empty string if the match is not a URL match.","\t * @param {String} protocolUrlMatch The match URL string for a protocol","\t *   match. Ex: 'http://yahoo.com'. This is used to know whether or not we","\t *   have a protocol in the URL string, in order to check for a word","\t *   character after the protocol separator (':').","\t * @return {Boolean} `true` if the URL match does not have at least one word","\t *   character in it after the protocol, `false` otherwise.","\t */","\turlMatchDoesNotHaveAtLeastOneWordChar : function( urlMatch, protocolUrlMatch ) {","\t\tif( urlMatch && protocolUrlMatch ) {","\t\t\treturn !this.hasWordCharAfterProtocolRegex.test( urlMatch );","\t\t} else {","\t\t\treturn false;","\t\t}","\t}","","};","","/*global Autolinker */","/**"," * A truncation feature where the ellipsis will be placed at the end of the URL."," *"," * @param {String} anchorText"," * @param {Number} truncateLen The maximum length of the truncated output URL string."," * @param {String} ellipsisChars The characters to place within the url, e.g. \"..\"."," * @return {String} The truncated URL."," */","Autolinker.truncate.TruncateEnd = function(anchorText, truncateLen, ellipsisChars){","\treturn Autolinker.Util.ellipsis( anchorText, truncateLen, ellipsisChars );","};","","/*global Autolinker */","/**"," * Date: 2015-10-05"," * Author: Kasper Søfren <soefritz@gmail.com> (https://github.com/kafoso)"," *"," * A truncation feature, where the ellipsis will be placed in the dead-center of the URL."," *"," * @param {String} url             A URL."," * @param {Number} truncateLen     The maximum length of the truncated output URL string."," * @param {String} ellipsisChars   The characters to place within the url, e.g. \"..\"."," * @return {String} The truncated URL."," */","Autolinker.truncate.TruncateMiddle = function(url, truncateLen, ellipsisChars){","  if (url.length <= truncateLen) {","    return url;","  }","","  var ellipsisLengthBeforeParsing;","  var ellipsisLength;","","  if(ellipsisChars == null) {","    ellipsisChars = '&hellip;';","    ellipsisLengthBeforeParsing = 8;","    ellipsisLength = 3;","  } else {","    ellipsisLengthBeforeParsing = ellipsisChars.length;","    ellipsisLength = ellipsisChars.length;","  }","","  var availableLength = truncateLen - ellipsisLength;","  var end = \"\";","  if (availableLength > 0) {","    end = url.substr((-1)*Math.floor(availableLength/2));","  }","  return (url.substr(0, Math.ceil(availableLength/2)) + ellipsisChars + end).substr(0, availableLength + ellipsisLengthBeforeParsing);","};","","/*global Autolinker */","/**"," * Date: 2015-10-05"," * Author: Kasper Søfren <soefritz@gmail.com> (https://github.com/kafoso)"," *"," * A truncation feature, where the ellipsis will be placed at a section within"," * the URL making it still somewhat human readable."," *"," * @param {String} url\t\t\t\t\t\t A URL."," * @param {Number} truncateLen\t\t The maximum length of the truncated output URL string."," * @param {String} ellipsisChars\t The characters to place within the url, e.g. \"...\"."," * @return {String} The truncated URL."," */","Autolinker.truncate.TruncateSmart = function(url, truncateLen, ellipsisChars){","","\tvar ellipsisLengthBeforeParsing;","\tvar ellipsisLength;","","\tif(ellipsisChars == null) {","\t\tellipsisChars = '&hellip;';","\t\tellipsisLength = 3;","\t\tellipsisLengthBeforeParsing = 8;","\t} else {","\t\tellipsisLength = ellipsisChars.length;","\t\tellipsisLengthBeforeParsing = ellipsisChars.length;","\t}","","\tvar parse_url = function(url){ // Functionality inspired by PHP function of same name","\t\tvar urlObj = {};","\t\tvar urlSub = url;","\t\tvar match = urlSub.match(/^([a-z]+):\\/\\//i);","\t\tif (match) {","\t\t\turlObj.scheme = match[1];","\t\t\turlSub = urlSub.substr(match[0].length);","\t\t}","\t\tmatch = urlSub.match(/^(.*?)(?=(\\?|#|\\/|$))/i);","\t\tif (match) {","\t\t\turlObj.host = match[1];","\t\t\turlSub = urlSub.substr(match[0].length);","\t\t}","\t\tmatch = urlSub.match(/^\\/(.*?)(?=(\\?|#|$))/i);","\t\tif (match) {","\t\t\turlObj.path = match[1];","\t\t\turlSub = urlSub.substr(match[0].length);","\t\t}","\t\tmatch = urlSub.match(/^\\?(.*?)(?=(#|$))/i);","\t\tif (match) {","\t\t\turlObj.query = match[1];","\t\t\turlSub = urlSub.substr(match[0].length);","\t\t}","\t\tmatch = urlSub.match(/^#(.*?)$/i);","\t\tif (match) {","\t\t\turlObj.fragment = match[1];","\t\t\t//urlSub = urlSub.substr(match[0].length);  -- not used. Uncomment if adding another block.","\t\t}","\t\treturn urlObj;","\t};","","\tvar buildUrl = function(urlObj){","\t\tvar url = \"\";","\t\tif (urlObj.scheme && urlObj.host) {","\t\t\turl += urlObj.scheme + \"://\";","\t\t}","\t\tif (urlObj.host) {","\t\t\turl += urlObj.host;","\t\t}","\t\tif (urlObj.path) {","\t\t\turl += \"/\" + urlObj.path;","\t\t}","\t\tif (urlObj.query) {","\t\t\turl += \"?\" + urlObj.query;","\t\t}","\t\tif (urlObj.fragment) {","\t\t\turl += \"#\" + urlObj.fragment;","\t\t}","\t\treturn url;","\t};","","\tvar buildSegment = function(segment, remainingAvailableLength){","\t\tvar remainingAvailableLengthHalf = remainingAvailableLength/ 2,","\t\t\t\tstartOffset = Math.ceil(remainingAvailableLengthHalf),","\t\t\t\tendOffset = (-1)*Math.floor(remainingAvailableLengthHalf),","\t\t\t\tend = \"\";","\t\tif (endOffset < 0) {","\t\t\tend = segment.substr(endOffset);","\t\t}","\t\treturn segment.substr(0, startOffset) + ellipsisChars + end;","\t};","\tif (url.length <= truncateLen) {","\t\treturn url;","\t}","\tvar availableLength = truncateLen - ellipsisLength;","\tvar urlObj = parse_url(url);","\t// Clean up the URL","\tif (urlObj.query) {","\t\tvar matchQuery = urlObj.query.match(/^(.*?)(?=(\\?|\\#))(.*?)$/i);","\t\tif (matchQuery) {","\t\t\t// Malformed URL; two or more \"?\". Removed any content behind the 2nd.","\t\t\turlObj.query = urlObj.query.substr(0, matchQuery[1].length);","\t\t\turl = buildUrl(urlObj);","\t\t}","\t}","\tif (url.length <= truncateLen) {","\t\treturn url;","\t}","\tif (urlObj.host) {","\t\turlObj.host = urlObj.host.replace(/^www\\./, \"\");","\t\turl = buildUrl(urlObj);","\t}","\tif (url.length <= truncateLen) {","\t\treturn url;","\t}","\t// Process and build the URL","\tvar str = \"\";","\tif (urlObj.host) {","\t\tstr += urlObj.host;","\t}","\tif (str.length >= availableLength) {","\t\tif (urlObj.host.length == truncateLen) {","\t\t\treturn (urlObj.host.substr(0, (truncateLen - ellipsisLength)) + ellipsisChars).substr(0, availableLength + ellipsisLengthBeforeParsing);","\t\t}","\t\treturn buildSegment(str, availableLength).substr(0, availableLength + ellipsisLengthBeforeParsing);","\t}","\tvar pathAndQuery = \"\";","\tif (urlObj.path) {","\t\tpathAndQuery += \"/\" + urlObj.path;","\t}","\tif (urlObj.query) {","\t\tpathAndQuery += \"?\" + urlObj.query;","\t}","\tif (pathAndQuery) {","\t\tif ((str+pathAndQuery).length >= availableLength) {","\t\t\tif ((str+pathAndQuery).length == truncateLen) {","\t\t\t\treturn (str + pathAndQuery).substr(0, truncateLen);","\t\t\t}","\t\t\tvar remainingAvailableLength = availableLength - str.length;","\t\t\treturn (str + buildSegment(pathAndQuery, remainingAvailableLength)).substr(0, availableLength + ellipsisLengthBeforeParsing);","\t\t} else {","\t\t\tstr += pathAndQuery;","\t\t}","\t}","\tif (urlObj.fragment) {","\t\tvar fragment = \"#\"+urlObj.fragment;","\t\tif ((str+fragment).length >= availableLength) {","\t\t\tif ((str+fragment).length == truncateLen) {","\t\t\t\treturn (str + fragment).substr(0, truncateLen);","\t\t\t}","\t\t\tvar remainingAvailableLength2 = availableLength - str.length;","\t\t\treturn (str + buildSegment(fragment, remainingAvailableLength2)).substr(0, availableLength + ellipsisLengthBeforeParsing);","\t\t} else {","\t\t\tstr += fragment;","\t\t}","\t}","\tif (urlObj.scheme && urlObj.host) {","\t\tvar scheme = urlObj.scheme + \"://\";","\t\tif ((str+scheme).length < availableLength) {","\t\t\treturn (scheme + str).substr(0, truncateLen);","\t\t}","\t}","\tif (str.length <= truncateLen) {","\t\treturn str;","\t}","\tvar end = \"\";","\tif (availableLength > 0) {","\t\tend = str.substr((-1)*Math.floor(availableLength/2));","\t}","\treturn (str.substr(0, Math.ceil(availableLength/2)) + ellipsisChars + end).substr(0, availableLength + ellipsisLengthBeforeParsing);","};","","return Autolinker;","}));",""],"l":{"10":1,"11":1,"12":0,"13":1,"14":1,"16":0,"129":1,"130":0,"132":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"144":0,"145":0,"146":0,"150":0,"151":0,"152":0,"155":0,"156":0,"157":0,"158":0,"160":0,"161":0,"162":0,"189":1,"190":0,"191":0,"229":1,"230":0,"231":0,"243":1,"246":1,"513":0,"515":0,"516":0,"519":0,"539":0,"541":0,"542":0,"545":0,"564":0,"565":0,"568":0,"608":0,"615":0,"616":0,"619":0,"620":0,"621":0,"623":0,"626":0,"627":0,"629":0,"637":0,"643":0,"645":0,"660":0,"662":0,"663":0,"668":0,"670":0,"671":0,"672":0,"673":0,"677":0,"678":0,"683":0,"699":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"708":0,"709":0,"711":0,"712":0,"715":0,"741":0,"742":0,"745":0,"746":0,"752":0,"753":0,"756":0,"758":0,"781":0,"783":0,"787":0,"788":0,"790":0,"791":0,"793":0,"795":0,"797":0,"815":0,"816":0,"817":0,"820":0,"821":0,"823":0,"824":0,"826":0,"827":0,"831":0,"833":0,"846":0,"848":0,"849":0,"852":0,"864":0,"865":0,"868":0,"876":0,"879":0,"906":0,"908":0,"909":0,"916":0,"924":1,"925":1,"926":1,"927":1,"937":1,"944":0,"965":20,"966":102,"967":102,"971":20,"984":0,"985":0,"986":0,"990":0,"1003":20,"1005":20,"1006":20,"1008":20,"1009":20,"1010":13,"1012":7,"1015":20,"1016":20,"1017":20,"1019":20,"1020":20,"1022":20,"1037":0,"1039":0,"1040":0,"1041":0,"1042":0,"1044":0,"1047":0,"1049":0,"1061":0,"1062":0,"1065":0,"1066":0,"1068":0,"1088":0,"1089":0,"1090":0,"1120":0,"1122":0,"1126":0,"1127":0,"1128":0,"1130":0,"1132":0,"1134":0,"1145":0,"1226":1,"1276":0,"1278":0,"1289":0,"1290":0,"1300":0,"1312":0,"1313":0,"1315":0,"1326":0,"1337":0,"1338":0,"1340":0,"1350":0,"1361":0,"1372":0,"1379":0,"1380":0,"1381":0,"1385":0,"1386":0,"1397":0,"1404":0,"1405":0,"1406":0,"1407":0,"1411":0,"1412":0,"1423":0,"1434":0,"1445":0,"1447":0,"1457":0,"1467":0,"1470":0,"1472":0,"1484":0,"1486":0,"1489":0,"1490":0,"1491":0,"1494":0,"1510":1,"1527":1,"1543":1,"1547":1,"1551":1,"1553":1,"1620":1,"1643":0,"1645":0,"1646":0,"1647":0,"1660":0,"1678":0,"1682":0,"1683":0,"1684":0,"1686":0,"1687":0,"1688":0,"1691":0,"1692":0,"1693":0,"1697":0,"1722":0,"1724":0,"1725":0,"1728":0,"1731":0,"1732":0,"1734":0,"1749":0,"1751":0,"1767":0,"1768":0,"1770":0,"1773":0,"1774":0,"1776":0,"1777":0,"1780":0,"1797":1,"1816":1,"1822":1,"1907":0,"1913":0,"1914":0,"1922":0,"1923":0,"1924":0,"1928":0,"1929":0,"1931":0,"1934":0,"1938":0,"1939":0,"1942":0,"1943":0,"1949":0,"1950":0,"1955":0,"1973":0,"1979":0,"1980":0,"1983":0,"1984":0,"1985":0,"1987":0,"1988":0,"1989":0,"1992":0,"2007":0,"2030":0,"2050":0,"2064":0,"2087":1,"2119":0,"2121":0,"2122":0,"2142":0,"2152":0,"2167":1,"2184":0,"2194":0,"2208":1,"2232":0,"2243":0,"2254":0,"2273":1,"2281":0,"2295":1,"2303":0,"2339":1,"2367":0,"2368":0,"2369":0,"2371":0,"2372":0,"2373":0,"2392":0,"2409":0,"2420":0,"2464":0,"2484":0,"2498":1,"2513":0,"2515":0,"2517":0,"2527":0,"2537":0,"2547":0,"2557":0,"2572":1,"2594":0,"2597":0,"2599":0,"2600":0,"2610":0,"2621":0,"2631":0,"2641":0,"2644":0,"2646":0,"2648":0,"2650":0,"2653":0,"2664":0,"2680":1,"2708":0,"2710":0,"2711":0,"2713":0,"2714":0,"2724":0,"2737":0,"2747":0,"2757":0,"2771":1,"2793":0,"2795":0,"2796":0,"2798":0,"2799":0,"2809":0,"2819":0,"2830":0,"2840":0,"2842":0,"2844":0,"2847":0,"2858":0,"2870":0,"2873":0,"2874":0,"2876":0,"2890":1,"2940":0,"2942":0,"2943":0,"2944":0,"2945":0,"2946":0,"2947":0,"2949":0,"2950":0,"2951":0,"2952":0,"2953":0,"2954":0,"3000":0,"3016":0,"3027":0,"3030":0,"3031":0,"3033":0,"3036":0,"3046":0,"3048":0,"3058":0,"3060":0,"3062":0,"3064":0,"3065":0,"3067":0,"3068":0,"3070":0,"3071":0,"3074":0,"3092":0,"3105":0,"3118":0,"3131":0,"3132":0,"3134":0,"3142":1,"3155":1,"3171":0,"3173":0,"3197":1,"3208":1,"3213":1,"3225":0,"3230":0,"3231":0,"3233":0,"3241":0,"3253":1,"3291":0,"3293":0,"3301":0,"3308":0,"3309":0,"3315":0,"3316":0,"3319":0,"3329":0,"3343":1,"3366":0,"3371":0,"3373":0,"3376":0,"3377":0,"3387":0,"3398":1,"3431":0,"3433":0,"3441":0,"3448":0,"3449":0,"3452":0,"3453":0,"3459":0,"3460":0,"3463":0,"3473":0,"3487":1,"3536":1,"3546":1,"3626":0,"3628":0,"3629":0,"3631":0,"3632":0,"3640":0,"3647":0,"3648":0,"3658":0,"3659":0,"3664":0,"3665":0,"3672":0,"3673":0,"3676":0,"3677":0,"3683":0,"3684":0,"3687":0,"3688":0,"3689":0,"3693":0,"3696":0,"3709":0,"3733":0,"3735":0,"3736":0,"3741":0,"3742":0,"3746":0,"3766":0,"3767":0,"3770":0,"3771":0,"3772":0,"3773":0,"3776":0,"3778":0,"3779":0,"3780":0,"3781":0,"3784":0,"3785":0,"3786":0,"3787":0,"3790":0,"3811":1,"3873":0,"3880":0,"3883":0,"3888":0,"3889":0,"3891":0,"3895":0,"3908":0,"3910":0,"3936":0,"3958":0,"3959":0,"3961":0,"3976":1,"3977":0,"3992":1,"3993":0,"3994":0,"3997":0,"3998":0,"4000":0,"4001":0,"4002":0,"4003":0,"4005":0,"4006":0,"4009":0,"4010":0,"4011":0,"4012":0,"4014":0,"4030":1,"4032":0,"4033":0,"4035":0,"4036":0,"4037":0,"4038":0,"4040":0,"4041":0,"4044":0,"4045":0,"4046":0,"4047":0,"4048":0,"4049":0,"4050":0,"4052":0,"4053":0,"4054":0,"4055":0,"4057":0,"4058":0,"4059":0,"4060":0,"4062":0,"4063":0,"4064":0,"4065":0,"4067":0,"4068":0,"4069":0,"4072":0,"4075":0,"4076":0,"4077":0,"4078":0,"4080":0,"4081":0,"4083":0,"4084":0,"4086":0,"4087":0,"4089":0,"4090":0,"4092":0,"4095":0,"4096":0,"4100":0,"4101":0,"4103":0,"4105":0,"4106":0,"4108":0,"4109":0,"4111":0,"4112":0,"4113":0,"4115":0,"4116":0,"4119":0,"4120":0,"4122":0,"4123":0,"4124":0,"4126":0,"4127":0,"4130":0,"4131":0,"4132":0,"4134":0,"4135":0,"4136":0,"4138":0,"4140":0,"4141":0,"4142":0,"4144":0,"4145":0,"4147":0,"4148":0,"4149":0,"4150":0,"4152":0,"4153":0,"4155":0,"4158":0,"4159":0,"4160":0,"4161":0,"4162":0,"4164":0,"4165":0,"4167":0,"4170":0,"4171":0,"4172":0,"4173":0,"4176":0,"4177":0,"4179":0,"4180":0,"4181":0,"4183":0,"4186":1}}}